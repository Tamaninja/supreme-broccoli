<?xml version="1.0"?>
<doc>
    <assembly>
        <name>osu.Framework</name>
    </assembly>
    <members>
        <member name="T:osu.Framework.Allocation.AsyncDisposalQueue">
            <summary>
            A queue which batches object disposal on locally managed threads.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.AsyncDisposalQueue.Enqueue(System.IDisposable)">
            <summary>
            Enqueue a disposable object for asynchronous disposal.
            </summary>
            <param name="disposable">The object to dispose.</param>
        </member>
        <member name="M:osu.Framework.Allocation.AsyncDisposalQueue.WaitForEmpty">
            <summary>
            Wait until all items in the async disposal queue have been flushed.
            Will wait for a maximum of 10 seconds.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute">
            <summary>
            Marks a method as the (potentially asynchronous) initialization method of a <see cref="T:osu.Framework.Graphics.Drawable"/>, allowing for automatic injection of dependencies via the parameters of the method.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute.#ctor">
            <summary>
            Marks this method as the (potentially asynchronous) initializer for a class in the context of dependency injection.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute.#ctor(System.Boolean)">
            <summary>
            Marks this method as the (potentially asynchronous) initializer for a class in the context of dependency injection.
            </summary>
            <param name="permitNulls">If true, the initializer may be passed null for the dependencies we can't fulfill.</param>
        </member>
        <member name="T:osu.Framework.Allocation.CachedAttribute">
            <summary>
            An attribute that may be attached to a class, interface, field, or property definitions of a <see cref="T:osu.Framework.Graphics.Drawable"/>
            to indicate that the value should be cached as a dependency.
            Cached values may be resolved through <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/> or <see cref="T:osu.Framework.Allocation.ResolvedAttribute"/>.
            </summary>
            <remarks>
            The behaviour of this attribute differs in meaning depending on the type of member it is placed on.
            <list type="bullet">
            <item>
            <para>
            In the case of fields and properties, the dependency will be cached for the children of the drawable that contains the field or property.
            </para>
            <para>
            Unless specified differently by <see cref="F:osu.Framework.Allocation.CachedAttribute.Type"/>, the dependency will be cached using the field/property value's concrete (most-derived) type.
            See the examples section of the <see cref="F:osu.Framework.Allocation.CachedAttribute.Type"/> property documentation for further information.
            </para>
            </item>
            <item>
            <para>
            Instances of classes annotated with <see cref="T:osu.Framework.Allocation.CachedAttribute"/> will cache themselves for their own children.
            Unless specified differently by <see cref="F:osu.Framework.Allocation.CachedAttribute.Type"/>, the dependency will be cached using the type <em>at the point where the <see cref="T:osu.Framework.Allocation.CachedAttribute"/> was declared</em>.
            </para>
            <para>
            Note that while the <see cref="T:osu.Framework.Allocation.CachedAttribute"/> itself is not inherited, derived class instances will still cache themselves using the base class.
            See the examples section of the <see cref="F:osu.Framework.Allocation.CachedAttribute.Type"/> property documentation for further information.
            </para>
            </item>
            <item>
            If a class implements an interface annotated with <see cref="T:osu.Framework.Allocation.CachedAttribute"/>, then instances of that class will cache themselves for their own children using the interface type.
            As with classes, the <see cref="T:osu.Framework.Allocation.CachedAttribute"/> is not inherited between interfaces either,
            but an instance of a class will cache itself to children using all cacheable interface types that it implements.
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:osu.Framework.Allocation.CachedAttribute.Type">
             <summary>
             The type to cache the value as. If null, the type depends on the type of member that the attribute is placed on:
             <list type="bullet">
             <item>In the case of fields and properties, the attribute will use the concrete/most-derived type of the field/property's value.</item>
             <item>In the case of classes and interfaces, the attribute will use the class/interface type on which the <see cref="T:osu.Framework.Allocation.CachedAttribute"/> was <em>directly placed</em>.</item>
             </list>
             </summary>
             <example>
             <para>
             In the case of fields and properties, if this value is <see langword="null"/> on the following field definition:
             <code>
             [Cached]
             private BaseType obj = new DerivedType();
             </code>
             then the cached type will be <c>DerivedType</c>.
             </para>
             <para>
             In the case of classes, given the following structure:
             <code>
             [Cached]
             public class A { }
            
             public class B : A { }
             </code>
             the following things will happen:
             <list type="bullet">
             <item>Instances of <c>A</c> will cache themselves to children using type <c>A</c>.</item>
             <item>Instances of <c>B</c> will cache themselves to children using type <c>A</c>.</item>
             <item>
             Instances of <c>B</c> will <em>not</em> cache themselves to children using type <c>B</c>.
             To achieve that effect, the <see cref="T:osu.Framework.Allocation.CachedAttribute"/> has to be repeated on class <c>B</c>.
             </item>
             </list>
             <see cref="T:osu.Framework.Allocation.CachedAttribute"/> placed in interface inheritance hierarchies follows analogous rules to the ones described above for classes.
             </para>
             </example>
        </member>
        <member name="F:osu.Framework.Allocation.CachedAttribute.Name">
            <summary>
            The name to identify this member with.
            </summary>
            <remarks>
            If the member is cached with a custom <see cref="T:osu.Framework.Allocation.CacheInfo"/> that provides a parent, the name is automatically inferred from the field/property.
            </remarks>
        </member>
        <member name="M:osu.Framework.Allocation.CachedAttribute.#ctor">
            <summary>
            Identifies a member to be cached to a <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.CachedAttribute.#ctor(System.Type,System.String)">
            <summary>
            Identifies a member to be cached to a <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
            <param name="type">The type to cache the member as.</param>
            <param name="name">The name to identify the member as in the cache.</param>
        </member>
        <member name="T:osu.Framework.Allocation.NullDependencyException">
            <summary>
            The exception that is thrown when attempting to cache <see langword="null"/> using <see cref="T:osu.Framework.Allocation.CachedAttribute"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.CachedModelDependencyContainer`1">
            <summary>
            A <see cref="T:osu.Framework.Allocation.DependencyContainer"/> which caches a <typeparamref name="TModel"/> and members it contains attached with a <see cref="T:osu.Framework.Allocation.CachedAttribute"/> as dependencies.
            </summary>
            <remarks>
            Users can query the model by directly querying for the <typeparamref name="TModel"/> type,
            and query for the model's dependencies by providing the <typeparamref name="TModel"/> type as a parent.
            </remarks>
            <typeparam name="TModel">The type of the model to cache. Must contain only <see cref="T:osu.Framework.Bindables.Bindable`1"/> fields or auto-properties.</typeparam>
        </member>
        <member name="F:osu.Framework.Allocation.CachedModelDependencyContainer`1.Model">
            <summary>
            The <typeparamref name="TModel"/> that provides the cached values.
            </summary>
            <remarks>
            This model is not injected directly, users of the <see cref="T:osu.Framework.Allocation.CachedModelDependencyContainer`1"/> receive a shadow-bound copy of this value in all cases.
            </remarks>
        </member>
        <member name="M:osu.Framework.Allocation.CachedModelDependencyContainer`1.createChildShadowModel">
            <summary>
            Creates a new shadow model bound to <see cref="F:osu.Framework.Allocation.CachedModelDependencyContainer`1.shadowModel"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.CachedModelDependencyContainer`1.updateShadowModel(`0,`0,`0)">
            <summary>
            Updates a shadow model by unbinding from a previous model and binding to a new model.
            </summary>
            <param name="targetShadowModel">The shadow model to update.</param>
            <param name="lastModel">The model to unbind from.</param>
            <param name="newModel">The model to bind to.</param>
        </member>
        <member name="M:osu.Framework.Allocation.CachedModelDependencyContainer`1.perform(`0,System.Reflection.MemberInfo,`0,System.Action{osu.Framework.Bindables.IBindable,osu.Framework.Bindables.IBindable})">
            <summary>
            Perform an arbitrary action across a shadow model and model.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.CacheInfo.Name">
            <summary>
            The name of the cached member.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.CacheInfo.Parent">
            <summary>
            The type containing the cached member.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.CacheInfo.Type">
            <summary>
            The type of the cached member.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.DependencyActivator">
            <summary>
            Helper class that provides methods to merge dependencies of objects and inject dependencies into objects.
            The process of merging/injecting dependencies into objects happens in a "bottom-up" manner from least derived to most derived.
            E.g. Drawable -> CompositeDrawable -> Toolbar, etc...
            </summary>
            <remarks>
            Injection of dependencies is ordered into two processes:
            <para>1) Inject into properties marked with <see cref="T:osu.Framework.Allocation.ResolvedAttribute"/>.</para>
            2) Invoke methods marked with <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyActivator.ClearCache">
            <summary>
            Clears the dependency activator function cache.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyActivator.Activate``1(``0,osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Injects dependencies from a <see cref="T:osu.Framework.Allocation.DependencyContainer"/> into an object.
            </summary>
            <param name="obj">The object to inject the dependencies into.</param>
            <param name="dependencies">The dependencies to use for injection.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyActivator.MergeDependencies``1(``0,osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Merges existing dependencies with new dependencies from an object into a new <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/>.
            </summary>
            <param name="obj">The object whose dependencies should be merged into the dependencies provided by <paramref name="dependencies"/>.</param>
            <param name="dependencies">The existing dependencies.</param>
            <param name="info">Extra information to identify parameters of <paramref name="obj"/> in the cache with.</param>
            <returns>A new <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> if <paramref name="obj"/> provides any dependencies, otherwise <paramref name="dependencies"/>.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyActivator.initialiseSourceGeneratedActivators(System.Object)">
            <summary>
            Initialises a potential <see cref="T:osu.Framework.Allocation.ISourceGeneratedDependencyActivator"/> object.
            </summary>
            <param name="obj">The object to initialise.</param>
        </member>
        <member name="T:osu.Framework.Allocation.DependencyActivator.DependencyActivatorProxy">
            <summary>
            A proxy class used to register activation functions for objects implementing <see cref="T:osu.Framework.Allocation.ISourceGeneratedDependencyActivator"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.MultipleDependencyLoaderMethodsException">
            <summary>
            Occurs when multiple <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/>s exist in one object.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.DependencyNotRegisteredException">
            <summary>
            Occurs when an object requests the resolution of a dependency, but the dependency doesn't exist.
            This is caused by the dependency not being registered by parent <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> through
            <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.CreateChildDependencies(osu.Framework.Allocation.IReadOnlyDependencyContainer)"/> or <see cref="T:osu.Framework.Allocation.CachedAttribute"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.AccessModifierNotAllowedForMemberException">
            <summary>
            Occurs when a dependency-related operation occurred on a member with an unacceptable access modifier.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.AccessModifierNotAllowedForCachedValueException">
            <summary>
            Occurs when attempting to cache a non-private and non-readonly field with an attached <see cref="T:osu.Framework.Allocation.CachedAttribute"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.AccessModifierNotAllowedForLoaderMethodException">
            <summary>
            Occurs when a method with an attached <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/> isn't private.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.AccessModifierNotAllowedForPropertySetterException">
            <summary>
            Occurs when the setter of a property with an attached <see cref="T:osu.Framework.Allocation.ResolvedAttribute"/> isn't private.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.DependencyContainer">
            <summary>
            Hierarchically caches dependencies and can inject those automatically into types registered for dependency injection.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.#ctor(osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Create a new DependencyContainer instance.
            </summary>
            <param name="parent">An optional parent container which we should use as a fallback for cache lookups.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.Cache(System.Object)">
            <summary>
            Caches an instance of a type as its most derived type. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="instance">The instance to cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.Cache(System.Object,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Caches an instance of a type as its most derived type. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="instance">The instance to cache.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheAs``1(``0)">
            <summary>
            Caches an instance of a type as a type of <typeparamref name="T"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="instance">The instance to cache. Must be or derive from <typeparamref name="T"/>.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheAs``1(``0,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Caches an instance of a type as a type of <typeparamref name="T"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="instance">The instance to cache. Must be or derive from <typeparamref name="T"/>.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheAs``1(System.Type,``0)">
            <summary>
            Caches an instance of a type as a type of <paramref name="type"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="type">The type to cache <paramref name="instance"/> as.</param>
            <param name="instance">The instance to cache. Must be or derive from <paramref name="type"/>.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheAs``1(System.Type,``0,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Caches an instance of a type as a type of <paramref name="type"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="type">The type to cache <paramref name="instance"/> as.</param>
            <param name="instance">The instance to cache. Must be or derive from <paramref name="type"/>.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheValue(System.Object)">
            <summary>
            Caches an instance of a type as its most derived type. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <remarks>
            This should only be used when it is guaranteed that the internal state of the type will remain consistent through retrieval.
            (e.g. <see cref="T:System.Threading.CancellationToken"/> or reference types).
            </remarks>
            <param name="instance">The instance to cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheValue(System.Object,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Caches an instance of a type as its most derived type. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <remarks>
            This should only be used when it is guaranteed that the internal state of the type will remain consistent through retrieval.
            (e.g. <see cref="T:System.Threading.CancellationToken"/> or reference types).
            </remarks>
            <param name="instance">The instance to cache.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheValueAs``1(``0)">
            <summary>
            Caches an instance of a type as a type of <typeparamref name="T"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <remarks>
            This should only be used when it is guaranteed that the internal state of the type will remain consistent through retrieval.
            (e.g. <see cref="T:System.Threading.CancellationToken"/> or reference types).
            </remarks>
            <param name="instance">The instance to cache. Must be or derive from <typeparamref name="T"/>.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheValueAs``1(``0,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Caches an instance of a type as a type of <typeparamref name="T"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <remarks>
            This should only be used when it is guaranteed that the internal state of the type will remain consistent through retrieval.
            (e.g. <see cref="T:System.Threading.CancellationToken"/> or reference types).
            </remarks>
            <param name="instance">The instance to cache. Must be or derive from <typeparamref name="T"/>.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.CacheAs(System.Type,osu.Framework.Allocation.CacheInfo,System.Object,System.Boolean)">
            <summary>
            Caches an instance of a type as a type of <paramref name="type"/>. This instance will be returned each time you <see cref="M:osu.Framework.Allocation.DependencyContainer.Get(System.Type)"/>.
            </summary>
            <param name="type">The type to cache <paramref name="instance"/> as.</param>
            <param name="info">Extra information to identify <paramref name="instance"/> in the cache.</param>
            <param name="instance">The instance to cache. Must be or derive from <paramref name="type"/>.</param>
            <param name="allowValueTypes">Whether value types are allowed to be cached.
            This should only be used when it is guaranteed that the internal state of the type will remain consistent through retrieval.
            (e.g. <see cref="T:System.Threading.CancellationToken"/> or reference types).</param>
        </member>
        <member name="M:osu.Framework.Allocation.DependencyContainer.Inject``1(``0)">
            <summary>
            Injects dependencies into the given instance.
            </summary>
            <typeparam name="T">The type of the instance to inject dependencies into.</typeparam>
            <param name="instance">The instance to inject dependencies into.</param>
            <exception cref="T:System.OperationCanceledException">When the injection process was cancelled.</exception>
        </member>
        <member name="T:osu.Framework.Allocation.IDependencyActivatorRegistry">
            <summary>
            An interface for objects to register dependency activation functions with.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.IDependencyActivatorRegistry.IsRegistered(System.Type)">
            <summary>
            Whether dependency activation functions have already been registered for the given type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:osu.Framework.Allocation.IDependencyActivatorRegistry.Register(System.Type,osu.Framework.Allocation.InjectDependencyDelegate,osu.Framework.Allocation.CacheDependencyDelegate)">
            <summary>
            Registers dependency activation functions for the given type.
            </summary>
            <param name="type">The type.</param>
            <param name="injectDel">A function to inject dependencies into the object.</param>
            <param name="cacheDel">A function to cache the dependencies of the object.</param>
        </member>
        <member name="T:osu.Framework.Allocation.IDependencyInjectionCandidate">
            <summary>
            An interface that may be attached to objects to allow them to be used in <see cref="M:osu.Framework.Allocation.DependencyContainer.Inject``1(``0)"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.InvokeOnDisposal">
            <summary>
            Instances of this class capture an action for later cleanup. When a method returns an instance of this class, the appropriate usage is:
            <code>using (SomeMethod())
            {
                // ...
            }</code>
            The using block will automatically dispose the returned instance, doing the necessary cleanup work.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.InvokeOnDisposal.#ctor(System.Action)">
            <summary>
            Constructs a new instance, capturing the given action to be run during disposal.
            </summary>
            <param name="action">The action to invoke during disposal.</param>
        </member>
        <member name="M:osu.Framework.Allocation.InvokeOnDisposal.Dispose">
            <summary>
            Disposes this instance, calling the initially captured action.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.InvokeOnDisposal`1">
            <summary>
            Instances of this class capture an action for later cleanup. When a method returns an instance of this class, the appropriate usage is:
            <code>using (SomeMethod())
            {
                // ...
            }</code>
            The using block will automatically dispose the returned instance, doing the necessary cleanup work.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.InvokeOnDisposal`1.#ctor(`0,System.Action{`0})">
            <summary>
            Constructs a new instance, capturing the given action to be run during disposal.
            </summary>
            <param name="sender">The sender which should appear in the <paramref name="action"/> callback.</param>
            <param name="action">The action to invoke during disposal.</param>
        </member>
        <member name="M:osu.Framework.Allocation.InvokeOnDisposal`1.Dispose">
            <summary>
            Disposes this instance, calling the initially captured action.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.IReadOnlyDependencyContainer">
            <summary>
            Read-only interface into a dependency container capable of injective and retrieving dependencies based
            on types.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.IReadOnlyDependencyContainer.Get(System.Type)">
            <summary>
            Retrieves a cached dependency of <paramref name="type"/> if it exists and null otherwise.
            </summary>
            <param name="type">The dependency type to query for.</param>
            <returns>The requested dependency, or null if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.IReadOnlyDependencyContainer.Get(System.Type,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Retrieves a cached dependency of <paramref name="type"/> if it exists and null otherwise.
            </summary>
            <param name="type">The dependency type to query for.</param>
            <param name="info">Extra information that identifies the cached dependency.</param>
            <returns>The requested dependency, or null if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.IReadOnlyDependencyContainer.Inject``1(``0)">
            <summary>
            Injects dependencies into the given instance.
            </summary>
            <typeparam name="T">The type of the instance to inject dependencies into.</typeparam>
            <param name="instance">The instance to inject dependencies into.</param>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Retrieves a cached dependency of type <typeparamref name="T"/> if it exists, and null otherwise.
            </summary>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <returns>The requested dependency, or null if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Retrieves a cached dependency of type <typeparamref name="T"/> if it exists, and null otherwise.
            </summary>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <param name="info">Extra information that identifies the cached dependency.</param>
            <returns>The requested dependency, or null if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.GetValue``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Retrieves a cached dependency of type <typeparamref name="T"/> if it exists, and default(<typeparamref name="T"/>) otherwise.
            </summary>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <returns>The requested dependency, or default(<typeparamref name="T"/>) if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.GetValue``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Retrieves a cached dependency of type <typeparamref name="T"/> if it exists, and default(<typeparamref name="T"/>) otherwise.
            </summary>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <param name="info">Extra information that identifies the cached dependency.</param>
            <returns>The requested dependency, or default(<typeparamref name="T"/>) if not found.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@)">
            <summary>
            Tries to retrieve a cached dependency of type <typeparamref name="T"/>.
            </summary>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <param name="value">The requested dependency, or null if not found.</param>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <returns>Whether the requested dependency existed.</returns>
        </member>
        <member name="M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@,osu.Framework.Allocation.CacheInfo)">
            <summary>
            Tries to retrieve a cached dependency of type <typeparamref name="T"/>.
            </summary>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to query.</param>
            <param name="value">The requested dependency, or null if not found.</param>
            <param name="info">Extra information that identifies the cached dependency.</param>
            <typeparam name="T">The dependency type to query for.</typeparam>
            <returns>Whether the requested dependency existed.</returns>
        </member>
        <member name="T:osu.Framework.Allocation.ISourceGeneratedDependencyActivator">
            <summary>
            Implemented by source generators to inject dependencies into an object.
            </summary>
            <remarks>
            Do not manually implement this interface.
            </remarks>
        </member>
        <member name="M:osu.Framework.Allocation.ISourceGeneratedDependencyActivator.RegisterForDependencyActivation(osu.Framework.Allocation.IDependencyActivatorRegistry)">
            <summary>
            Invoked to register dependency activation functions for this object.
            </summary>
            <param name="registry">The <see cref="T:osu.Framework.Allocation.IDependencyActivatorRegistry"/> to register activation functions with.</param>
        </member>
        <member name="T:osu.Framework.Allocation.LongRunningLoadAttribute">
            <summary>
            Denotes a component which performs long-running tasks in its <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/> method that are not CPU intensive.
            Long-running tasks are scheduled into a lower priority thread pool.
            </summary>
            <remarks>
            This forces immediate consumers to use <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponentAsync``1(``0,System.Action{``0},System.Threading.CancellationToken,osu.Framework.Threading.Scheduler)"/> when loading the component.
            </remarks>
        </member>
        <member name="T:osu.Framework.Allocation.ObjectHandle`1">
            <summary>
            Wrapper on <see cref="T:System.Runtime.InteropServices.GCHandle" /> that supports the <see cref="T:System.IDisposable" /> pattern.
            </summary>
        </member>
        <member name="P:osu.Framework.Allocation.ObjectHandle`1.Handle">
            <summary>
            The pointer from the <see cref="T:System.Runtime.InteropServices.GCHandle" />, if it is allocated.  Otherwise <see cref="F:System.IntPtr.Zero" />.
            </summary>
        </member>
        <member name="P:osu.Framework.Allocation.ObjectHandle`1.Address">
            <summary>
            The address of target object, if it is allocated and pinned.  Otherwise <see cref="F:System.IntPtr.Zero" />.
            Note: This is not the same as the <see cref="P:osu.Framework.Allocation.ObjectHandle`1.Handle" />.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.ObjectHandle`1.#ctor(`0,System.Runtime.InteropServices.GCHandleType)">
            <summary>
            Wraps the provided object with a <see cref="T:System.Runtime.InteropServices.GCHandle" />, using the given <see cref="T:System.Runtime.InteropServices.GCHandleType" />.
            </summary>
            <param name="target">The target object to wrap.</param>
            <param name="handleType">The handle type to use.</param>
        </member>
        <member name="M:osu.Framework.Allocation.ObjectHandle`1.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            Recreates an <see cref="T:osu.Framework.Allocation.ObjectHandle`1" /> based on the passed <see cref="T:System.IntPtr" />.
            If <paramref name="ownsHandle"/> is <c>true</c>, disposing this object will free the handle.
            </summary>
            <param name="handle"><see cref="P:osu.Framework.Allocation.ObjectHandle`1.Handle"/> from a previously constructed <see cref="M:osu.Framework.Allocation.ObjectHandle`1.#ctor(`0,System.Runtime.InteropServices.GCHandleType)"/>.</param>
            <param name="ownsHandle">Whether this instance owns the underlying <see cref="T:System.Runtime.InteropServices.GCHandle"/>.</param>
        </member>
        <member name="M:osu.Framework.Allocation.ObjectHandle`1.GetTarget(`0@)">
            <summary>
            Gets the object being referenced.
            Returns true if successful and populates <paramref name="target"/> with the referenced object.
            Returns false If the handle is not allocated or the target is not of type <typeparamref name="T"/>.
            </summary>
            <param name="target">Populates this parameter with the targeted object.</param>
        </member>
        <member name="F:osu.Framework.Allocation.ObjectUsage`1.Usage">
            <summary>
            Whether this usage is actively being written to or read from.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.ResolvedAttribute">
            <summary>
            An attribute that is attached to properties of a <see cref="T:osu.Framework.Graphics.Drawable"/> component to indicate that the value of the property should be retrieved from a dependency cache.
            Properties marked with this attribute must be private and have a setter.
            </summary>
            <remarks>
            The value of the property is resolved upon <see cref="M:osu.Framework.Graphics.Drawable.Load(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)"/> for the target <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Allocation.ResolvedAttribute.Parent">
            <summary>
            The containing type of the cached member in the <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
            <remarks>
            This is only set if the member was cached with a custom <see cref="T:osu.Framework.Allocation.CacheInfo"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Allocation.ResolvedAttribute.Name">
            <summary>
            The name of the cached member in the <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
            <remarks>
            This is only set if the member was cached with a custom <see cref="T:osu.Framework.Allocation.CacheInfo"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Allocation.ResolvedAttribute.CanBeNull">
            <summary>
            Whether a null value can be accepted if the member doesn't exist in the cache.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.ResolvedAttribute.#ctor">
            <summary>
            Identifies a member to be resolved from a <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Allocation.ResolvedAttribute.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
            Identifies a member to be resolved from a <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
            <param name="parent">The parent which the member is identified with in the cache.
            This is only set if the member was cached with a custom <see cref="T:osu.Framework.Allocation.CacheInfo"/>.</param>
            <param name="name">The name which the member is identified with in the cache.
            This is only set if the member was cached with a custom <see cref="T:osu.Framework.Allocation.CacheInfo"/>.</param>
            <param name="canBeNull">Whether a null value can be accepted if the member doesn't exist in the cache.</param>
        </member>
        <member name="T:osu.Framework.Allocation.TimedExpiryCache`2">
            <summary>
            A key-value store which supports cleaning up items after a specified expiry time.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TimedExpiryCache`2.DisposeOnRemoval">
            <summary>
            Whether <see cref="T:System.IDisposable"/> items should be disposed on removal.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TimedExpiryCache`2.ExpiryTime">
            <summary>
            Time in milliseconds after last access after which items will be cleaned up.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TimedExpiryCache`2.CheckPeriod">
            <summary>
            The interval in milliseconds between checks for expiry.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.TripleBuffer`1">
            <summary>
            Handles triple-buffering of any object type.
            Thread safety assumes at most one writer and one reader.
            Comes with the added assurance that the most recent <see cref="M:osu.Framework.Allocation.TripleBuffer`1.GetForRead"/> object is not written to.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TripleBuffer`1.pendingCompletedWriteIndex">
            <summary>
            The freshest buffer index which has finished a write, and is waiting to be read.
            Will be set to <c>null</c> after being read once.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TripleBuffer`1.lastWriteIndex">
            <summary>
            The last buffer index which was obtained for writing.
            </summary>
        </member>
        <member name="F:osu.Framework.Allocation.TripleBuffer`1.lastReadIndex">
            <summary>
            The last buffer index which was obtained for reading.
            Note that this will remain "active" even after a <see cref="M:osu.Framework.Allocation.TripleBuffer`1.GetForRead"/> ends, to give benefit of doubt that the usage may still be accessing it.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.ValueInvokeOnDisposal">
             <summary>
             Instances of this struct capture an action for later cleanup. The appropriate usage is:
             <code>using (SomeMethod())
             {
                 // ...
             }</code>
             The using block will automatically dispose the returned instance, doing the necessary cleanup work.
            
             This is a struct version of <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used when allocations are to be minimised.
             </summary>
        </member>
        <member name="M:osu.Framework.Allocation.ValueInvokeOnDisposal.#ctor(System.Action)">
            <summary>
            Constructs a new instance, capturing the given action to be run during disposal.
            </summary>
            <param name="action">The action to invoke during disposal.</param>
        </member>
        <member name="M:osu.Framework.Allocation.ValueInvokeOnDisposal.Dispose">
            <summary>
            Disposes this instance, calling the initially captured action.
            </summary>
        </member>
        <member name="T:osu.Framework.Allocation.ValueInvokeOnDisposal`1">
             <summary>
             Instances of this struct capture an action for later cleanup. The appropriate usage is:
             <code>using (SomeMethod())
             {
                 // ...
             }</code>
             The using block will automatically dispose the returned instance, doing the necessary cleanup work.
            
             This is a struct version of <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used when allocations are to be minimised.
             </summary>
        </member>
        <member name="M:osu.Framework.Allocation.ValueInvokeOnDisposal`1.#ctor(`0,System.Action{`0})">
            <summary>
            Constructs a new instance, capturing the given action to be run during disposal.
            </summary>
            <param name="sender">The sender which should appear in the <paramref name="action"/> callback.</param>
            <param name="action">The action to invoke during disposal.</param>
        </member>
        <member name="M:osu.Framework.Allocation.ValueInvokeOnDisposal`1.Dispose">
            <summary>
            Disposes this instance, calling the initially captured action.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.AdjustableAudioComponent">
            <summary>
            An audio component which allows for basic bindable adjustments to be applied.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AdjustableAudioComponent.Volume">
            <summary>
            The volume of this component.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AdjustableAudioComponent.Balance">
            <summary>
            The playback balance of this sample (-1 .. 1 where 0 is centered)
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AdjustableAudioComponent.Frequency">
            <summary>
            Rate at which the component is played back (affects pitch). 1 is 100% playback speed, or default frequency.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AdjustableAudioComponent.Tempo">
            <summary>
            Rate at which the component is played back (does not affect pitch). 1 is 100% playback speed.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AggregateAdjustmentExtensions.GetAggregate(osu.Framework.Audio.IAggregateAudioAdjustment,osu.Framework.Audio.AdjustableProperty)">
            <summary>
            Get the aggregate result for a specific adjustment type.
            </summary>
            <param name="adjustment">The audio adjustments to return from.</param>
            <param name="type">The adjustment type.</param>
            <returns>The aggregate result.</returns>
        </member>
        <member name="T:osu.Framework.Audio.AudioAdjustments">
            <summary>
            Provides adjustable and bindable attributes for an audio component.
            Aggregates results as a <see cref="T:osu.Framework.Audio.IAggregateAudioAdjustment"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioAdjustments.Volume">
            <summary>
            The volume of this component.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioAdjustments.Balance">
            <summary>
            The playback balance of this sample (-1 .. 1 where 0 is centered)
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioAdjustments.Frequency">
            <summary>
            Rate at which the component is played back (affects pitch). 1 is 100% playback speed, or default frequency.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioAdjustments.Tempo">
            <summary>
            Rate at which the component is played back (does not affect pitch). 1 is 100% playback speed.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.AudioCollectionManager`1">
            <summary>
            A collection of audio components which need central property control.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.AudioComponent">
            <summary>
            A base class for audio components which offers audio thread deferring, disposal and basic update logic.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioComponent.PendingActions">
            <summary>
            Audio operations will be run on a separate dedicated thread, so we need to schedule any audio API calls using this queue.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioComponent.CanPerformInline">
            <summary>
            Whether an audio thread specific action can be performed inline.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AudioComponent.EnqueueAction(System.Action)">
            <summary>
            Enqueues an action to be performed on the audio thread.
            </summary>
            <param name="action">The action to perform.</param>
            <returns>A task which can be used for continuation logic. May return a <see cref="P:System.Threading.Tasks.Task.CompletedTask"/> if called while already on the audio thread.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AudioComponent.UpdateState">
            <summary>
            Run each loop of the audio thread's execution after queued actions are completed to allow components to perform any additional operations.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AudioComponent.UpdateChildren">
            <summary>
            Run each loop of the audio thread's execution, after <see cref="M:osu.Framework.Audio.AudioComponent.UpdateState"/> as a way to update any child components.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AudioComponent.Update">
            <summary>
            Updates this audio component. Always runs on the audio thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioComponent.HasCompleted">
            <summary>
            Whether this component has completed playback and is in a stopped state.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioComponent.IsAlive">
            <summary>
            When false, this component has completed all processing and is ready to be removed from its parent.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioComponent.IsLoaded">
            <summary>
            Whether this component has finished loading its resources.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.BASS_INTERNAL_DEVICE_COUNT">
            <summary>
            The number of BASS audio devices preceding the first real audio device.
            Consisting of <see cref="F:ManagedBass.Bass.NoSoundDevice"/> and <see cref="F:osu.Framework.Audio.AudioManager.bass_default_device"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.bass_default_device">
            <summary>
            The index of the BASS audio device denoting the OS default.
            </summary>
            <remarks>
            See http://www.un4seen.com/doc/#bass/BASS_CONFIG_DEV_DEFAULT.html for more information on the included device.
            </remarks>
        </member>
        <member name="P:osu.Framework.Audio.AudioManager.Tracks">
            <summary>
            The manager component responsible for audio tracks (e.g. songs).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioManager.Samples">
            <summary>
            The manager component responsible for audio samples (e.g. sound effects).
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.thread">
            <summary>
            The thread audio operations (mainly Bass calls) are ran on.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.TrackMixer">
            <summary>
            The global mixer which all tracks are routed into by default.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.SampleMixer">
            <summary>
            The global mixer which all samples are routed into by default.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioManager.AudioDeviceNames">
            <summary>
            The names of all available audio devices.
            </summary>
            <remarks>
            This property does not contain the names of disabled audio devices.
            </remarks>
        </member>
        <member name="E:osu.Framework.Audio.AudioManager.OnNewDevice">
            <summary>
            Is fired whenever a new audio device is discovered and provides its name.
            </summary>
        </member>
        <member name="E:osu.Framework.Audio.AudioManager.OnLostDevice">
            <summary>
            Is fired whenever an audio device is lost and provides its name.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.AudioDevice">
            <summary>
            The preferred audio device we should use. A value of
            <see cref="F:System.String.Empty"/> denotes the OS default.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.VolumeSample">
            <summary>
            Volume of all samples played game-wide.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.VolumeTrack">
            <summary>
            Volume of all tracks played game-wide.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.AudioManager.UsingGlobalMixer">
            <summary>
            Whether a global mixer is being used for audio routing.
            For now, this is only the case on Windows when using shared mode WASAPI initialisation.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.GlobalMixerHandle">
             <summary>
             If a global mixer is being used, this will be the BASS handle for it.
             If non-null, all game mixers should be added to this mixer.
             </summary>
             <remarks>
             When this is non-null, all mixers created via <see cref="M:osu.Framework.Audio.AudioManager.CreateAudioMixer(System.String)"/>
             will themselves be added to the global mixer, which will handle playback itself.
            
             In this mode of operation, nested mixers will be created with the <see cref="F:ManagedBass.BassFlags.Decode"/>
             flag, meaning they no longer handle playback directly.
            
             An eventual goal would be to use a global mixer across all platforms as it can result
             in more control and better playback performance.
             </remarks>
        </member>
        <member name="F:osu.Framework.Audio.AudioManager.EventScheduler">
            <summary>
            The scheduler used for invoking publicly exposed delegate events.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.#ctor(osu.Framework.Threading.AudioThread,osu.Framework.IO.Stores.ResourceStore{System.Byte[]},osu.Framework.IO.Stores.ResourceStore{System.Byte[]})">
            <summary>
            Constructs an AudioStore given a track resource store, and a sample resource store.
            </summary>
            <param name="audioThread">The host's audio thread.</param>
            <param name="trackStore">The resource store containing all audio tracks to be used in the future.</param>
            <param name="sampleStore">The sample store containing all audio samples to be used in the future.</param>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.CreateAudioMixer(System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/>.
            </summary>
            <remarks>
            Channels removed from this <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/> fall back to the global <see cref="F:osu.Framework.Audio.AudioManager.SampleMixer"/>.
            </remarks>
            <param name="identifier">An identifier displayed on the audio mixer visualiser.</param>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.GetTrackStore(osu.Framework.IO.Stores.IResourceStore{System.Byte[]},osu.Framework.Audio.Mixing.AudioMixer)">
            <summary>
            Obtains the <see cref="T:osu.Framework.Audio.Track.TrackStore"/> corresponding to a given resource store.
            Returns the global <see cref="T:osu.Framework.Audio.Track.TrackStore"/> if no resource store is passed.
            </summary>
            <param name="store">The <see cref="T:osu.Framework.IO.Stores.IResourceStore`1"/> of which to retrieve the <see cref="T:osu.Framework.Audio.Track.TrackStore"/>.</param>
            <param name="mixer">The <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/> to use for tracks created by this store. Defaults to the global <see cref="F:osu.Framework.Audio.AudioManager.TrackMixer"/>.</param>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.GetSampleStore(osu.Framework.IO.Stores.IResourceStore{System.Byte[]},osu.Framework.Audio.Mixing.AudioMixer)">
            <summary>
            Obtains the <see cref="T:osu.Framework.Audio.Sample.SampleStore"/> corresponding to a given resource store.
            Returns the global <see cref="T:osu.Framework.Audio.Sample.SampleStore"/> if no resource store is passed.
            </summary>
            <remarks>
            By default, <c>.wav</c> and <c>.ogg</c> extensions will be automatically appended to lookups on the returned store
            if the lookup does not correspond directly to an existing filename.
            Additional extensions can be added via <see cref="M:osu.Framework.Audio.Sample.ISampleStore.AddExtension(System.String)"/>.
            </remarks>
            <param name="store">The <see cref="T:osu.Framework.IO.Stores.IResourceStore`1"/> of which to retrieve the <see cref="T:osu.Framework.Audio.Sample.SampleStore"/>.</param>
            <param name="mixer">The <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/> to use for samples created by this store. Defaults to the global <see cref="F:osu.Framework.Audio.AudioManager.SampleMixer"/>.</param>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.setAudioDevice(System.String)">
            <summary>
            Sets the output audio device by its name.
            This will automatically fall back to the system default device on failure.
            </summary>
            <param name="deviceName">Name of the audio device, or null to use the configured device preference <see cref="F:osu.Framework.Audio.AudioManager.AudioDevice"/>.</param>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.InitBass(System.Int32)">
            <summary>
            This method calls <see cref="M:ManagedBass.Bass.Init(System.Int32,System.Int32,ManagedBass.DeviceInitFlags,System.IntPtr,System.IntPtr)"/>.
            It can be overridden for unit testing.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.AudioManager.CheckForDeviceChanges(System.Collections.Immutable.ImmutableArray{ManagedBass.DeviceInfo})">
             <summary>
             Check whether any audio device changes have occurred.
            
             Changes supported are:
             - A new device is added
             - An existing device is Enabled/Disabled or set as Default
             </summary>
             <remarks>
             This method is optimised to incur the lowest overhead possible.
             </remarks>
             <param name="previousDevices">The previous audio devices array.</param>
             <returns>Whether a change was detected.</returns>
        </member>
        <member name="T:osu.Framework.Audio.BassAmplitudeProcessor">
            <summary>
            Computes and caches amplitudes for a bass channel.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.BassAmplitudeProcessor.CurrentAmplitudes">
            <summary>
            The most recent amplitude data. Note that this is updated on an ongoing basis and there is no guarantee it is in a consistent (single sample) state.
            If you need consistent data, make a copy of FrequencyAmplitudes while on the audio thread.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.BassRelativeFrequencyHandler">
            <summary>
            A helper class for translating relative frequency values to absolute hertz values based on the initial channel frequency.
            Also handles zero frequency value by requesting the component to pause the channel and maintain that until it's set back from zero.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.BassRelativeFrequencyHandler.FrequencyChangedToZero">
            <summary>
            Invoked when frequency changes from non-zero to zero via <see cref="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetFrequency(System.Double)"/>.
            Allows the component using this instance to pause instead of changing frequency to zero
            (which is not supported in BASS).
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.BassRelativeFrequencyHandler.FrequencyChangedFromZero">
            <summary>
            Invoked when frequency changes from zero to non-zero via <see cref="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetFrequency(System.Double)"/>.
            Allows the component using this instance to revert any changes in its state
            done in <see cref="F:osu.Framework.Audio.BassRelativeFrequencyHandler.FrequencyChangedToZero"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.BassRelativeFrequencyHandler.IsFrequencyZero">
            <summary>
            Whether the last <see cref="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetFrequency(System.Double)"/> call specified a zero relative frequency.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetChannel(System.Int32)">
            <summary>
            Sets the component's BASS channel handle.
            </summary>
            <param name="channel">The channel handle.</param>
        </member>
        <member name="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetFrequency(System.Double)">
            <summary>
            Sets the channel's frequency based on the given <paramref name="relativeFrequency"/>.
            </summary>
            <remarks>
            Callers should ensure to <see cref="M:osu.Framework.Audio.BassRelativeFrequencyHandler.SetChannel(System.Int32)"/> first before attempting to change channel frequency.
            </remarks>
            <param name="relativeFrequency">The desired frequency value, relative to the channel's initial frequency.</param>
            <example>
            A <c>SetFrequency(0.5)</c> call is equivalent to the following ManagedBASS call:
            <code>BASS.ChannelSetAttribute(ChannelAttribute.Frequency, channel, initialFrequency * 0.5);</code>
            </example>
        </member>
        <member name="M:osu.Framework.Audio.BassUtils.CheckFaulted(System.Boolean)">
            <summary>
            Checks whether <see cref="T:ManagedBass.Bass"/> faulted by checking its <see cref="P:ManagedBass.Bass.LastError"/>.
            </summary>
            <param name="throwException">Whether to throw an exception if it faulted.</param>
            <returns>Whether it faulted.</returns>
        </member>
        <member name="T:osu.Framework.Audio.Callbacks.BassCallback">
            <summary>
            Abstract class that provides an optional pinned <see cref="T:osu.Framework.Allocation.ObjectHandle`1"/>, used for callbacks to
            the Bass library.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Callbacks.BassCallback.Handle">
            <summary>
            The callback handle, or <see cref="F:System.IntPtr.Zero"/> if the object is not pinned.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Callbacks.DataStreamFileProcedures">
            <summary>
            Implementation of <see cref="T:osu.Framework.Audio.Callbacks.IFileProcedures"/> that supports reading from a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Callbacks.FileCallbacks">
            <summary>
            Wrapper on <see cref="T:ManagedBass.FileProcedures"/> to provide functionality in <see cref="T:osu.Framework.Audio.Callbacks.BassCallback"/>.
            Can delegate to a class implementing the <see cref="T:osu.Framework.Audio.Callbacks.IFileProcedures"/> interface.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Callbacks.IFileProcedures">
            <summary>
            Interface that closely matches the definition of the <see cref="T:ManagedBass.FileProcedures"/> struct.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Callbacks.SyncCallback">
            <summary>
            Wrapper on <see cref="T:ManagedBass.SyncProcedure"/> to provide functionality in <see cref="T:osu.Framework.Audio.Callbacks.BassCallback"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAdjustableAudioComponent.Volume">
            <summary>
            The volume of this component.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAdjustableAudioComponent.Balance">
            <summary>
            The playback balance of this sample (-1 .. 1 where 0 is centered)
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency">
            <summary>
            Rate at which the component is played back (affects pitch). 1 is 100% playback speed, or default frequency.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo">
            <summary>
            Rate at which the component is played back (does not affect pitch). 1 is 100% playback speed.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.IAdjustableAudioComponent.BindAdjustments(osu.Framework.Audio.IAggregateAudioAdjustment)">
            <summary>
            Bind all adjustments from an <see cref="T:osu.Framework.Audio.IAggregateAudioAdjustment"/>.
            </summary>
            <param name="component">The adjustment source.</param>
        </member>
        <member name="M:osu.Framework.Audio.IAdjustableAudioComponent.UnbindAdjustments(osu.Framework.Audio.IAggregateAudioAdjustment)">
            <summary>
            Unbind all adjustments from an <see cref="T:osu.Framework.Audio.IAggregateAudioAdjustment"/>.
            </summary>
            <param name="component">The adjustment source.</param>
        </member>
        <member name="M:osu.Framework.Audio.IAdjustableAudioComponent.AddAdjustment(osu.Framework.Audio.AdjustableProperty,osu.Framework.Bindables.IBindable{System.Double})">
            <summary>
            Add a bindable adjustment source.
            </summary>
            <param name="type">The target type for this adjustment.</param>
            <param name="adjustBindable">The bindable adjustment.</param>
        </member>
        <member name="M:osu.Framework.Audio.IAdjustableAudioComponent.RemoveAdjustment(osu.Framework.Audio.AdjustableProperty,osu.Framework.Bindables.IBindable{System.Double})">
            <summary>
            Remove a bindable adjustment source.
            </summary>
            <param name="type">The target type for this adjustment.</param>
            <param name="adjustBindable">The bindable adjustment.</param>
        </member>
        <member name="M:osu.Framework.Audio.IAdjustableAudioComponent.RemoveAllAdjustments(osu.Framework.Audio.AdjustableProperty)">
            <summary>
            Removes all adjustments of a type.
            </summary>
            <param name="type">The target type to remove all adjustments of.</param>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Balance"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Volume"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Balance"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(``0,System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Volume"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(``0,System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Balance"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(``0,System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(``0,System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Volume"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Balance"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="T:osu.Framework.Audio.IAggregateAudioAdjustment">
            <summary>
            Provides aggregated adjustments for an audio component.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAggregateAudioAdjustment.AggregateVolume">
            <summary>
            The aggregate volume of this component (0..1).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAggregateAudioAdjustment.AggregateBalance">
            <summary>
            The aggregate playback balance of this sample (-1 .. 1 where 0 is centered)
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAggregateAudioAdjustment.AggregateFrequency">
            <summary>
            The aggregate rate at which the component is played back (affects pitch). 1 is 100% playback speed, or default frequency.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IAggregateAudioAdjustment.AggregateTempo">
            <summary>
            The aggregate rate at which the component is played back (does not affect pitch). 1 is 100% playback speed.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.IHasAmplitudes.CurrentAmplitudes">
            <summary>
            Current amplitude of stereo channels where 1 is full volume and 0 is silent.
            LeftChannel and RightChannel represent the maximum current amplitude of all of the left and right channels respectively.
            The most recent values are returned. Synchronisation between channels should not be expected.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Mixing.AudioMixer">
            <summary>
            Mixes together multiple <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/>s into one output.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.AudioMixer.#ctor(osu.Framework.Audio.Mixing.AudioMixer,System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/>.
            </summary>
            <param name="fallbackMixer">A fallback <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/>, which <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/>s are moved to if removed from this one.
            A <c>null</c> value indicates this is the fallback <see cref="T:osu.Framework.Audio.Mixing.AudioMixer"/>.</param>
            <param name="identifier">An identifier displayed on the audio mixer visualiser.</param>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.AudioMixer.Remove(osu.Framework.Audio.Mixing.IAudioChannel,System.Boolean)">
            <summary>
            Removes an <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> from the mix.
            </summary>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> to remove.</param>
            <param name="returnToDefault">Whether <paramref name="channel"/> should be returned to the default mixer.</param>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.AudioMixer.AddInternal(osu.Framework.Audio.Mixing.IAudioChannel)">
            <summary>
            Adds an <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> to the mix.
            </summary>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> to add.</param>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.AudioMixer.RemoveInternal(osu.Framework.Audio.Mixing.IAudioChannel)">
            <summary>
            Removes an <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> from the mix.
            </summary>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> to remove.</param>
        </member>
        <member name="T:osu.Framework.Audio.Mixing.Bass.BassAudioMixer">
            <summary>
            Mixes together multiple <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/> into one output via BASSmix.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.Handle">
            <summary>
            The handle for this mixer.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ActiveEffects">
            <summary>
            The list of effects which are currently active in the BASS mix.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.activeChannels">
            <summary>
            The list of channels which are currently active in the BASS mix.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.#ctor(osu.Framework.Audio.AudioManager,osu.Framework.Audio.Mixing.AudioMixer,System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Audio.Mixing.Bass.BassAudioMixer"/>.
            </summary>
            <param name="manager">The game's audio manager.</param>
            <param name="fallbackMixer"><inheritdoc /></param>
            <param name="identifier">An identifier displayed on the audio mixer visualiser.</param>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelPlay(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Boolean)">
            <summary>
            Plays a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelPlay(System.Int32,System.Boolean)"/>.</remarks>
            <param name="channel">The channel to play.</param>
            <param name="restart">Restart playback from the beginning?</param>
            <returns>
            If successful, <see langword="true"/> is returned, else <see langword="false"/> is returned.
            Use <see cref="P:ManagedBass.Bass.LastError"/> to get the error code.
            </returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelPause(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Boolean)">
            <summary>
            Pauses a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelPause(System.Int32)"/>.</remarks>
            <param name="channel">The channel to pause.</param>
            <param name="flushMixer">Set to <c>true</c> to make the pause take effect immediately.
            <para>
            This will change the timing of <see cref="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelGetPosition(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,ManagedBass.PositionFlags)"/>, so should be used sparingly.
            </para>
            </param>
            <returns>
            If successful, <see langword="true"/> is returned, else <see langword="false"/> is returned.
            Use <see cref="P:ManagedBass.Bass.LastError"/> to get the error code.
            </returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelIsActive(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel)">
            <summary>
            Checks if a channel is active (playing) or stalled.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelIsActive(System.Int32)"/>.</remarks>
            <param name="channel">The channel to get the state of.</param>
            <returns><see cref="T:ManagedBass.PlaybackState"/> indicating the state of the channel.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelGetPosition(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,ManagedBass.PositionFlags)">
            <summary>
            Retrieves the playback position of a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelGetPosition(System.Int32,ManagedBass.PositionFlags)"/>.</remarks>
            <param name="channel">The channel to retrieve the position of.</param>
            <param name="mode">How to retrieve the position.</param>
            <returns>
            If an error occurs, -1 is returned, use <see cref="P:ManagedBass.Bass.LastError"/> to get the error code.
            If successful, the position is returned.
            </returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelSetPosition(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Int64,ManagedBass.PositionFlags)">
            <summary>
            Sets the playback position of a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelSetPosition(System.Int32,System.Int64,ManagedBass.PositionFlags)"/>.</remarks>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to set the position of.</param>
            <param name="position">The position, in units determined by the <paramref name="mode"/>.</param>
            <param name="mode">How to set the position.</param>
            <returns>
            If successful, then <see langword="true"/> is returned, else <see langword="false"/> is returned.
            Use <see cref="P:ManagedBass.Bass.LastError"/> to get the error code.
            </returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelGetLevel(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Single[],System.Single,ManagedBass.LevelRetrievalFlags)">
            <summary>
            Retrieves the level (peak amplitude) of a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelGetLevel(System.Int32,System.Single[],System.Single,ManagedBass.LevelRetrievalFlags)"/>.</remarks>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to get the levels of.</param>
            <param name="levels">The array in which the levels are to be returned.</param>
            <param name="length">How much data (in seconds) to look at to get the level (limited to 1 second).</param>
            <param name="flags">What levels to retrieve.</param>
            <returns><c>true</c> if successful, false otherwise.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelGetData(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Single[],System.Int32)">
            <summary>
            Retrieves the immediate sample data (or an FFT representation of it) of a channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Bass.ChannelGetData(System.Int32,System.Single[],System.Int32)"/>.</remarks>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to retrieve the data of.</param>
            <param name="buffer">float[] to write the data to.</param>
            <param name="length">Number of bytes wanted, and/or <see cref="T:ManagedBass.DataFlags"/>.</param>
            <returns>If an error occurs, -1 is returned, use <see cref="P:ManagedBass.Bass.LastError"/> to get the error code.
            <para>When requesting FFT data, the number of bytes read from the channel (to perform the FFT) is returned.</para>
            <para>When requesting sample data, the number of bytes written to buffer will be returned (not necessarily the same as the number of bytes read when using the <see cref="F:ManagedBass.DataFlags.Float"/> or DataFlags.Fixed flag).</para>
            <para>When using the <see cref="F:ManagedBass.DataFlags.Available"/> flag, the number of bytes in the channel's buffer is returned.</para>
            </returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelSetSync(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,ManagedBass.SyncFlags,System.Int64,ManagedBass.SyncProcedure,System.IntPtr)">
            <summary>
            Sets up a synchroniser on a mixer source channel.
            </summary>
            <remarks>See: <see cref="M:ManagedBass.Mix.BassMix.ChannelSetSync(System.Int32,ManagedBass.SyncFlags,System.Int64,ManagedBass.SyncProcedure,System.IntPtr)"/>.</remarks>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to set up the synchroniser for.</param>
            <param name="type">The type of sync.</param>
            <param name="parameter">The sync parameters, depending on the sync type.</param>
            <param name="procedure">The callback function which should be invoked with the sync.</param>
            <param name="user">User instance data to pass to the callback function.</param>
            <returns>If successful, then the new synchroniser's handle is returned, else 0 is returned. Use <see cref="P:ManagedBass.Bass.LastError" /> to get the error code.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelRemoveSync(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,System.Int32)">
            <summary>
            Removes a synchroniser from a mixer source channel.
            </summary>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to remove the synchroniser for.</param>
            <param name="sync">Handle of the synchroniser to remove (return value of a previous <see cref="M:ManagedBass.Mix.BassMix.ChannelSetSync(System.Int32,ManagedBass.SyncFlags,System.Int64,ManagedBass.SyncProcedure,System.IntPtr)" /> call).</param>
            <returns>If successful, <see langword="true" /> is returned, else <see langword="false" /> is returned. Use <see cref="P:ManagedBass.Bass.LastError" /> to get the error code.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.StreamFree(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel)">
            <summary>
            Frees a channel's resources.
            </summary>
            <param name="channel">The <see cref="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel"/> to free.</param>
            <returns>If successful, <see langword="true" /> is returned, else <see langword="false" /> is returned. Use <see cref="P:ManagedBass.Bass.LastError" /> to get the error code.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.AddChannelToBassMix(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel)">
            <summary>
            Adds a channel to the native BASS mix.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.removeChannelFromBassMix(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel)">
            <summary>
            Removes a channel from the native BASS mix.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.flush">
            <summary>
            Flushes the mixer, causing pause and seek events to take effect immediately.
            </summary>
            <remarks>
            This will change the timing of <see cref="M:osu.Framework.Audio.Mixing.Bass.BassAudioMixer.ChannelGetPosition(osu.Framework.Audio.Mixing.Bass.IBassAudioChannel,ManagedBass.PositionFlags)"/>, so should be used sparingly.
            </remarks>
        </member>
        <member name="T:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel">
            <summary>
            Interface for audio channels that play audio through BASS (<see cref="T:osu.Framework.Audio.Track.TrackBass"/>, <see cref="T:osu.Framework.Audio.Sample.SampleChannelBass"/>, etc).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel.IsActive">
            <summary>
            Whether this channel is still active within the mix.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel.Handle">
            <summary>
            The BASS channel handle.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.Bass.IBassAudioChannel.MixerChannelPaused">
            <summary>
            Whether the mixer channel is paused. Only set when removed from a <see cref="T:osu.Framework.Audio.Mixing.Bass.BassAudioMixer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Mixing.IAudioChannel">
            <summary>
            An audio channel which plays audio. Audio channels can be routed into different mixers via <see cref="M:osu.Framework.Audio.Mixing.IAudioMixer.Add(osu.Framework.Audio.Mixing.IAudioChannel)"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.IAudioChannel.Name">
            <summary>
            A name identifying this sample internally.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.IAudioChannel.Mixer">
            <summary>
            The mixer in which all audio produced by this channel should be routed into.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.IAudioChannel.EnqueueAction(System.Action)">
            <summary>
            Enqueues an action to be performed on the audio thread as part of this channel.
            </summary>
            <param name="action">The action to perform.</param>
            <returns>A task which can be used for continuation logic. May return a <see cref="P:System.Threading.Tasks.Task.CompletedTask"/> if called while already on the audio thread.</returns>
        </member>
        <member name="T:osu.Framework.Audio.Mixing.IAudioMixer">
            <summary>
            An audio mixer which one or more <see cref="T:osu.Framework.Audio.Mixing.IAudioChannel"/>s can be routed into.
            Supports DSP effects independent of other <see cref="T:osu.Framework.Audio.Mixing.IAudioMixer"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Mixing.IAudioMixer.Effects">
            <summary>
            The effects currently applied to the mix.
            <para>
            Effects are stored in order of decreasing priority such that the effect at <c>index = 0</c> in the list has the highest priority
            and the effect at <c>index = Count - 1</c> in the list has the lowest priority.
            </para>
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.IAudioMixer.Add(osu.Framework.Audio.Mixing.IAudioChannel)">
            <summary>
            Adds a channel to the mix.
            </summary>
            <param name="channel">The channel to add.</param>
        </member>
        <member name="M:osu.Framework.Audio.Mixing.IAudioMixer.Remove(osu.Framework.Audio.Mixing.IAudioChannel)">
            <summary>
            Removes a channel from the mix.
            </summary>
            <param name="channel">The channel to remove.</param>
        </member>
        <member name="T:osu.Framework.Audio.Sample.ISample">
            <summary>
            An interface for an audio sample.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISample.Name">
            <summary>
            A name identifying this sample internally.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISample.Length">
            <summary>
            The length in milliseconds of this <see cref="T:osu.Framework.Audio.Sample.ISample"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISample.PlaybackConcurrency">
            <summary>
            The number of times this sample (as identified by name) can be played back concurrently.
            </summary>
            <remarks>
            This affects all <see cref="T:osu.Framework.Audio.Sample.ISample"/> instances identified by the same sample name.
            </remarks>
        </member>
        <member name="M:osu.Framework.Audio.Sample.ISample.Play">
            <summary>
            Creates a new unique playback channel for this <see cref="T:osu.Framework.Audio.Sample.ISample"/> and immediately plays it.
            </summary>
            <remarks>
            Multiple channels can be played simultaneously, but can only be heard up to <see cref="P:osu.Framework.Audio.Sample.ISample.PlaybackConcurrency"/> times.
            </remarks>
            <returns>The unique <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> for the playback.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Sample.ISample.GetChannel">
            <summary>
            Retrieves a unique playback channel for this <see cref="T:osu.Framework.Audio.Sample.ISample"/>.
            </summary>
            <remarks>
            Multiple channels can be retrieved and played simultaneously, but can only be heard up to <see cref="P:osu.Framework.Audio.Sample.ISample.PlaybackConcurrency"/> times.
            </remarks>
            <returns>The unique <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> for the playback.</returns>
        </member>
        <member name="T:osu.Framework.Audio.Sample.ISampleChannel">
            <summary>
            A unique playback of an <see cref="T:osu.Framework.Audio.Sample.ISample"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISampleChannel.Name">
            <summary>
            A name identifying this sample internally.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Sample.ISampleChannel.Play">
            <summary>
            Starts or resumes playback. Has no effect if this <see cref="T:osu.Framework.Audio.Sample.ISampleChannel"/> is already playing.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Sample.ISampleChannel.Stop">
            <summary>
            Stops playback.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISampleChannel.Played">
            <summary>
            Whether playback was ever started.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISampleChannel.Playing">
            <summary>
            Whether playback is currently in progress.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISampleChannel.Looping">
            <summary>
            Whether playback should repeat.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.ISampleStore.PlaybackConcurrency">
            <summary>
            How many instances of a single sample should be allowed to playback concurrently before stopping the longest playing.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Sample.ISampleStore.AddExtension(System.String)">
            <summary>
            Add a file extension to automatically append to any lookups on this store.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Sample.Sample.CreateChannel">
            <summary>
            Creates a unique playback of this <see cref="T:osu.Framework.Audio.Sample.Sample"/>.
            </summary>
            <returns>The <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> for the playback.</returns>
        </member>
        <member name="T:osu.Framework.Audio.Sample.SampleBassFactory">
            <summary>
            A factory for <see cref="T:osu.Framework.Audio.Sample.SampleBass"/> objects sharing a common sample ID (and thus playback concurrency).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.SampleBassFactory.Name">
            <summary>
            A name identifying the sample to be created by this factory.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Sample.SampleBassFactory.PlaybackConcurrency">
            <summary>
            Todo: Expose this to support per-sample playback concurrency once ManagedBass has been updated (https://github.com/ManagedBass/ManagedBass/pull/85).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Sample.SampleChannelBass.Playing">
            <summary>
            Whether the channel is currently playing.
            </summary>
            <remarks>
            This is set to <c>true</c> immediately upon <see cref="M:osu.Framework.Audio.Sample.SampleChannelBass.Play"/>, but the channel may not be audibly playing yet.
            </remarks>
        </member>
        <member name="F:osu.Framework.Audio.Sample.SampleChannelBass.userRequestedPlay">
            <summary>
            <c>true</c> if the user last called <see cref="M:osu.Framework.Audio.Sample.SampleChannelBass.Play"/>.
            <c>false</c> if the user last called <see cref="M:osu.Framework.Audio.Sample.SampleChannelBass.Stop"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Sample.SampleChannelBass.enqueuedPlaybackStart">
            <summary>
            Whether the playback start has been enqueued.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Sample.SampleChannelBass.#ctor(osu.Framework.Audio.Sample.SampleBass)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Audio.Sample.SampleChannelBass"/>.
            </summary>
            <param name="sample">The <see cref="T:osu.Framework.Audio.Sample.SampleBass"/> to create the channel from.</param>
        </member>
        <member name="T:osu.Framework.Audio.Sample.SampleChannelVirtual">
            <summary>
            A <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> which explicitly plays no audio.
            Aimed for scenarios in which a non-null <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> is needed, but one that doesn't necessarily play any sound.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Sample.SampleVirtual">
            <summary>
            A <see cref="T:osu.Framework.Audio.Sample.Sample"/> which explicitly plays no audio.
            Aimed for scenarios in which a non-null <see cref="T:osu.Framework.Audio.Sample.Sample"/> is needed, but one that doesn't necessarily play any sound.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Track.ChannelAmplitudes">
            <summary>
            A collection of information providing per-channel and per-frequency amplitudes of an audio channel.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.ChannelAmplitudes.AMPLITUDES_SIZE">
            <summary>
            The length of the <see cref="F:osu.Framework.Audio.Track.ChannelAmplitudes.FrequencyAmplitudes"/> data.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.ChannelAmplitudes.LeftChannel">
            <summary>
            The amplitude of the left channel (0..1).
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.ChannelAmplitudes.RightChannel">
            <summary>
            The amplitude of the right channel (0..1).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ChannelAmplitudes.Maximum">
            <summary>
            The maximum amplitude of the left and right channels (0..1).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ChannelAmplitudes.Average">
            <summary>
            The average amplitude of the left and right channels (0..1).
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.ChannelAmplitudes.FrequencyAmplitudes">
            <summary>
            256 length array of bins containing the average frequency of both channels at every ~78Hz step of the audible spectrum (0Hz - 20,000Hz).
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Track.ITrack">
            <summary>
            An audio track.
            </summary>
        </member>
        <member name="E:osu.Framework.Audio.Track.ITrack.Completed">
            <summary>
            Invoked when this track has completed.
            </summary>
        </member>
        <member name="E:osu.Framework.Audio.Track.ITrack.Failed">
            <summary>
            Invoked when this track has failed.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.Looping">
            <summary>
            States if this track should repeat.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.IsDummyDevice">
            <summary>
            Is this track capable of producing audio?
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.RestartPoint">
            <summary>
            Point in time in milliseconds to restart the track to on loop or <see cref="M:osu.Framework.Audio.Track.ITrack.Restart"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.Length">
            <summary>
            Length of the track in milliseconds.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.Bitrate">
            <summary>
            The bitrate of this track.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.IsReversed">
            <summary>
            Whether this track is reversed.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.ITrack.HasCompleted">
            <summary>
            Whether this track has finished playing back.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.ITrack.Restart">
            <summary>
            Restarts this track from the <see cref="P:osu.Framework.Audio.Track.Track.RestartPoint"/> while retaining adjustments.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.ITrackStore.GetVirtual(System.Double,System.String)">
            <summary>
            Retrieve a <see cref="T:osu.Framework.Audio.Track.TrackVirtual"/> with no audio device backing.
            </summary>
            <param name="length">The length of the virtual track.</param>
            <param name="name">A name to identify the virtual track internally.</param>
            <returns>A new virtual track.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Track.Track.Reset">
            <summary>
            Reset this track to a logical default state.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Track.Restart">
            <summary>
            Restarts this track from the <see cref="P:osu.Framework.Audio.Track.Track.RestartPoint"/> while retaining adjustments.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.Track.CurrentTime">
            <summary>
            Current position in milliseconds.
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.Track.Length">
            <summary>
            Length of the track in milliseconds.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Track.Seek(System.Double)">
            <summary>
            Seek to a new position.
            </summary>
            <param name="seek">New position in milliseconds</param>
            <returns>Whether the seek was successful.</returns>
        </member>
        <member name="P:osu.Framework.Audio.Track.Track.Rate">
            <summary>
            Overall playback rate (1 is 100%, -1 is reversed at 100%).
            </summary>
        </member>
        <member name="P:osu.Framework.Audio.Track.TrackBass.Preview">
            <summary>
            Should this track only be used for preview purposes? This suggests it has not yet been fully loaded.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.TrackBass.activeStream">
            <summary>
            The handle for this track, if there is one.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.TrackBass.tempoAdjustStream">
            <summary>
            The handle for adjusting tempo.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.TrackBass.isPlayed">
            <summary>
            This marks if the track is paused, or stopped to the end.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.TrackBass.lastSeekablePosition">
            <summary>
            The last position that a seek will succeed for.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.TrackBass.#ctor(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Audio.Track.TrackBass"/> from provided audio data.
            </summary>
            <param name="data">The sample data stream.</param>
            <param name="name">A name identifying the track internally.</param>
            <param name="quick">If true, the track will not be fully loaded, and should only be used for preview purposes.  Defaults to false.</param>
        </member>
        <member name="M:osu.Framework.Audio.Track.TrackBass.isRunningState(ManagedBass.PlaybackState)">
            <summary>
            Returns whether the playback state is considered to be running or not.
            This will only return true for <see cref="F:ManagedBass.PlaybackState.Playing"/> and <see cref="F:ManagedBass.PlaybackState.Stalled"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Track.Waveform">
            <summary>
            Processes audio sample data such that it can then be consumed to generate waveform plots of the audio.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.resolution">
            <summary>
            <see cref="T:osu.Framework.Audio.Track.Waveform.Point"/>s are initially generated to a 1ms resolution to cover most use cases.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.points_per_iteration">
            <summary>
            The data stream is iteratively decoded to provide this many points per iteration so as to not exceed BASS's internal buffer size.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.fft_samples">
            <summary>
            FFT1024 gives ~40hz accuracy.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.fft_bins">
            <summary>
            Number of bins generated by the FFT. Must correspond to <see cref="F:osu.Framework.Audio.Track.Waveform.fft_samples"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.low_min">
            <summary>
            Minimum frequency for low-range (bass) frequencies. Based on lower range of bass drum fallout.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.mid_min">
            <summary>
            Minimum frequency for mid-range frequencies. Based on higher range of bass drum fallout.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.high_min">
            <summary>
            Minimum frequency for high-range (treble) frequencies.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.high_max">
            <summary>
            Maximum frequency for high-range (treble) frequencies. A sane value.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.#ctor(System.IO.Stream)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Audio.Track.Waveform"/> from provided audio data.
            </summary>
            <param name="data">
            The sample data stream.
            The <see cref="T:osu.Framework.Audio.Track.Waveform"/> will take ownership of this stream and dispose it when done reading track data.
            If null, an empty waveform is constructed.
            </param>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.GenerateResampledAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Audio.Track.Waveform"/> containing a specific number of data points by selecting the average value of each sampled group.
            </summary>
            <param name="pointCount">The number of points the resulting <see cref="T:osu.Framework.Audio.Track.Waveform"/> should contain.</param>
            <param name="cancellationToken">The token to cancel the task.</param>
            <returns>An async task for the generation of the <see cref="T:osu.Framework.Audio.Track.Waveform"/>.</returns>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.GetPoints">
            <summary>
            Gets all the points represented by this <see cref="T:osu.Framework.Audio.Track.Waveform"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.GetPointsAsync">
            <summary>
            Gets all the points represented by this <see cref="T:osu.Framework.Audio.Track.Waveform"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.GetChannels">
            <summary>
            Gets the number of channels represented by each <see cref="T:osu.Framework.Audio.Track.Waveform.Point"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Audio.Track.Waveform.GetChannelsAsync">
            <summary>
            Gets the number of channels represented by each <see cref="T:osu.Framework.Audio.Track.Waveform.Point"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Audio.Track.Waveform.Point">
            <summary>
            Represents a singular point of data in a <see cref="T:osu.Framework.Audio.Track.Waveform"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.Point.AmplitudeLeft">
            <summary>
            The amplitude of the left channel.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.Point.AmplitudeRight">
            <summary>
            The amplitude of the right channel.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.Point.LowIntensity">
            <summary>
            Unnormalised total intensity of the low-range (bass) frequencies.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.Point.MidIntensity">
            <summary>
            Unnormalised total intensity of the mid-range frequencies.
            </summary>
        </member>
        <member name="F:osu.Framework.Audio.Track.Waveform.Point.HighIntensity">
            <summary>
            Unnormalised total intensity of the high-range (treble) frequencies.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.AggregateBindable`1">
            <summary>
            Combines multiple bindables into one aggregate bindable result.
            </summary>
            <typeparam name="T">The type of values.</typeparam>
        </member>
        <member name="P:osu.Framework.Bindables.AggregateBindable`1.Result">
            <summary>
            The final result after aggregating all added sources.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.AggregateBindable`1.#ctor(System.Func{`0,`0,`0},osu.Framework.Bindables.Bindable{`0})">
            <summary>
            Create a new aggregate bindable.
            </summary>
            <param name="aggregateFunction">The function to be used for aggregation, taking two input <typeparamref name="T"/> values and returning one output.</param>
            <param name="resultBindable">An optional newly constructed bindable to use for <see cref="P:osu.Framework.Bindables.AggregateBindable`1.Result"/>. The initial value of this bindable is used as the initial value for the aggregate.</param>
        </member>
        <member name="M:osu.Framework.Bindables.AggregateBindable`1.AddSource(osu.Framework.Bindables.IBindable{`0})">
            <summary>
            Add a new source to be included in aggregation.
            </summary>
            <param name="bindable">The bindable to add.</param>
        </member>
        <member name="M:osu.Framework.Bindables.AggregateBindable`1.RemoveSource(osu.Framework.Bindables.IBindable{`0})">
            <summary>
            Remove a source from being included in aggregation.
            </summary>
            <param name="bindable">The bindable to remove.</param>
        </member>
        <member name="T:osu.Framework.Bindables.Bindable`1">
            <summary>
            A generic implementation of a <see cref="T:osu.Framework.Bindables.IBindable"/>
            </summary>
            <typeparam name="T">The type of our stored <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/>.</typeparam>
        </member>
        <member name="E:osu.Framework.Bindables.Bindable`1.ValueChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> has changed (or manually via <see cref="M:osu.Framework.Bindables.Bindable`1.TriggerValueChange(`0,osu.Framework.Bindables.Bindable{`0},System.Boolean,System.Boolean)"/>).
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.Bindable`1.DisabledChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.Bindable`1.Disabled"/> has changed (or manually via <see cref="M:osu.Framework.Bindables.Bindable`1.TriggerDisabledChange(osu.Framework.Bindables.Bindable{`0},System.Boolean,System.Boolean)"/>).
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.Bindable`1.DefaultChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.Bindable`1.Default"/> has changed (or manually via <see cref="M:osu.Framework.Bindables.Bindable`1.TriggerDefaultChange(`0,osu.Framework.Bindables.Bindable{`0},System.Boolean,System.Boolean)"/>).
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.Bindable`1.Disabled">
            <summary>
            Whether this bindable has been disabled. When disabled, attempting to change the <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> will result in an <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.Bindable`1.IsDefault">
            <summary>
            Check whether the current <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> is equal to <see cref="P:osu.Framework.Bindables.Bindable`1.Default"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.SetDefault">
            <summary>
            Revert the current <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> to the defined <see cref="P:osu.Framework.Bindables.Bindable`1.Default"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.Bindable`1.Value">
            <summary>
            The current value of this bindable.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.Bindable`1.Default">
            <summary>
            The default value of this bindable. Used when calling <see cref="M:osu.Framework.Bindables.Bindable`1.SetDefault"/> or querying <see cref="P:osu.Framework.Bindables.Bindable`1.IsDefault"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.#ctor">
            <summary>
            Creates a new bindable instance. This is used for deserialization of bindables.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.#ctor(`0)">
            <summary>
            Creates a new bindable instance initialised with a default value.
            </summary>
            <param name="defaultValue">The initial and default value for this bindable.</param>
        </member>
        <member name="P:osu.Framework.Bindables.Bindable`1.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.Bindable`1.BindTo(osu.Framework.Bindables.Bindable{`0})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.CopyTo(osu.Framework.Bindables.Bindable{`0})">
            <summary>
            Copies all values and value limitations of this bindable to another.
            </summary>
            <param name="them">The target to copy to.</param>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.BindTo(osu.Framework.Bindables.Bindable{`0})">
            <summary>
            Binds this bindable to another such that bi-directional updates are propagated.
            This will adopt any values and value limitations of the bindable bound to.
            </summary>
            <param name="them">The foreign bindable. This should always be the most permanent end of the bind (ie. a ConfigManager).</param>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to bind to an already bound object.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.BindValueChanged(System.Action{osu.Framework.Bindables.ValueChangedEvent{`0}},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.Bindable`1.ValueChanged"/> with the option of running the bound action once immediately.
            </summary>
            <param name="onChange">The action to perform when <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.BindDisabledChanged(System.Action{System.Boolean},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.Bindable`1.DisabledChanged"/> with the option of running the bound action once immediately.
            </summary>
            <param name="onChange">The action to perform when <see cref="P:osu.Framework.Bindables.Bindable`1.Disabled"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.Parse(System.Object,System.IFormatProvider)">
            <summary>
            Parse an object into this instance.
            An object deriving T can be parsed, or a string can be parsed if T is an enum type.
            </summary>
            <param name="input">The input which is to be parsed.</param>
            <param name="provider">An object that provides culture-specific formatting information about <paramref name="input"/>.</param>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.TriggerChange">
            <summary>
            Raise <see cref="E:osu.Framework.Bindables.Bindable`1.ValueChanged"/> and <see cref="E:osu.Framework.Bindables.Bindable`1.DisabledChanged"/> once, without any changes actually occurring.
            This does not propagate to any outward bound bindables.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.UnbindEvents">
            <summary>
            Unbinds any actions bound to the value changed events.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.UnbindBindings">
            <summary>
            Remove all bound <see cref="T:osu.Framework.Bindables.Bindable`1"/>s via <see cref="M:osu.Framework.Bindables.Bindable`1.GetBoundCopy"/> or <see cref="M:osu.Framework.Bindables.Bindable`1.BindTo(osu.Framework.Bindables.Bindable{`0})"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.UnbindAll">
            <summary>
            Calls <see cref="M:osu.Framework.Bindables.Bindable`1.UnbindEvents"/> and <see cref="M:osu.Framework.Bindables.Bindable`1.UnbindBindings"/>.
            Also returns any active lease.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.GetUnboundCopy">
            <summary>
            Create an unbound clone of this bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.CreateInstance">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.CreateInstance"/>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable`1.GetBoundCopy"/>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.BeginLease(System.Boolean)">
            <summary>
            Takes out a mutually exclusive lease on this bindable.
            During a lease, the bindable will be set to <see cref="P:osu.Framework.Bindables.Bindable`1.Disabled"/>, but changes can still be applied via the <see cref="T:osu.Framework.Bindables.LeasedBindable`1"/> returned by this call.
            You should end a lease by calling <see cref="M:osu.Framework.Bindables.LeasedBindable`1.Return"/> when done.
            </summary>
            <param name="revertValueOnReturn">Whether the <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/> when <see cref="M:osu.Framework.Bindables.Bindable`1.BeginLease(System.Boolean)"/> was called should be restored when the lease ends.</param>
            <returns>A bindable with a lease.</returns>
        </member>
        <member name="M:osu.Framework.Bindables.Bindable`1.EndLease(osu.Framework.Bindables.ILeasedBindable{`0})">
            <summary>
            Called internally by a <see cref="T:osu.Framework.Bindables.LeasedBindable`1"/> to end a lease.
            </summary>
            <param name="returnedBindable">The <see cref="T:osu.Framework.Bindables.ILeasedBindable`1"/> that was provided as a return of a <see cref="M:osu.Framework.Bindables.Bindable`1.BeginLease(System.Boolean)"/> call.</param>
        </member>
        <member name="E:osu.Framework.Bindables.BindableDictionary`2.DisabledChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>'s state has changed (or manually via <see cref="M:osu.Framework.Bindables.BindableDictionary`2.triggerDisabledChange(System.Boolean)"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.Add(`0,`1)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">Thrown when this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.Remove(`0)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.Remove(`0,`1@)">
            <inheritdoc cref="M:System.Collections.IDictionary.Remove(System.Object)" />
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="P:osu.Framework.Bindables.BindableDictionary`2.Item(`0)">
            <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
            <exception cref="T:System.InvalidOperationException">Thrown when setting an item while this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.Clear">
            <inheritdoc cref="M:System.Collections.IDictionary.Clear" />
            <exception cref="T:System.InvalidOperationException">Thrown when this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.Parse(System.Object,System.IFormatProvider)">
            <summary>
            Parse an object into this instance.
            A collection holding items of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/> can be parsed. Null results in an empty <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/>.
            </summary>
            <param name="input">The input which is to be parsed.</param>
            <param name="provider">Not valid for <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/>.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> is <see cref="P:osu.Framework.Bindables.BindableDictionary`2.Disabled"/>.</exception>
        </member>
        <member name="P:osu.Framework.Bindables.BindableDictionary`2.Disabled">
            <summary>
            Whether this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> has been disabled.
            When disabled, attempting to change the contents of this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> will result in an <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.BindableDictionary`2.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.BindableDictionary`2.BindTo(osu.Framework.Bindables.BindableDictionary{`0,`1})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.BindTo(osu.Framework.Bindables.BindableDictionary{`0,`1})">
            <summary>
            Binds this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> to another.
            </summary>
            <param name="them">The <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> to be bound to.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.BindCollectionChanged(osu.Framework.Bindables.NotifyDictionaryChangedEventHandler{`0,`1},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.BindableDictionary`2.CollectionChanged"/> with the option of running the bound action once immediately
            with an <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> event for the entire contents of this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/>.
            </summary>
            <param name="onChange">The action to perform when this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.CreateInstance">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.CreateInstance"/>
        </member>
        <member name="M:osu.Framework.Bindables.BindableDictionary`2.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>
        </member>
        <member name="E:osu.Framework.Bindables.BindableList`1.CollectionChanged">
            <summary>
            An event which is raised when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> changes.
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.BindableList`1.DisabledChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>'s state has changed (or manually via <see cref="M:osu.Framework.Bindables.BindableList`1.triggerDisabledChange(System.Boolean)"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Bindables.BindableList`1"/>, optionally adding the items of the given collection.
            </summary>
            <param name="items">The items that are going to be contained in the newly created <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
        </member>
        <member name="P:osu.Framework.Bindables.BindableList`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at an index in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="index">The index of the item.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when setting a value while this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Add(`0)">
            <summary>
            Adds a single item to this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="item">The item to be added.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.IndexOf(`0)">
            <summary>
            Retrieves the index of an item in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="item">The item to retrieve the index of.</param>
            <returns>The index of the item, or -1 if the item isn't in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item at the specified index in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="index">The index to insert at.</param>
            <param name="item">The item to insert.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Clear">
            <summary>
            Clears the contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Contains(`0)">
            <summary>
            Determines if an item is in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="item">The item to locate in this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
            <returns><code>true</code> if this <see cref="T:osu.Framework.Bindables.BindableList`1"/> contains the given item.</returns>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Remove(`0)">
            <summary>
            Removes an item from this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="item">The item to remove from this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
            <returns><code>true</code> if the removal was successful.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes <paramref name="count"/> items starting from <paramref name="index"/>.
            </summary>
            <param name="index">The index to start removing from.</param>
            <param name="count">The count of items to be removed.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.RemoveAt(System.Int32)">
            <summary>
            Removes an item at the specified index from this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="index">The index of the item to remove.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes all items from this <see cref="T:osu.Framework.Bindables.BindableList`1"/> that match a predicate.
            </summary>
            <param name="match">The predicate.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.ReplaceRange(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Replaces <paramref name="count"/> items starting from <paramref name="index"/> with <paramref name="newItems"/>.
            </summary>
            <param name="index">The index to start removing from.</param>
            <param name="count">The count of items to be removed.</param>
            <param name="newItems">The items to replace the removed items with.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.checkAlreadyApplied(System.Collections.Generic.HashSet{osu.Framework.Bindables.BindableList{`0}})">
             <summary>
             As we are applying non-atomic operations on a potentially complex bindable tree, care needs to be taken to not apply
             the same operation twice to the same bindable instance.
            
             This call tracks all instances which an operation has already been applied to.
             </summary>
             <param name="appliedInstances">A hash set to be passed down the recursive call tree tracking all applied instances.</param>
             <returns>Whether the current instance has already been applied.</returns>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/> to the given array, starting at the given index.
            </summary>
            <param name="array">The array that is the destination of the items copied from this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
            <param name="arrayIndex">The index at which the copying begins.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/> to the given array, starting at the given index.
            </summary>
            <param name="array">The array that is the destination of the items copied from this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
            <param name="index">The index at which the copying begins.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Parse(System.Object,System.IFormatProvider)">
            <summary>
            Parse an object into this instance.
            A collection holding items of type <typeparamref name="T"/> can be parsed. Null results in an empty <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="input">The input which is to be parsed.</param>
            <param name="provider">Not valid for <see cref="T:osu.Framework.Bindables.BindableList`1"/>.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if this <see cref="T:osu.Framework.Bindables.BindableList`1"/> is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/>.</exception>
        </member>
        <member name="P:osu.Framework.Bindables.BindableList`1.Disabled">
            <summary>
            Whether this <see cref="T:osu.Framework.Bindables.BindableList`1"/> has been disabled. When disabled, attempting to change the contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/> will result in an <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of items to this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="items">The collection whose items should be added to this collection.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if this collection is <see cref="P:osu.Framework.Bindables.BindableList`1.Disabled"/></exception>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves an item in this collection.
            </summary>
            <param name="oldIndex">The index of the item to move.</param>
            <param name="newIndex">The index specifying the new location of the item.</param>
        </member>
        <member name="P:osu.Framework.Bindables.BindableList`1.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.BindableList`1.BindTo(osu.Framework.Bindables.BindableList{`0})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.BindTo(osu.Framework.Bindables.BindableList{`0})">
            <summary>
            Binds this <see cref="T:osu.Framework.Bindables.BindableList`1"/> to another.
            </summary>
            <param name="them">The <see cref="T:osu.Framework.Bindables.BindableList`1"/> to be bound to.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.BindCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.BindableList`1.CollectionChanged"/> with the option of running the bound action once immediately
            with an <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> event for the entire contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="onChange">The action to perform when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.CreateInstance">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.CreateInstance"/>
        </member>
        <member name="M:osu.Framework.Bindables.BindableList`1.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindableList`1.GetBoundCopy"/>
        </member>
        <member name="M:osu.Framework.Bindables.BindableNumber`1.SetPrecision(`0,System.Boolean,osu.Framework.Bindables.BindableNumber{`0})">
            <summary>
            Sets the precision. This method does no equality comparisons.
            </summary>
            <param name="precision">The new precision.</param>
            <param name="updateCurrentValue">Whether to update the current value after the precision is set.</param>
            <param name="source">The bindable that triggered this. A null value represents the current bindable instance.</param>
        </member>
        <member name="P:osu.Framework.Bindables.BindableNumber`1.DefaultPrecision">
            <summary>
            The default <see cref="P:osu.Framework.Bindables.BindableNumber`1.Precision"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.BindableNumber`1.SetProportional(System.Single,System.Single)">
            <summary>
            Sets the value of the bindable to Min + (Max - Min) * amt
            <param name="amt">The proportional amount to set, ranging from 0 to 1.</param>
            <param name="snap">If greater than 0, snap the final value to the closest multiple of this number.</param>
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.BindableNumberWithCurrent`1">
            <summary>
            A bindable which holds a reference to a bound target, allowing switching between targets and handling unbind/rebind.
            </summary>
            <typeparam name="T">The type of our stored <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/>.</typeparam>
        </member>
        <member name="T:osu.Framework.Bindables.BindableSafeArea">
            <summary>
            A subclass of <see cref="T:osu.Framework.Bindables.Bindable`1"/> specifically for representing the "safe areas" of a device.
            It exists to prevent regular <see cref="T:osu.Framework.Graphics.MarginPadding"/>s from being globally cached.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.BindableSize">
            <summary>
            Represents a <see cref="T:System.Drawing.Size"/> bindable with defined component-wise constraints applied to it.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.BindableWithCurrent`1">
            <summary>
            A bindable which holds a reference to a bound target, allowing switching between targets and handling unbind/rebind.
            </summary>
            <typeparam name="T">The type of our stored <see cref="P:osu.Framework.Bindables.Bindable`1.Value"/>.</typeparam>
        </member>
        <member name="T:osu.Framework.Bindables.IBindable">
            <summary>
            An interface which can be bound to other <see cref="T:osu.Framework.Bindables.IBindable"/>s in order to watch for (and react to) <see cref="P:osu.Framework.Bindables.ICanBeDisabled.Disabled">Disabled</see> changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable.BindTo(osu.Framework.Bindables.IBindable)">
            <summary>
            Binds ourselves to another bindable such that we receive any value limitations of the bindable we bind with.
            </summary>
            <param name="them">The foreign bindable. This should always be the most permanent end of the bind (ie. a ConfigManager)</param>
        </member>
        <member name="P:osu.Framework.Bindables.IBindable.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.IBindable.BindTo(osu.Framework.Bindables.IBindable)"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable.GetBoundCopy">
            <summary>
            Retrieve a new bindable instance weakly bound to the configuration backing.
            If you are further binding to events of a bindable retrieved using this method, ensure to hold
            a local reference.
            </summary>
            <returns>A weakly bound copy of the specified bindable.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to instantiate a copy bindable that's not matching the original's type.</exception>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable.CreateInstance">
            <summary>
            Creates a new instance of this <see cref="T:osu.Framework.Bindables.IBindable"/> for use in <see cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>.
            The returned instance must have match the most derived type of the bindable class this method is implemented on.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable.GetBoundCopyImplementation``1(``0)">
            <summary>
            Helper method which implements <see cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/> for use in final classes.
            </summary>
            <param name="source">The source <see cref="T:osu.Framework.Bindables.IBindable"/>.</param>
            <typeparam name="T">The bindable type.</typeparam>
            <returns>The bound copy.</returns>
        </member>
        <member name="T:osu.Framework.Bindables.IBindable`1">
            <summary>
            An interface which can be bound to other <see cref="T:osu.Framework.Bindables.IBindable`1"/>s in order to watch for (and react to) <see cref="P:osu.Framework.Bindables.ICanBeDisabled.Disabled">Disabled</see> and <see cref="P:osu.Framework.Bindables.IBindable`1.Value">Value</see> changes.
            </summary>
            <typeparam name="T">The type of value encapsulated by this <see cref="T:osu.Framework.Bindables.IBindable`1"/>.</typeparam>
        </member>
        <member name="E:osu.Framework.Bindables.IBindable`1.ValueChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.IBindable`1.Value"/> has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindable`1.Value">
            <summary>
            The current value of this bindable.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindable`1.Default">
            <summary>
            The default value of this bindable. Used when querying <see cref="P:osu.Framework.Bindables.IHasDefaultValue.IsDefault">IsDefault</see>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable`1.BindTo(osu.Framework.Bindables.IBindable{`0})">
            <summary>
            Binds ourselves to another bindable such that we receive any values and value limitations of the bindable we bind width.
            </summary>
            <param name="them">The foreign bindable. This should always be the most permanent end of the bind (ie. a ConfigManager)</param>
        </member>
        <member name="P:osu.Framework.Bindables.IBindable`1.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.IBindable`1.BindTo(osu.Framework.Bindables.IBindable{`0})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable`1.BindValueChanged(System.Action{osu.Framework.Bindables.ValueChangedEvent{`0}},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.IBindable`1.ValueChanged"/> with the option of running the bound action once immediately.
            </summary>
            <param name="onChange">The action to perform when <see cref="P:osu.Framework.Bindables.IBindable`1.Value"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable`1.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>
        </member>
        <member name="M:osu.Framework.Bindables.IBindable`1.GetWeakReference">
            <summary>
            Retrieves a weak reference to this bindable.
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.IBindableDictionary`2.CollectionChanged">
            <summary>
            An event which is raised when this <see cref="T:osu.Framework.Bindables.IBindableDictionary`2"/> changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableDictionary`2.BindTo(osu.Framework.Bindables.IBindableDictionary{`0,`1})">
            <summary>
            Binds self to another bindable such that we receive any values and value limitations of the bindable we bind width.
            </summary>
            <param name="them">The foreign bindable. This should always be the most permanent end of the bind (ie. a ConfigManager)</param>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableDictionary`2.BindCollectionChanged(osu.Framework.Bindables.NotifyDictionaryChangedEventHandler{`0,`1},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.IBindableDictionary`2.CollectionChanged"/> with the option of running the bound action once immediately
            with an <see cref="F:osu.Framework.Bindables.NotifyDictionaryChangedAction.Add"/> event for the entire contents of this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/>.
            </summary>
            <param name="onChange">The action to perform when this <see cref="T:osu.Framework.Bindables.BindableDictionary`2"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableDictionary`2.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.IBindableDictionary`2.BindTo(osu.Framework.Bindables.IBindableDictionary{`0,`1})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableDictionary`2.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>
        </member>
        <member name="T:osu.Framework.Bindables.IBindableList`1">
            <summary>
            A readonly interface which can be bound to other <see cref="T:osu.Framework.Bindables.IBindableList`1"/>s in order to watch for state and content changes.
            </summary>
            <typeparam name="T">The type of value encapsulated by this <see cref="T:osu.Framework.Bindables.IBindableList`1"/>.</typeparam>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableList`1.BindTo(osu.Framework.Bindables.IBindableList{`0})">
            <summary>
            Binds self to another bindable such that we receive any values and value limitations of the bindable we bind width.
            </summary>
            <param name="them">The foreign bindable. This should always be the most permanent end of the bind (ie. a ConfigManager)</param>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableList`1.BindCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Boolean)">
            <summary>
            Bind an action to <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> with the option of running the bound action once immediately
            with an <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> event for the entire contents of this <see cref="T:osu.Framework.Bindables.BindableList`1"/>.
            </summary>
            <param name="onChange">The action to perform when this <see cref="T:osu.Framework.Bindables.BindableList`1"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableList`1.BindTarget">
            <summary>
            An alias of <see cref="M:osu.Framework.Bindables.IBindableList`1.BindTo(osu.Framework.Bindables.IBindableList{`0})"/> provided for use in object initializer scenarios.
            Passes the provided value as the foreign (more permanent) bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableList`1.GetBoundCopy">
            <inheritdoc cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>
        </member>
        <member name="E:osu.Framework.Bindables.IBindableNumber`1.PrecisionChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.IBindableNumber`1.Precision"/> has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.IBindableNumber`1.MinValueChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.IBindableNumber`1.MinValue"/> has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.IBindableNumber`1.MaxValueChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.IBindableNumber`1.MaxValue"/> has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableNumber`1.Precision">
            <summary>
            The precision up to which the value of this bindable should be rounded.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableNumber`1.MinValue">
            <summary>
            The minimum value of this bindable. <see cref="P:osu.Framework.Bindables.IBindable`1.Value">Value</see> will never go below this value.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableNumber`1.MaxValue">
            <summary>
            The maximum value of this bindable. <see cref="P:osu.Framework.Bindables.IBindable`1.Value">Value</see> will never go above this value.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IBindableNumber`1.IsInteger">
            <summary>
            Whether <typeparamref name="T"/> is an integer.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableNumber`1.GetBoundCopy">
            <summary>
            Retrieve a new bindable instance weakly bound to the configuration backing.
            If you are further binding to events of a bindable retrieved using this method, ensure to hold
            a local reference.
            </summary>
            <returns>A weakly bound copy of the specified bindable.</returns>
        </member>
        <member name="M:osu.Framework.Bindables.IBindableWithCurrent`1.Create">
            <summary>
            Creates a new <see cref="T:osu.Framework.Bindables.IBindableWithCurrent`1"/> according to the specified value type.
            If the value type is one supported by the <see cref="T:osu.Framework.Bindables.BindableNumber`1"/>, an instance of <see cref="T:osu.Framework.Bindables.BindableNumberWithCurrent`1"/> will be returned.
            Otherwise an instance of <see cref="T:osu.Framework.Bindables.BindableWithCurrent`1"/> will be returned instead.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.ICanBeDisabled">
            <summary>
            Interface for objects that have a disabled state.
            </summary>
        </member>
        <member name="E:osu.Framework.Bindables.ICanBeDisabled.DisabledChanged">
            <summary>
            An event which is raised when <see cref="P:osu.Framework.Bindables.ICanBeDisabled.Disabled"/>'s state has changed.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.ICanBeDisabled.BindDisabledChanged(System.Action{System.Boolean},System.Boolean)">
            <summary>
            Bind an action to <see cref="E:osu.Framework.Bindables.ICanBeDisabled.DisabledChanged"/> with the option of running the bound action once immediately.
            </summary>
            <param name="onChange">The action to perform when <see cref="P:osu.Framework.Bindables.ICanBeDisabled.Disabled"/> changes.</param>
            <param name="runOnceImmediately">Whether the action provided in <paramref name="onChange"/> should be run once immediately.</param>
        </member>
        <member name="P:osu.Framework.Bindables.ICanBeDisabled.Disabled">
            <summary>
            Whether this object has been disabled.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.IHasDefaultValue">
            <summary>
            Interface for objects that have a default value.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IHasDefaultValue.IsDefault">
            <summary>
            Check whether this object has its default value.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.IHasDescription">
            <summary>
            Interface for objects that have a description.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.IHasDescription.Description">
            <summary>
            The description for this object.
            </summary>
        </member>
        <member name="T:osu.Framework.Bindables.ILeasedBindable">
            <summary>
            An interface that represents a leased bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.ILeasedBindable.Return">
            <summary>
            End the lease on the source <see cref="T:osu.Framework.Bindables.Bindable`1"/>.
            </summary>
            <returns>
            Whether the lease was returned by this call. Will be <c>false</c> if already returned.
            </returns>
        </member>
        <member name="T:osu.Framework.Bindables.ILeasedBindable`1">
            <summary>
            An interface that representes a leased bindable.
            </summary>
            <typeparam name="T">The value type of the bindable.</typeparam>
        </member>
        <member name="T:osu.Framework.Bindables.IParseable">
            <summary>
            Represents a class which can be parsed from an arbitrary object.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IParseable.Parse(System.Object,System.IFormatProvider)">
            <summary>
            Parse an input into this instance.
            </summary>
            <param name="input">The input which is to be parsed.</param>
            <param name="provider">An object that provides culture-specific formatting information about <paramref name="input"/>.</param>
        </member>
        <member name="T:osu.Framework.Bindables.IUnbindable">
            <summary>
            Interface for objects that support publicly unbinding events or <see cref="T:osu.Framework.Bindables.IBindable"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IUnbindable.UnbindEvents">
            <summary>
            Unbinds all bound events.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IUnbindable.UnbindBindings">
            <summary>
            Unbinds all bound <see cref="T:osu.Framework.Bindables.IBindable"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IUnbindable.UnbindAll">
            <summary>
            Calls <see cref="M:osu.Framework.Bindables.IUnbindable.UnbindEvents"/> and <see cref="M:osu.Framework.Bindables.IUnbindable.UnbindBindings"/>
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.IUnbindable.UnbindFrom(osu.Framework.Bindables.IUnbindable)">
            <summary>
            Unbinds ourselves from another <see cref="T:osu.Framework.Bindables.IBindable"/> such that we stop receiving updates it.
            The other <see cref="T:osu.Framework.Bindables.IBindable"/> will also stop receiving any events from us.
            </summary>
            <param name="them">The other bindable.</param>
        </member>
        <member name="T:osu.Framework.Bindables.LeasedBindable`1">
            <summary>
            A bindable carrying a mutually exclusive lease on another bindable.
            Can only be retrieved via <see cref="M:osu.Framework.Bindables.Bindable`1.BeginLease(System.Boolean)"/>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2">
            <summary>
            Arguments for a dictionary's CollectionChanged event.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.Action">
            <summary>
            The action that caused the event.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.NewItems">
            <summary>
            All newly-added items.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.OldItems">
            <summary>
            All removed items.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.#ctor(osu.Framework.Bindables.NotifyDictionaryChangedAction,System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2"/> that describes an add or remove event.
            </summary>
            <param name="action">The action.</param>
            <param name="item">The item affected.</param>
        </member>
        <member name="M:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.#ctor(osu.Framework.Bindables.NotifyDictionaryChangedAction,System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2"/> that describes an add or remove event.
            </summary>
            <param name="action">The action.</param>
            <param name="items">The items affected.</param>
        </member>
        <member name="M:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Bindables.NotifyDictionaryChangedEventArgs`2"/> that describes a replacement event.
            </summary>
            <param name="newItem">The new (added) item.</param>
            <param name="oldItem">The old (removed) item.</param>
        </member>
        <member name="T:osu.Framework.Bindables.NotifyDictionaryChangedEventHandler`2">
            <summary>
            The delegate to use for handlers that receive the CollectionChanged event.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedAction.Add">
            <summary>
            One or more items were added to the dictionary.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedAction.Remove">
            <summary>
            One or more items were removed from the dictionary.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.NotifyDictionaryChangedAction.Replace">
            <summary>
            One or more items were replaced in the dictionary.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.RangeConstrainedBindable`1.DefaultMinValue">
            <summary>
            The default <see cref="P:osu.Framework.Bindables.RangeConstrainedBindable`1.MinValue"/>. This should be equal to the minimum value of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.RangeConstrainedBindable`1.DefaultMaxValue">
            <summary>
            The default <see cref="P:osu.Framework.Bindables.RangeConstrainedBindable`1.MaxValue"/>. This should be equal to the maximum value of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Bindables.RangeConstrainedBindable`1.HasDefinedRange">
            <summary>
            Whether this bindable has a user-defined range that is not the full range of the <typeparamref name="T"/> type.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.RangeConstrainedBindable`1.SetMinValue(`0,System.Boolean,osu.Framework.Bindables.RangeConstrainedBindable{`0})">
            <summary>
            Sets the minimum value. This method does no equality comparisons.
            </summary>
            <param name="minValue">The new minimum value.</param>
            <param name="updateCurrentValue">Whether to update the current value after the minimum value is set.</param>
            <param name="source">The bindable that triggered this. A null value represents the current bindable instance.</param>
        </member>
        <member name="M:osu.Framework.Bindables.RangeConstrainedBindable`1.SetMaxValue(`0,System.Boolean,osu.Framework.Bindables.RangeConstrainedBindable{`0})">
            <summary>
            Sets the maximum value. This method does no equality comparisons.
            </summary>
            <param name="maxValue">The new maximum value.</param>
            <param name="updateCurrentValue">Whether to update the current value after the maximum value is set.</param>
            <param name="source">The bindable that triggered this. A null value represents the current bindable instance.</param>
        </member>
        <member name="M:osu.Framework.Bindables.RangeConstrainedBindable`1.ClampValue(`0,`0,`0)">
            <summary>
            Clamps <paramref name="value"/> to the range defined by <paramref name="minValue"/> and <paramref name="maxValue"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Bindables.RangeConstrainedBindable`1.IsValidRange(`0,`0)">
            <summary>
            Whether <paramref name="min"/> and <paramref name="max"/> constitute a valid range
            (usually used to check that <paramref name="min"/> is indeed lesser than or equal to <paramref name="max"/>).
            </summary>
            <param name="min">The range's minimum value.</param>
            <param name="max">The range's maximum value.</param>
        </member>
        <member name="T:osu.Framework.Bindables.ValueChangedEvent`1">
            <summary>
            An event fired when a value changes, providing the old and new value for reference.
            </summary>
            <typeparam name="T">The type of bindable.</typeparam>
        </member>
        <member name="F:osu.Framework.Bindables.ValueChangedEvent`1.OldValue">
            <summary>
            The old value.
            </summary>
        </member>
        <member name="F:osu.Framework.Bindables.ValueChangedEvent`1.NewValue">
            <summary>
            The new (and current) value.
            </summary>
        </member>
        <member name="M:osu.Framework.Caching.Cached`1.Invalidate">
            <summary>
            Invalidate the cache of this object.
            </summary>
            <returns>True if we invalidated from a valid state.</returns>
        </member>
        <member name="M:osu.Framework.Caching.Cached.Invalidate">
            <summary>
            Invalidate the cache of this object.
            </summary>
            <returns>True if we invalidated from a valid state.</returns>
        </member>
        <member name="P:osu.Framework.Configuration.ConfigManager`1.AddMissingEntries">
            <summary>
            Whether user specified configuration elements should be set even though a default was never specified.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.#ctor(System.Collections.Generic.IDictionary{`0,System.Object})">
            <summary>
            Initialise a new <see cref="T:osu.Framework.Configuration.ConfigManager`1"/>
            </summary>
            <param name="defaultOverrides">Dictionary of overrides which should take precedence over defaults specified by the <see cref="T:osu.Framework.Configuration.ConfigManager`1"/> implementation.</param>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.GetCurrentConfigurationForLogging">
            <summary>
            Get the full configuration for logging purposes.
            </summary>
            <remarks>
            Excludes any potentially sensitive information via <see cref="M:osu.Framework.Configuration.ConfigManager`1.CheckLookupContainsPrivateInformation(`0)"/>.</remarks>
            <returns></returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.CheckLookupContainsPrivateInformation(`0)">
            <summary>
            Check whether a specific lookup may contain private user information.
            </summary>
            <param name="lookup">The lookup type to check.</param>
            <returns>Whether private information is present.</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.InitialiseDefaults">
            <summary>
            Set all required default values via Set() calls.
            Note that defaults set here may be overridden by <see cref="F:osu.Framework.Configuration.ConfigManager`1.defaultOverrides"/> provided in the constructor.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetValue``1(`0,``0)">
            <summary>
            Sets a configuration's value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The value. Will also become the default value if one has not already been initialised.</param>
            <typeparam name="TValue">The type of value.</typeparam>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,System.Double,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="precision">The value precision.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,System.Single,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="precision">The value precision.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,System.Boolean)">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,System.Drawing.Size,System.Nullable{System.Drawing.Size},System.Nullable{System.Drawing.Size})">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault(`0,osu.Framework.Graphics.Colour4)">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.SetDefault``1(`0,``0)">
            <summary>
            Sets a configuration's default value.
            </summary>
            <param name="lookup">The lookup key.</param>
            <param name="value">The default value.</param>
            <returns>The original bindable (not a bound copy).</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.GetBindable``1(`0)">
            <summary>
            Retrieve a bindable. This will be a new instance weakly bound to the configuration backing.
            If you are further binding to events of a bindable retrieved using this method, ensure to hold
            a local reference.
            </summary>
            <returns>A weakly bound copy of the specified bindable.</returns>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.BindWith``1(`0,osu.Framework.Bindables.Bindable{``0})">
            <summary>
            Binds a local bindable with a configuration-backed bindable.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager`1.TrackedSetting`1.#ctor(`0,System.Func{`1,osu.Framework.Configuration.Tracking.SettingDescription})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Configuration.ConfigManager`1.TrackedSetting`1"/>.
            </summary>
            <param name="setting">The config setting to be tracked.</param>
            <param name="generateDescription">A function that generates the description for the setting, invoked every time the value changes.</param>
        </member>
        <member name="M:osu.Framework.Configuration.ConfigManager.QueueBackgroundSave">
            <summary>
            Queue a background save operation with debounce.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.FrameworkSetting.MinimiseOnFocusLossInFullscreen">
            <summary>
            Whether the window will be minimised when losing focus in <see cref="F:osu.Framework.Configuration.WindowMode.Fullscreen"/> mode.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.IConfigManager.Load">
            <summary>
            Loads this config.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.IConfigManager.Save">
            <summary>
            Saves this config.
            </summary>
            <returns>Whether the operation succeeded.</returns>
        </member>
        <member name="P:osu.Framework.Configuration.IniConfigManager`1.Filename">
            <summary>
            The backing file used to store the config. Null means no persistent storage.
            </summary>
        </member>
        <member name="T:osu.Framework.Configuration.InputConfigManager">
            <summary>
            Handles serialisation/deserialisation of a provided collection of <see cref="T:osu.Framework.Input.Handlers.InputHandler"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.InputConfigManager.#ctor(osu.Framework.Platform.Storage,System.Collections.Generic.IReadOnlyList{osu.Framework.Input.Handlers.InputHandler})">
            <summary>
            Create a new instance.
            </summary>
            <param name="storage">The storage to store the configuration file to.</param>
            <param name="inputHandlers">The collection of available input handlers. Settings will be loaded into existing instances.</param>
        </member>
        <member name="M:osu.Framework.Configuration.InputConfigManager.bindToHandlersBindables">
            <summary>
            Binds to all <see cref="T:osu.Framework.Bindables.Bindable`1"/>s that the <see cref="P:osu.Framework.Configuration.InputConfigManager.InputHandlers"/> expose,
            and calls <see cref="M:osu.Framework.Configuration.ConfigManager.QueueBackgroundSave"/> when their values change.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.RendererType.OpenGL">
            <summary>
            Uses <see cref="T:osu.Framework.Graphics.OpenGL.GLRenderer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Configuration.Tracking.ITrackableConfigManager">
            <summary>
            An <see cref="T:osu.Framework.Configuration.IConfigManager"/> that provides a way to track its config settings.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.ITrackableConfigManager.CreateTrackedSettings">
            <summary>
            Retrieves all the settings of this <see cref="T:osu.Framework.Configuration.ConfigManager`1"/> that are to be tracked for changes.
            </summary>
            <returns>A list of <see cref="T:osu.Framework.Configuration.Tracking.ITrackedSetting"/>.</returns>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.ITrackableConfigManager.LoadInto(osu.Framework.Configuration.Tracking.TrackedSettings)">
            <summary>
            Loads <see cref="T:osu.Framework.Bindables.Bindable`1"/>s into <see cref="T:osu.Framework.Configuration.Tracking.TrackedSettings"/>.
            </summary>
            <param name="settings">The settings to load into.</param>
        </member>
        <member name="T:osu.Framework.Configuration.Tracking.ITrackedSetting">
            <summary>
            A singular tracked setting.
            </summary>
        </member>
        <member name="E:osu.Framework.Configuration.Tracking.ITrackedSetting.SettingChanged">
            <summary>
            Invoked when this setting has changed.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.ITrackedSetting.LoadFrom``1(osu.Framework.Configuration.ConfigManager{``0})">
            <summary>
            Loads a <see cref="T:osu.Framework.Bindables.Bindable`1"/> into this tracked setting, binding to <see cref="E:osu.Framework.Configuration.Tracking.ITrackedSetting.SettingChanged"/>.
            </summary>
            <param name="configManager">The <see cref="T:osu.Framework.Configuration.ConfigManager`1"/> to load from.</param>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.ITrackedSetting.Unload">
            <summary>
            Unloads the <see cref="T:osu.Framework.Bindables.Bindable`1"/> from this tracked setting, unbinding from <see cref="E:osu.Framework.Configuration.Tracking.ITrackedSetting.SettingChanged"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Configuration.Tracking.SettingDescription">
            <summary>
            Contains information that can be displayed when tracked settings change.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.Tracking.SettingDescription.RawValue">
            <summary>
            The raw setting value.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.Tracking.SettingDescription.Name">
            <summary>
            The readable setting name.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.Tracking.SettingDescription.Value">
            <summary>
            The readable setting value.
            </summary>
        </member>
        <member name="F:osu.Framework.Configuration.Tracking.SettingDescription.Shortcut">
            <summary>
            The shortcut keys that cause this setting to change.
            </summary>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.SettingDescription.#ctor(System.Object,osu.Framework.Localisation.LocalisableString,osu.Framework.Localisation.LocalisableString,System.Nullable{osu.Framework.Localisation.LocalisableString})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Configuration.Tracking.SettingDescription"/>.
            </summary>
            <param name="rawValue">The raw setting value.</param>
            <param name="name">The readable setting name.</param>
            <param name="value">The readable setting value.</param>
            <param name="shortcut">The shortcut keys that cause this setting to change.</param>
        </member>
        <member name="T:osu.Framework.Configuration.Tracking.TrackedSetting`1">
            <summary>
            A singular tracked setting.
            </summary>
            <typeparam name="TValue">The type of the tracked value.</typeparam>
        </member>
        <member name="M:osu.Framework.Configuration.Tracking.TrackedSetting`1.#ctor(System.Object,System.Func{`0,osu.Framework.Configuration.Tracking.SettingDescription})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Configuration.Tracking.TrackedSetting`1"/>.
            </summary>
            <param name="setting">The config setting to be tracked.</param>
            <param name="generateDescription">A function that generates the description for the setting, invoked every time the value changes.</param>
        </member>
        <member name="T:osu.Framework.Configuration.TypedRepopulatingConverter`1">
            <summary>
            A type of <see cref="T:Newtonsoft.Json.JsonConverter"/> that serializes an <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> alongside
            each object's type in order to allow population of matching types via <see cref="M:Newtonsoft.Json.JsonConvert.PopulateObject(System.String,System.Object)"/>
            reconstruct the objects with their original types.
            </summary>
            <typeparam name="T">The type of objects contained in the <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> this attribute is attached to.</typeparam>
        </member>
        <member name="P:osu.Framework.Development.DebugUtils.LogPerformanceIssues">
            <summary>
            Whether the framework is currently logging performance issues.
            This should be used only when a configuration is not available via DI or otherwise (ie. in a static context).
            </summary>
        </member>
        <member name="M:osu.Framework.Development.ReflectionUtils.GetMethodsWithAttribute(System.Type,System.Type,System.Boolean)">
            <summary>
            Returns all methods declared by the specified fixture type that have the specified attribute, optionally
            including base classes. Methods from a base class are always returned before methods from a class that
            inherits from it.
            </summary>
            <param name="fixtureType">The type to examine.</param>
            <param name="attributeType">Only methods to which this attribute is applied will be returned.</param>
            <param name="inherit">Specifies whether to search the fixture type inheritance chain.</param>
        </member>
        <member name="T:osu.Framework.Development.ThreadSafety">
            <summary>
            Utilities to ensure correct thread usage throughout a game.
            </summary>
        </member>
        <member name="P:osu.Framework.Development.ThreadSafety.IsInputThread">
            <summary>
            Whether the current code is executing on the input thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Development.ThreadSafety.IsUpdateThread">
            <summary>
            Whether the current code is executing on the update thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Development.ThreadSafety.IsDrawThread">
            <summary>
            Whether the current code is executing on the draw thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Development.ThreadSafety.IsAudioThread">
            <summary>
            Whether the current code is executing on the audio thread.
            </summary>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.EnsureInputThread">
            <summary>
            Asserts that the current code is executing on the input thread.
            </summary>
            <remarks>
            Only asserts in debug builds due to performance concerns.
            </remarks>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.EnsureUpdateThread">
            <summary>
            Asserts that the current code is executing on the update thread.
            </summary>
            <remarks>
            Only asserts in debug builds due to performance concerns.
            </remarks>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.EnsureNotUpdateThread">
            <summary>
            Asserts that the current code is not executing on the update thread.
            </summary>
            <remarks>
            Only asserts in debug builds due to performance concerns.
            </remarks>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.EnsureDrawThread">
            <summary>
            Asserts that the current code is executing on the draw thread.
            </summary>
            <remarks>
            Only asserts in debug builds due to performance concerns.
            </remarks>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.EnsureAudioThread">
            <summary>
            Asserts that the current code is executing on the audio thread.
            </summary>
            <remarks>
            Only asserts in debug builds due to performance concerns.
            </remarks>
        </member>
        <member name="F:osu.Framework.Development.ThreadSafety.ExecutionMode">
            <summary>
            The current execution mode.
            </summary>
        </member>
        <member name="M:osu.Framework.Development.ThreadSafety.ResetAllForCurrentThread">
            <summary>
            Resets all statics for the current thread.
            </summary>
        </member>
        <member name="T:osu.Framework.Extensions.AnchorExtensions">
            <summary>
            Extension methods for the <see cref="T:osu.Framework.Graphics.Anchor"/> enumeration type.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.AnchorExtensions.Opposite(osu.Framework.Graphics.Anchor)">
            <summary>
            Returns the <see cref="T:osu.Framework.Graphics.Anchor"/> exactly opposite the given <paramref name="anchor"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.AnchorExtensions.PositionOnQuad(osu.Framework.Graphics.Anchor,osu.Framework.Graphics.Primitives.Quad)">
            <summary>
            Returns the position of the given <see cref="T:osu.Framework.Graphics.Anchor"/> on the given <see cref="T:osu.Framework.Graphics.Primitives.Quad"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Extensions.BridgingExtensions">
            <summary>
            Temporary extension functions for bridging between osuTK, System.Drawing, and System.Numerics
            Can be removed when the SDL3 migration is complete.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.Lighten(osuTK.Graphics.Color4,System.Single)">
            <summary>
            Returns a lightened version of the colour.
            </summary>
            <param name="colour">Original colour</param>
            <param name="amount">Decimal light addition</param>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.Darken(osuTK.Graphics.Color4,System.Single)">
            <summary>
            Returns a darkened version of the colour.
            </summary>
            <param name="colour">Original colour</param>
            <param name="amount">Percentage light reduction</param>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.Multiply(osuTK.Graphics.Color4,System.Single)">
            <summary>
            Multiply the RGB coordinates by a scalar.
            </summary>
            <param name="colour">Original colour</param>
            <param name="scalar">A scalar to multiply with</param>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.FromHex(System.String)">
            <summary>
            Converts an RGB or RGBA-formatted hex colour code into a <see cref="T:osuTK.Graphics.Color4"/>.
            Supported colour code formats:
            <list type="bullet">
            <item><description>RGB</description></item>
            <item><description>#RGB</description></item>
            <item><description>RGBA</description></item>
            <item><description>#RGBA</description></item>
            <item><description>RRGGBB</description></item>
            <item><description>#RRGGBB</description></item>
            <item><description>RRGGBBAA</description></item>
            <item><description>#RRGGBBAA</description></item>
            </list>
            </summary>
            <param name="hex">The hex code.</param>
            <returns>The <see cref="T:osuTK.Graphics.Color4"/> representing the colour.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="hex"/> is not a supported colour code.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.ToHex(osuTK.Graphics.Color4,System.Boolean)">
            <summary>
            Converts a <see cref="T:osuTK.Graphics.Color4"/> into a hex colour code.
            </summary>
            <param name="colour">The <see cref="T:osuTK.Graphics.Color4"/> to convert.</param>
            <param name="alwaysOutputAlpha">Whether the alpha channel should always be output. If <c>false</c>, the alpha channel is only output if <paramref name="colour"/> is translucent.</param>
            <returns>The hex code representing the colour.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.FromHSV(System.Single,System.Single,System.Single)">
            <summary>
            Converts an HSV colour to a <see cref="T:osuTK.Graphics.Color4"/>.
            </summary>
            <param name="h">The hue, between 0 and 360.</param>
            <param name="s">The saturation, between 0 and 1.</param>
            <param name="v">The value, between 0 and 1.</param>
        </member>
        <member name="M:osu.Framework.Extensions.Color4Extensions.Color4Extensions.ToHSV(osuTK.Graphics.Color4)">
            <summary>
            Converts a <see cref="T:osuTK.Graphics.Color4"/> to an HSV colour.
            </summary>
            <param name="colour">The <see cref="T:osuTK.Graphics.Color4"/> to convert.</param>
            <returns>The HSV colour.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.EnumExtensions.EnumExtensions.GetValuesInOrder``1">
            <summary>
            Get values of an enum in order. Supports custom ordering via <see cref="T:osu.Framework.Utils.OrderAttribute"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.EnumExtensions.EnumExtensions.GetValuesInOrder``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Get values of a collection of enum values in order. Supports custom ordering via <see cref="T:osu.Framework.Utils.OrderAttribute"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.EnumExtensions.EnumExtensions.HasFlagFast``1(``0,``0)">
            <summary>
            A fast alternative functionally equivalent to <see cref="M:System.Enum.HasFlag(System.Enum)"/>, eliminating boxing in all scenarios.
            </summary>
            <param name="enumValue">The enum to check.</param>
            <param name="flag">The flag to check for.</param>
        </member>
        <member name="M:osu.Framework.Extensions.ExceptionExtensions.ExceptionExtensions.Rethrow(System.Exception)">
            <summary>
            Rethrows <paramref name="exception"/> as if it was captured in the current context.
            This preserves the stack trace of <paramref name="exception"/>, and will not include the point of rethrow.
            </summary>
            <param name="exception">The captured exception.</param>
        </member>
        <member name="M:osu.Framework.Extensions.ExceptionExtensions.ExceptionExtensions.RethrowAsSingular(System.AggregateException)">
            <summary>
            Rethrows the <see cref="P:System.Exception.InnerException"/> of an <see cref="T:System.AggregateException"/> if it exists,
            otherwise, rethrows <paramref name="aggregateException"/>.
            This preserves the stack trace of the exception that is rethrown, and will not include the point of rethrow.
            </summary>
            <param name="aggregateException">The captured exception.</param>
        </member>
        <member name="M:osu.Framework.Extensions.ExceptionExtensions.ExceptionExtensions.AsSingular(System.AggregateException)">
            <summary>
            Flattens <paramref name="aggregateException"/> into a singular <see cref="T:System.Exception"/> if the <paramref name="aggregateException"/>
            contains only a single <see cref="T:System.Exception"/>. Otherwise, returns <paramref name="aggregateException"/>.
            </summary>
            <param name="aggregateException">The captured exception.</param>
            <returns>The highest level of flattening possible.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExceptionExtensions.ExceptionExtensions.GetLastInvocation(System.Reflection.TargetInvocationException)">
            <summary>
            Retrieves the last exception from a recursive <see cref="T:System.Reflection.TargetInvocationException"/>.
            </summary>
            <param name="exception">The exception to retrieve the exception from.</param>
            <returns>The exception at the point of invocation.</returns>
        </member>
        <member name="T:osu.Framework.Extensions.ExtensionMethods">
            <summary>
            This class holds extension methods for various purposes and should not be used explicitly, ever.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.AddInPlace``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Adds the given item to the list according to standard sorting rules. Do not use on unsorted lists.
            </summary>
            <param name="list">The list to take values</param>
            <param name="item">The item that should be added.</param>
            <returns>The index in the list where the item was inserted.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.AddInPlace``1(System.Collections.Generic.List{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Adds the given item to the list according to the comparers sorting rules. Do not use on unsorted lists.
            </summary>
            <param name="list">The list to take values</param>
            <param name="item">The item that should be added.</param>
            <param name="comparer">The comparer that should be used for sorting.</param>
            <returns>The index in the list where the item was inserted.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.ToJagged``1(``0[0:,0:])">
            <summary>
            Converts a rectangular array to a jagged array.
            <para>
            The jagged array will contain empty arrays if there are no columns in the rectangular array.
            </para>
            </summary>
            <param name="rectangular">The rectangular array.</param>
            <returns>The jagged array.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.ToRectangular``1(``0[][])">
            <summary>
            Converts a jagged array to a rectangular array.
            <para>
            All elements that did not exist in the original jagged array are initialized to their default values.
            </para>
            </summary>
            <param name="jagged">The jagged array.</param>
            <returns>The rectangular array.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.Invert``1(``0[0:,0:])">
            <summary>
            Inverts the rows and columns of a rectangular array.
            </summary>
            <param name="array">The array to invert.</param>
            <returns>The inverted array.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.Invert``1(``0[][])">
            <summary>
            Inverts the rows and columns of a jagged array.
            </summary>
            <param name="array">The array to invert.</param>
            <returns>The inverted array. This is always a square array.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.GetLocalisableDescription``1(``0)">
            <summary>
            Returns the localisable description of a given object, via (in order):
            <list type="number">
              <item>
                <description>Any attached <see cref="T:osu.Framework.Localisation.LocalisableDescriptionAttribute"/>.</description>
              </item>
              <item>
                <description><see cref="M:osu.Framework.Extensions.ExtensionMethods.GetDescription(System.Object)"/></description>
              </item>
            </list>
            </summary>
            <remarks>
            If the passed value is already of type <see cref="T:osu.Framework.Localisation.LocalisableString"/>, it will be returned.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            When the <see cref="F:osu.Framework.Localisation.LocalisableDescriptionAttribute.Name"/> specified in the <see cref="T:osu.Framework.Localisation.LocalisableDescriptionAttribute"/>
            does not match any of the existing members in <see cref="F:osu.Framework.Localisation.LocalisableDescriptionAttribute.DeclaringType"/>.
            </exception>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.GetDescription(System.Object)">
            <summary>
            Returns the description of a given object, via (in order):
            <list type="number">
              <item>
                <description>Any attached <see cref="T:System.ComponentModel.DescriptionAttribute"/>.</description>
              </item>
              <item>
                <description>The object's <see cref="M:System.Object.ToString"/>.</description>
              </item>
            </list>
            </summary>
            <remarks>
            If the passed value is already of type <see cref="T:System.String"/>, it will be returned.
            </remarks>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.ComputeSHA2Hash(System.IO.Stream)">
            <summary>
            Gets a SHA-2 (256bit) hash for the given stream, seeking the stream before and after.
            </summary>
            <param name="stream">The stream to create a hash from.</param>
            <returns>A lower-case hex string representation of the hash (64 characters).</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.ComputeSHA2Hash(System.String)">
            <summary>
            Gets a SHA-2 (256bit) hash for the given string.
            </summary>
            <param name="str">The string to create a hash from.</param>
            <returns>A lower-case hex string representation of the hash (64 characters).</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.ToStandardisedPath(System.String)">
            <summary>
            Standardise the path string using '/' as directory separator.
            Useful as output.
            </summary>
            <param name="path">The path string to standardise.</param>
            <returns>The standardised path string.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.TrimDirectorySeparator(System.String)">
            <summary>
            Trim DirectorySeparatorChar from the end of the path.
            </summary>
            <remarks>
            Trims both <see cref="F:System.IO.Path.DirectorySeparatorChar"/> and <see cref="F:System.IO.Path.AltDirectorySeparatorChar"/>.
            </remarks>
            <param name="path">The path string to trim.</param>
            <returns>The path with DirectorySeparatorChar trimmed.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.IsAsciiDigit(System.Char)">
            <summary>
            Whether this character is an ASCII digit (0-9).
            </summary>
            <remarks>
            Useful for checking if a character plays well with <c>int.TryParse()</c>.
            <see cref="M:System.Char.IsNumber(System.Char)"/> returns <c>true</c> for non-ASCII digits and other Unicode numbers;
            we don't want that, so we explicitly check the character value.
            </remarks>
            <param name="character">The character to check.</param>
            <returns>True if the character is an ASCII digit.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ExtensionMethods.CheckIsValidUrl(System.String)">
            <summary>
            Checks whether the provided URL is a safe protocol to execute a system <see cref="M:System.Diagnostics.Process.Start"/> call with.
            </summary>
            <remarks>
            For now, http://, https:// and mailto: are supported.
            More protocols can be added if a use case comes up.
            </remarks>
            <param name="url">The URL to check.</param>
            <returns>Whether the URL is safe to open.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.FormattableExtensions.ToString(System.IFormattable,System.IFormatProvider)">
            <summary>
            Formats the value of <paramref name="formattable"/> using the default format string and the supplied <paramref name="formatProvider"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action on all the items in an IEnumerable collection.
            </summary>
            <typeparam name="T">The type of the items stored in the collection.</typeparam>
            <param name="collection">The collection to iterate on.</param>
            <param name="action">The action to be performed.</param>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.Yield``1(``0)">
            <summary>
            Wraps this object instance into an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            consisting of a single item.
            </summary>
            <typeparam name="T">The type of the object.</typeparam>
            <param name="item">The instance that will be wrapped.</param>
            <returns> An <see cref="T:System.Collections.Generic.IEnumerable`1"/> consisting of a single item.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.GetNext``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Retrieves the item after a pivot from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type of the items stored in the collection.</typeparam>
            <param name="collection">The collection to iterate on.</param>
            <param name="pivot">The pivot value.</param>
            <returns>The item in <paramref name="collection"/> appearing after <paramref name="pivot"/>, or null if no such item exists.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.GetPrevious``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Retrieves the item before a pivot from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type of the items stored in the collection.</typeparam>
            <param name="collection">The collection to iterate on.</param>
            <param name="pivot">The pivot value.</param>
            <returns>The item in <paramref name="collection"/> appearing before <paramref name="pivot"/>, or null if no such item exists.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.GetCommonPrefix(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the most common prefix of every string in this <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <param name="collection">The string <see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <returns>The most common prefix, or an empty string if no common prefix could be found.</returns>
            <example>
            "ab" == { "abc", "abd" }.GetCommonPrefix()
            </example>
        </member>
        <member name="M:osu.Framework.Extensions.IEnumerableExtensions.EnumerableExtensions.CartesianProduct``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Get all combinations of provided sequences.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.ImageExtensions.ImageExtensions.CreateReadOnlyPixelSpan``1(SixLabors.ImageSharp.Image{``0})">
            <summary>
            Creates a contiguous and read-only span from the pixels of an <see cref="T:SixLabors.ImageSharp.Image`1"/>.
            Useful for retrieving unmanaged pointers to the entire pixel data of the <see cref="T:SixLabors.ImageSharp.Image`1"/> for marshalling.
            </summary>
            <remarks>
            The returned <see cref="T:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelSpan`1"/> must be disposed when usage is finished.
            </remarks>
            <param name="image">The <see cref="T:SixLabors.ImageSharp.Image`1"/>.</param>
            <typeparam name="TPixel">The type of pixels in <paramref name="image"/>.</typeparam>
            <returns>The <see cref="T:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelSpan`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ImageExtensions.ImageExtensions.CreateReadOnlyPixelMemory``1(SixLabors.ImageSharp.Image{``0})">
            <summary>
            Creates a contiguous and read-only memory from the pixels of an <see cref="T:SixLabors.ImageSharp.Image`1"/>.
            Useful for retrieving unmanaged pointers to the entire pixel data of the <see cref="T:SixLabors.ImageSharp.Image`1"/> for marshalling.
            </summary>
            <remarks>
            The returned <see cref="T:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelMemory`1"/> must be disposed when usage is finished.
            </remarks>
            <param name="image">The <see cref="T:SixLabors.ImageSharp.Image`1"/>.</param>
            <typeparam name="TPixel">The type of pixels in <paramref name="image"/>.</typeparam>
            <returns>The <see cref="T:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelMemory`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ImageExtensions.ImageExtensions.CreateContiguousMemory``1(SixLabors.ImageSharp.Image{``0})">
            <summary>
            Creates a new contiguous memory buffer from the pixels in an <see cref="T:SixLabors.ImageSharp.Image`1"/>.
            </summary>
            <remarks>
            The returned <see cref="T:System.Buffers.IMemoryOwner`1"/> must be disposed when usage is finished.
            </remarks>
            <param name="image">The <see cref="T:SixLabors.ImageSharp.Image`1"/>.</param>
            <typeparam name="TPixel">The type of pixels in <paramref name="image"/>.</typeparam>
            <returns>The <see cref="T:System.Buffers.IMemoryOwner`1"/>, containing the contiguous pixel memory.</returns>
        </member>
        <member name="P:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelMemory`1.Span">
            <summary>
            The span of pixels.
            </summary>
        </member>
        <member name="F:osu.Framework.Extensions.ImageExtensions.ReadOnlyPixelSpan`1.Span">
            <summary>
            The span of pixels.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.ListExtensions.ListExtensions.AsSlimReadOnly``1(System.Collections.Generic.List{``0})">
            <summary>
            Creates a new read-only view into a <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <remarks>Enumeration does not allocate the enumerator.</remarks>
            <param name="list">The list to create the view of.</param>
            <typeparam name="T">The type of elements contained by the list.</typeparam>
            <returns>The read-only view.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ListExtensions.ListExtensions.AsSlimReadOnly``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Creates a new read-only view into a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <remarks>Enumeration does not allocate the enumerator.</remarks>
            <param name="dictionary">The dictionary to create the view of.</param>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <returns>The read-only view.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToLocalisableString(System.IFormattable,System.String)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableFormattableString"/> formatting the given <paramref name="value"/> to a string, along with an optional <paramref name="format"/> string.
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">The format string.</param>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToUpper(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.CaseTransformableString"/> with the specified underlying localisable string uppercased.
            </summary>
            <param name="str">The localisable string.</param>
            <returns>A case transformable string with its localisable string uppercased.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToUpper(osu.Framework.Localisation.ILocalisableStringData)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.CaseTransformableString"/> with the specified underlying string data uppercased.
            </summary>
            <param name="data">The string data.</param>
            <returns>A case transformable string with its string data uppercased.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToTitle(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying localisable string transformed to title case.
            </summary>
            <param name="str">The localisable string.</param>
            <returns>A case transformable string with its localisable string transformed to title case.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToTitle(osu.Framework.Localisation.ILocalisableStringData)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying string data transformed to title case.
            </summary>
            <param name="data">The string data.</param>
            <returns>A case transformable string with its string data transformed to title case.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToLower(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying localisable string lowercased.
            </summary>
            <param name="str">The localisable string.</param>
            <returns>A case transformable string with its localisable string lowercased.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToLower(osu.Framework.Localisation.ILocalisableStringData)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying string data lowercased.
            </summary>
            <param name="data">The string data.</param>
            <returns>A case transformable string with its string data lowercased.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToSentence(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying localisable string transformed to sentence case.
            </summary>
            <param name="str">The localisable string.</param>
            <returns>A case transformable string with its localisable string transformed to sentence case.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.LocalisationExtensions.LocalisableStringExtensions.ToSentence(osu.Framework.Localisation.ILocalisableStringData)">
            <summary>
            Returns a <see cref="T:osu.Framework.Localisation.LocalisableString"/> with the specified underlying string data transformed to sentence case.
            </summary>
            <param name="data">The string data.</param>
            <returns>A case transformable string with its string data transformed to sentence case.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.MatrixExtensions.MatrixExtensions.ShearFromLeft(osuTK.Matrix3@,osuTK.Vector2)">
            <summary>
            Apply shearing in X and Y direction from the left hand side.
            Since shearing is non-commutative it is important to note that we
            first shear in the X direction, and then in the Y direction.
            </summary>
            <param name="m">The matrix to apply the shearing operation to.</param>
            <param name="v">The X and Y amounts of shearing.</param>
        </member>
        <member name="M:osu.Framework.Extensions.MatrixExtensions.MatrixExtensions.ShearFromRight(osuTK.Matrix3@,osuTK.Vector2)">
            <summary>
            Apply shearing in X and Y direction from the right hand side.
            Since shearing is non-commutative it is important to note that we
            first shear in the Y direction, and then in the X direction.
            </summary>
            <param name="m">The matrix to apply the shearing operation to.</param>
            <param name="v">The X and Y amounts of shearing.</param>
        </member>
        <member name="T:osu.Framework.Extensions.ObjectExtensions.ObjectExtensions">
            <summary>
            Extensions that apply to all objects.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.ObjectExtensions.ObjectExtensions.AsNonNull``1(``0)">
            <summary>
            Coerces a nullable object as non-nullable. This is an alternative to the C# 8 null-forgiving operator "<c>!</c>".
            </summary>
            <remarks>
            This should only be used when an assertion or other handling is not a reasonable alternative.
            </remarks>
            <param name="obj">The nullable object.</param>
            <typeparam name="T">The type of the object.</typeparam>
            <returns>The non-nullable object corresponding to <paramref name="obj"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.ObjectExtensions.ObjectExtensions.IsNull``1(``0)">
            <summary>
            If the given object is null.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.ObjectExtensions.ObjectExtensions.IsNotNull``1(``0)">
            <summary>
            <c>true</c> if the given object is not null, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.OSPlatformExtensions.IsSupportedOnCurrentOSPlatform(System.Reflection.MemberInfo)">
            <summary>
            Checks whether this <see cref="T:System.Reflection.MemberInfo"/> is supported on the current runtime platform as specified by
            [SupportedOSPlatform] and [UnsupportedOSPlatform].
            </summary>
            <param name="member">The <see cref="T:System.Reflection.MemberInfo"/> to check the attributes of.</param>
            <returns><c>true</c> if this <paramref name="member"/> is supported, false otherwise.</returns>
            <remarks>
            This is only a naive check of attributes defined directly on this member, and doesn't account for the (un)supported platforms of the containing class or assembly.
            </remarks>
        </member>
        <member name="M:osu.Framework.Extensions.OSPlatformExtensions.matchesCurrentPlatform(System.Runtime.Versioning.OSPlatformAttribute)">
            <summary>
            Returns whether the provided [OSPlatformAttribute] matches the current (runtime) platform.
            </summary>
            <remarks>This is currently a naive check which doesn't support specific OS versions.</remarks>
        </member>
        <member name="M:osu.Framework.Extensions.PlatformActionExtensions.PlatformActionExtensions.IsCommonTextEditingAction(osu.Framework.Input.PlatformAction)">
            <summary>
            Returns <c>true</c> if this <paramref name="platformAction"/> is a common text editing <see cref="T:osu.Framework.Input.PlatformAction"/>.
            </summary>
            <remarks>
            Common text editing actions are those used for text editing in a text box,
            and/or are used by an platform-native IME for internal text editing purposes.
            </remarks>
        </member>
        <member name="T:osu.Framework.Extensions.PolygonExtensions.ConvexPolygonExtensions">
            <summary>
            Todo: Support segment containment and circles.
            Todo: Might be overkill, but possibly support convex decomposition?
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.PolygonExtensions.ConvexPolygonExtensions.Intersects``2(``0,``1)">
            <summary>
            Determines whether two convex polygons intersect.
            </summary>
            <param name="first">The first polygon.</param>
            <param name="second">The second polygon.</param>
            <returns>Whether the two polygons intersect.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.PolygonExtensions.ConvexPolygonExtensions.intersects(System.ReadOnlySpan{osuTK.Vector2},System.ReadOnlySpan{osuTK.Vector2},System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Determines whether two sets of vertices intersect along a set of axes.
            </summary>
            <param name="axes">The axes to check for intersections along.</param>
            <param name="firstVertices">The first set of vertices.</param>
            <param name="secondVertices">The second set of vertices.</param>
            <returns>Whether there is an intersection between <paramref name="firstVertices"/> and <paramref name="secondVertices"/> along any of <paramref name="axes"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.PolygonExtensions.PolygonExtensions.GetAxes``1(``0,System.Boolean)">
            <summary>
            Computes the axes for each edge in a polygon.
            </summary>
            <param name="polygon">The polygon to compute the axes of.</param>
            <param name="normalize">Whether the normals should be normalized. Allows computation of the exact intersection point.</param>
            <returns>The axes of the polygon.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.PolygonExtensions.PolygonExtensions.GetAxes``1(``0,System.Span{osuTK.Vector2},System.Boolean)">
            <summary>
            Computes the axes for each edge in a polygon.
            </summary>
            <param name="polygon">The polygon to compute the axes of.</param>
            <param name="buffer">A buffer to be used as storage for the axes. Must have a length of at least the count of vertices in <paramref name="polygon"/>.</param>
            <param name="normalize">Whether the normals should be normalized. Allows computation of the exact intersection point.</param>
            <returns>The axes of the polygon. Returned as a slice of <paramref name="buffer"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.PolygonExtensions.PolygonExtensions.getAxes(System.ReadOnlySpan{osuTK.Vector2},System.Span{osuTK.Vector2},System.Boolean)">
            <summary>
            Computes the axes for a set of vertices.
            </summary>
            <param name="vertices">The vertices to compute the axes for.</param>
            <param name="buffer">A buffer to be used as storage for the axes. Must have a length of at least the count of <paramref name="vertices"/>.</param>
            <param name="normalize">Whether the normals should be normalized. Allows computation of the exact intersection point.</param>
            <returns>The axes represented by <paramref name="vertices"/>. Returned as a slice of <paramref name="buffer"/>.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.PopoverExtensions.ShowPopover(osu.Framework.Graphics.Cursor.IHasPopover)">
            <summary>
            Shows the popover for <paramref name="hasPopover"/> on its nearest <see cref="T:osu.Framework.Graphics.Cursor.PopoverContainer"/> ancestor.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.PopoverExtensions.HidePopover(osu.Framework.Graphics.Drawable)">
            <summary>
            Hides the popover shown on <paramref name="drawable"/>'s nearest <see cref="T:osu.Framework.Graphics.Cursor.PopoverContainer"/> ancestor.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadAllBytesToArray(System.IO.Stream)">
            <summary>
            Read the full content of a seekable stream.
            </summary>
            <remarks>
            For a non-seekable stream, use <see cref="M:osu.Framework.Extensions.StreamExtensions.ReadAllRemainingBytesToArray(System.IO.Stream)"/> instead.
            </remarks>
            <param name="stream">The stream to read.</param>
            <returns>The full byte content.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> does not allow seeking, or is too long.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadAllBytesToArrayAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Read the full content of a seekable stream.
            </summary>
            <remarks>
            For a non-seekable stream, use <see cref="M:osu.Framework.Extensions.StreamExtensions.ReadAllRemainingBytesToArray(System.IO.Stream)"/> instead.
            </remarks>
            <param name="stream">The stream to read.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The full byte content.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> does not allow seeking, or is too long.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadBytesToArray(System.IO.Stream,System.Int32)">
            <summary>
            Read specified length from current position in stream.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="length">The length to read.</param>
            <returns>The full byte content.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The <paramref name="length"/> specified exceeded the available data in the stream.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadBytesToArrayAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read the full content of a stream.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="length">The length to read.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The full byte content.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The <paramref name="length"/> specified exceeded the available data in the stream.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadAllRemainingBytesToArray(System.IO.Stream)">
            <summary>
            Read all bytes from a non-seekable stream.
            </summary>
            <param name="stream">The stream to read.</param>
            <returns>The full byte content.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadAllRemainingBytesToArrayAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Read all bytes from a non-seekable stream.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The full byte content.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadToFill(System.IO.Stream,System.Span{System.Byte})">
            <summary>
            Reads bytes from a stream until the provided buffer is full.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="buffer">The buffer to read into.</param>
            <exception cref="T:System.IO.EndOfStreamException">Throws if the stream didn't have enough content to fill the buffer.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.StreamExtensions.ReadToFillAsync(System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Reads bytes from a stream until the provided buffer is full.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="buffer">The buffer to read into.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <exception cref="T:System.IO.EndOfStreamException">Throws if the stream didn't have enough content to fill the buffer.</exception>
        </member>
        <member name="M:osu.Framework.Extensions.TaskExtensions.WaitSafely(System.Threading.Tasks.Task)">
            <summary>
            Safe alternative to Task.Wait which ensures the calling thread is not a thread pool thread.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.TaskExtensions.GetResultSafely``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Safe alternative to Task.Result which ensures the calling thread is not a thread pool thread.
            </summary>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes(System.Type)">
            <summary>
            Return every base type until (and excluding) <see cref="T:System.Object"/>
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Type)">
            <summary>
            Determines whether the specified type is a <see cref="T:System.Nullable`1"/> type.
            <para>
            https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/how-to-identify-a-nullable-type
            </para>
            </summary>
            <remarks>
            When nullable reference types are enabled, prefer to use one of:
            <see cref="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)"/>, <see cref="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)"/>, <see cref="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)"/>, or <see cref="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)"/>,
            in order to properly handle events/properties/fields/parameters.
            </remarks>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType(System.Type)">
            <summary>
            Gets the underlying type of a <see cref="T:System.Nullable`1"/>.
            </summary>
            <remarks>This method is cached.</remarks>
            <param name="type">The potentially nullable type.</param>
            <returns>The underlying type, or null if one does not exist.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)">
            <summary>
            Determines whether the type of an event is nullable.
            </summary>
            <remarks>
            Will be <c>false</c> for reference types if nullable reference types are not enabled.
            </remarks>
            <param name="eventInfo">The event.</param>
            <returns>Whether the event type is nullable.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)">
            <summary>
            Determines whether the type of a parameter is nullable.
            </summary>
            <remarks>
            Will be <c>false</c> for reference types if nullable reference types are not enabled.
            </remarks>
            <param name="parameterInfo">The parameter.</param>
            <returns>Whether the parameter type is nullable.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)">
            <summary>
            Determines whether the type of a field is nullable.
            </summary>
            <remarks>
            Will be <c>false</c> for reference types if nullable reference types are not enabled.
            </remarks>
            <param name="fieldInfo">The field.</param>
            <returns>Whether the field type is nullable.</returns>
        </member>
        <member name="M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the type of a property is nullable.
            </summary>
            <remarks>
            Will be <c>false</c> for reference types if nullable reference types are not enabled.
            </remarks>
            <param name="propertyInfo">The property.</param>
            <returns>Whether the property type is nullable.</returns>
        </member>
        <member name="P:osu.Framework.FrameworkEnvironment.AllowInsecureRequests">
            <summary>
            Whether non-SSL requests should be allowed. Debug only. Defaults to disabled.
            When disabled, http:// requests will be automatically converted to https://.
            </summary>
        </member>
        <member name="P:osu.Framework.Game.DefaultTextureFilteringMode">
            <summary>
            The filtering mode to use for all textures fetched from <see cref="P:osu.Framework.Game.Textures"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Game.IsActive">
            <summary>
            Whether the game is active (in the foreground).
            </summary>
        </member>
        <member name="P:osu.Framework.Game.Fonts">
            <summary>
            A store containing fonts accessible game-wide.
            </summary>
            <remarks>
            It is recommended to use <see cref="M:osu.Framework.Game.AddFont(osu.Framework.IO.Stores.ResourceStore{System.Byte[]},System.String,osu.Framework.IO.Stores.FontStore)"/> when adding new fonts.
            </remarks>
        </member>
        <member name="M:osu.Framework.Game.CreateLocalisationManager(osu.Framework.Configuration.FrameworkConfigManager)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Localisation.LocalisationManager"/>.
            </summary>
            <param name="frameworkConfig">The framework config manager.</param>
        </member>
        <member name="M:osu.Framework.Game.GetFrameworkConfigDefaults">
            <summary>
            Provide <see cref="T:osu.Framework.Configuration.FrameworkSetting"/> defaults which should override those provided by osu-framework.
            <remarks>
            Please check https://github.com/ppy/osu-framework/blob/master/osu.Framework/Configuration/FrameworkConfigManager.cs for expected types.
            </remarks>
            </summary>
        </member>
        <member name="M:osu.Framework.Game.CreateStorage(osu.Framework.Platform.GameHost,osu.Framework.Platform.Storage)">
            <summary>
            Creates the <see cref="T:osu.Framework.Platform.Storage"/> where this <see cref="T:osu.Framework.Game"/> will reside.
            </summary>
            <param name="host">The <see cref="T:osu.Framework.Platform.GameHost"/>.</param>
            <param name="defaultStorage">The default <see cref="T:osu.Framework.Platform.Storage"/> to be used if a custom <see cref="T:osu.Framework.Platform.Storage"/> isn't desired.</param>
            <returns>The <see cref="T:osu.Framework.Platform.Storage"/>.</returns>
        </member>
        <member name="M:osu.Framework.Game.SetHost(osu.Framework.Platform.GameHost)">
            <summary>
            As Load is run post host creation, you can override this method to alter properties of the host before it makes itself visible to the user.
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:osu.Framework.Game.AddFont(osu.Framework.IO.Stores.ResourceStore{System.Byte[]},System.String,osu.Framework.IO.Stores.FontStore)">
            <summary>
            Add a font to be globally accessible to the game.
            </summary>
            <param name="store">The backing store with font resources.</param>
            <param name="assetName">The base name of the font.</param>
            <param name="target">An optional target store to add the font to. If not specified, <see cref="P:osu.Framework.Game.Fonts"/> is used.</param>
        </member>
        <member name="M:osu.Framework.Game.RequestExit">
            <summary>
            Requests the game to exit. This exit can be blocked by <see cref="M:osu.Framework.Game.OnExiting"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Game.Exit">
            <summary>
            Force-closes the game, ignoring <see cref="M:osu.Framework.Game.OnExiting"/> return value.
            </summary>
        </member>
        <member name="M:osu.Framework.Game.OnExiting">
            <summary>
            Fired when an exit has been requested.
            </summary>
            <remarks>Usually fired because <see cref="F:osu.Framework.Input.PlatformAction.Exit"/> or the window close (X) button was pressed.</remarks>
            <returns>Return <c>true</c> to block the exit process.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.Animation`1">
            <summary>
            Represents a generic, frame-based animation. Inherit this class if you need custom animations.
            </summary>
            <typeparam name="T">The type of content in the frames of the animation.</typeparam>
        </member>
        <member name="F:osu.Framework.Graphics.Animations.Animation`1.DefaultFrameLength">
            <summary>
            The duration in milliseconds of a newly added frame, if no duration is explicitly specified when adding the frame.
            Defaults to 60fps.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.Animation`1.FrameCount">
            <summary>
            The number of frames this animation has.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.#ctor(System.Boolean)">
            <summary>
            Construct a new animation which loops by default.
            </summary>
            <param name="startAtCurrentTime">Whether the current clock time should be assumed as the 0th animation frame.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.GotoFrame(System.Int32)">
            <summary>
            Displays the frame with the given zero-based frame index.
            </summary>
            <param name="frameIndex">The zero-based index of the frame to display.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.AddFrame(`0,System.Nullable{System.Double})">
            <summary>
            Adds a new frame with the given content and display duration (in milliseconds) to this animation.
            </summary>
            <param name="content">The content of the new frame.</param>
            <param name="displayDuration">The duration the new frame should be displayed for.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.AddFrames(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a new frame for each element in the given enumerable. Every frame will be displayed for 1/60th of a second.
            </summary>
            <param name="contents">The contents to use for creating new frames.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.AddFrames(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Animations.FrameData{`0}})">
            <summary>
            Adds a new frame for each element in the given enumerable. Every frame will be displayed for the given number of milliseconds.
            </summary>
            <param name="frames">The contents and display durations to use for creating new frames.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.ClearFrames">
            <summary>
            Removes all frames from this animation.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.DisplayFrame(`0)">
            <summary>
            Displays the given contents.
            </summary>
            <remarks>This method will only be called after <see cref="M:osu.Framework.Graphics.Animations.Animation`1.OnFrameAdded(`0,System.Double)"/> has been called at least once.</remarks>
            <param name="content">The content that will be displayed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.ClearDisplay">
            <summary>
            Clear the currently displayed frame.
            </summary>
            <remarks>Called when resetting the animation, ie. on <see cref="M:osu.Framework.Graphics.Animations.Animation`1.ClearFrames"/>.</remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.Animation`1.OnFrameAdded(`0,System.Double)">
            <summary>
            Called whenever a new frame was added to this animation.
            </summary>
            <param name="content">The content of the new frame.</param>
            <param name="displayDuration">The display duration of the new frame.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.AnimationClockComposite.#ctor(System.Boolean)">
            <summary>
            Construct a new animation.
            </summary>
            <param name="startAtCurrentTime">Whether the current clock time should be assumed as the 0th animation frame.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.AnimationClockComposite.CreateContent">
            <summary>
            Create the content container for animation display.
            </summary>
            <returns>The container providing the content to be added into this <see cref="T:osu.Framework.Graphics.Animations.AnimationClockComposite"/>'s hierarchy.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.AnimationClockComposite.PlaybackPosition">
            <summary>
            The current playback position of the animation, in milliseconds.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.CustomisableSizeCompositeDrawable">
            <summary>
            A drawable which handles sizing in a roughly expected way when wrapping a single direct child.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.CustomisableSizeCompositeDrawable.GetCurrentDisplaySize">
            <summary>
            Retrieves the size of the target display content.
            </summary>
            <returns>The size of current content.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.DrawableAnimation">
            <summary>
            An animation that switches the displayed drawable when a new frame is displayed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.FramedAnimationExtensions">
            <summary>
            This class holds various extension methods for the <see cref="T:osu.Framework.Graphics.Animations.IFramedAnimation"/> interface.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.FramedAnimationExtensions.GotoAndStop(osu.Framework.Graphics.Animations.IFramedAnimation,System.Int32)">
            <summary>
            Displays the frame with the given zero-based frame index and stops the animation at that frame.
            </summary>
            <param name="animation">The animation that should seek the frame and stop playing.</param>
            <param name="frameIndex">The zero-based index of the frame to display.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.FramedAnimationExtensions.GotoAndPlay(osu.Framework.Graphics.Animations.IFramedAnimation,System.Int32)">
            <summary>
            Displays the frame with the given zero-based frame index and plays the animation from that frame.
            </summary>
            <param name="animation">The animation that should seek the frame and start playing.</param>
            <param name="frameIndex">The zero-based index of the frame to display.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.FramedAnimationExtensions.Play(osu.Framework.Graphics.Animations.IFramedAnimation)">
            <summary>
            Resumes playing the animation.
            </summary>
            <param name="animation">The animation to play.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.FramedAnimationExtensions.Stop(osu.Framework.Graphics.Animations.IFramedAnimation)">
            <summary>
            Stops playing the animation.
            </summary>
            <param name="animation">The animation to stop playing.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.FramedAnimationExtensions.Restart(osu.Framework.Graphics.Animations.IFramedAnimation)">
            <summary>
            Restarts the animation.
            </summary>
            <param name="animation">The animation to restart.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.FrameData`1">
            <summary>
            Represents all data necessary to describe a single frame of an <see cref="T:osu.Framework.Graphics.Animations.Animation`1"/>.
            </summary>
            <typeparam name="T">The type of animation the frame data is for.</typeparam>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.FrameData`1.Content">
            <summary>
            The contents to display for the frame.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.FrameData`1.Duration">
            <summary>
            The duration to display the frame for.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.FrameData`1.DisplayStartTime">
            <summary>
            The time at which this frame is displayed in the containing animation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.FrameData`1.DisplayEndTime">
            <summary>
            The time at which this frame is no longer displayed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.IAnimation">
            <summary>
            An animation / playback sequence.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IAnimation.Duration">
            <summary>
            The duration of the animation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IAnimation.FinishedPlaying">
            <summary>
            True if the animation has finished playing, false otherwise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IAnimation.IsPlaying">
            <summary>
            True if the animation is playing, false otherwise. <c>true</c> by default.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IAnimation.Loop">
            <summary>
            True if the animation should start over from the first frame after finishing. False if it should stop playing and keep displaying the last frame when finishing.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.IAnimation.Seek(System.Double)">
            <summary>
            Seek the animation to a specific time value.
            </summary>
            <param name="time">The time value to seek to.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IAnimation.PlaybackPosition">
            <summary>
            The current position of playback.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.IFramedAnimation">
            <summary>
            An animation with well-defined frames.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IFramedAnimation.FrameCount">
            <summary>
            The number of frames this animation has.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Animations.IFramedAnimation.CurrentFrameIndex">
            <summary>
            The currently visible frame's index.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Animations.IFramedAnimation.GotoFrame(System.Int32)">
            <summary>
            Displays the frame with the given zero-based frame index.
            </summary>
            <param name="frameIndex">The zero-based index of the frame to display.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Animations.TextureAnimation">
            <summary>
            An animation that switches the displayed texture when a new frame is displayed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Audio.DrawableAudioWrapper">
            <summary>
            A wrapper which allows audio components (or adjustments) to exist in the draw hierarchy.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume">
            <summary>
            The volume of this component.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Balance">
            <summary>
            The playback balance of this sample (-1 .. 1 where 0 is centered)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Frequency">
            <summary>
            Rate at which the component is played back (affects pitch). 1 is 100% playback speed, or default frequency.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Tempo">
            <summary>
            Rate at which the component is played back (does not affect pitch). 1 is 100% playback speed.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Audio.DrawableAudioWrapper.#ctor(osu.Framework.Graphics.Drawable)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Audio.DrawableAudioWrapper"/> that will contain a drawable child.
            Generally used to add adjustments to a hierarchy without adding an audio component.
            </summary>
            <param name="content">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be wrapped.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Audio.DrawableAudioWrapper.#ctor(osu.Framework.Audio.IAdjustableAudioComponent,System.Boolean)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Audio.DrawableAudioWrapper"/> that will wrap an audio component (and contain no drawable content).
            </summary>
            <param name="component">The audio component to wrap.</param>
            <param name="disposeUnderlyingComponentOnDispose">Whether the component should be automatically disposed on drawable disposal/expiry.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Audio.DrawableSample">
            <summary>
            A <see cref="T:osu.Framework.Audio.Sample.SampleChannel"/> wrapper to allow insertion in the draw hierarchy to allow transforms, lifetime management etc.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Audio.DrawableSample.#ctor(osu.Framework.Audio.Sample.ISample,System.Boolean)">
            <summary>
            Construct a new drawable sample instance.
            </summary>
            <param name="sample">The audio sample to wrap.</param>
            <param name="disposeSampleOnDisposal">Whether the sample should be automatically disposed on drawable disposal/expiry.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Audio.DrawableTrack">
            <summary>
            A <see cref="T:osu.Framework.Audio.Track.Track"/> wrapper to allow insertion in the draw hierarchy to allow transforms, lifetime management etc.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Audio.DrawableTrack.#ctor(osu.Framework.Audio.Track.Track,System.Boolean)">
            <summary>
            Construct a new drawable track instance.
            </summary>
            <param name="track">The audio track to wrap.</param>
            <param name="disposeTrackOnDisposal">Whether the track should be automatically disposed on drawable disposal/expiry.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.DrawableTrack.TrackLoaded">
            <summary>
            Whether the underlying track is loaded.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Audio.WaveformGraph">
            <summary>
            Visualises the waveform for an audio stream.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.Resolution">
            <summary>
            Gets or sets the amount of <see cref="T:osu.Framework.Audio.Track.Waveform.Point"/>'s displayed relative to <see cref="P:osu.Framework.Graphics.Drawable.DrawWidth">DrawWidth</see>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.Waveform">
            <summary>
            The <see cref="T:osu.Framework.Audio.Track.Waveform"/> to display.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.BaseColour">
            <summary>
            The base colour of the graph for frequencies that don't fall into the predefined low/mid/high buckets.
            Also serves as the default value of <see cref="P:osu.Framework.Graphics.Audio.WaveformGraph.LowColour"/>, <see cref="P:osu.Framework.Graphics.Audio.WaveformGraph.MidColour"/>, and <see cref="P:osu.Framework.Graphics.Audio.WaveformGraph.HighColour"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.LowColour">
            <summary>
            The colour which low-range frequencies should be colourised with.
            May be null for this frequency range to not be colourised.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.MidColour">
            <summary>
            The colour which mid-range frequencies should be colourised with.
            May be null for this frequency range to not be colourised.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Audio.WaveformGraph.HighColour">
            <summary>
            The colour which high-range frequencies should be colourised with.
            May be null for this frequency range to not be colourised.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Audio.WaveformGraph.OnWaveformRegenerated(osu.Framework.Audio.Track.Waveform)">
            <summary>
            Invoked when the waveform has been regenerated.
            </summary>
            <param name="waveform">The new <see cref="P:osu.Framework.Graphics.Audio.WaveformGraph.Waveform"/> to be displayed.</param>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.Inherit">
            <summary>
            Inherits from parent.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.Add">
            <summary>
            Adds the source and destination colours.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.Min">
            <summary>
            Chooses the minimum of each component of the source and destination colours.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.Max">
            <summary>
            Chooses the maximum of each component of the source and destination colours.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.Subtract">
            <summary>
            Subtracts the destination colour from the source colour.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingEquation.ReverseSubtract">
            <summary>
            Subtracts the source colour from the destination colour.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.BlendingMask">
            <summary>
            Represents colour component flags used for colour write mask during blending.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.None">
            <summary>
            No colour component will be written to the framebuffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.Red">
            <summary>
            The red component will be written to the framebuffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.Green">
            <summary>
            The green component will be written to the framebuffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.Blue">
            <summary>
            The blue component will be written to the framebuffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.Alpha">
            <summary>
            The alpha component will be written to the framebuffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingMask.All">
            <summary>
            All colour components will be written to the framebuffer.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.BlendingParameters">
            <summary>
            Contains information about how an <see cref="T:osu.Framework.Graphics.IDrawable"/> should be blended into its destination.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.Source">
            <summary>
            The blending factor for the source color of the blend.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.Destination">
            <summary>
            The blending factor for the destination color of the blend.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.SourceAlpha">
            <summary>
            The blending factor for the source alpha of the blend.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.DestinationAlpha">
            <summary>
            The blending factor for the destination alpha of the blend.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.RGBEquation">
            <summary>
            Gets or sets the <see cref="T:osu.Framework.Graphics.BlendingEquation"/> to use for the RGB components of the blend.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BlendingParameters.AlphaEquation">
            <summary>
            Gets or sets the <see cref="T:osu.Framework.Graphics.BlendingEquation"/> to use for the alpha component of the blend.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.BlendingParameters.CopyFromParent(osu.Framework.Graphics.BlendingParameters)">
            <summary>
            Copy all properties that are marked as inherited from a parent <see cref="T:osu.Framework.Graphics.BlendingParameters"/> object.
            </summary>
            <param name="parent">The parent <see cref="T:osu.Framework.Graphics.BlendingParameters"/> from which to copy inherited properties.</param>
        </member>
        <member name="M:osu.Framework.Graphics.BlendingParameters.ApplyDefaultToInherited">
            <summary>
            Any properties marked as inherited will have their blending mode changed to the default type. This can occur when a root element is set to inherited.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.RGBEquationMode">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendEquationMode"/> for the currently specified RGB Equation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.AlphaEquationMode">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendEquationMode"/> for the currently specified Alpha Equation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.SourceBlendingFactor">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendingFactorSrc"/> for the currently specified source blending mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.DestinationBlendingFactor">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendingFactorDest"/> for the currently specified destination blending mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.SourceAlphaBlendingFactor">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendingFactorSrc"/> for the currently specified source alpha mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BlendingParameters.DestinationAlphaBlendingFactor">
            <summary>
            Gets the <see cref="T:osuTK.Graphics.ES30.BlendingFactorDest"/> for the currently specified destination alpha mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BufferedDrawNode.Child">
            <summary>
            The child <see cref="T:osu.Framework.Graphics.DrawNode"/> which is used to populate the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s with.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BufferedDrawNode.SharedData">
            <summary>
            Data shared amongst all <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>s, providing storage for <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BufferedDrawNode.DrawColourInfo">
            <summary>
            Contains the colour and blending information of this <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BufferedDrawNode.RequiresRedraw">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/> should be redrawn.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNode.GetDrawVersion">
            <summary>
            Retrieves the version of the state of this <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            The <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/> will only re-render if this version is greater than that of the rendered <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s.
            </summary>
            <remarks>
            By default, the <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/> is re-rendered with every <see cref="T:osu.Framework.Graphics.DrawNode"/> invalidation.
            </remarks>
            <returns>A version representing this <see cref="T:osu.Framework.Graphics.DrawNode"/>'s state.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNode.PopulateContents(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Populates the contents of the effect buffers of <see cref="F:osu.Framework.Graphics.BufferedDrawNode.SharedData"/>.
            This is invoked after <see cref="P:osu.Framework.Graphics.BufferedDrawNode.Child"/> has been rendered to the main buffer.
            </summary>
            <param name="renderer"></param>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNode.DrawContents(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Draws the applicable effect buffers of <see cref="F:osu.Framework.Graphics.BufferedDrawNode.SharedData"/> to the back buffer.
            </summary>
            <param name="renderer"></param>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNode.BindFrameBuffer(osu.Framework.Graphics.Rendering.IFrameBuffer)">
            <summary>
            Binds and initialises an <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> if required.
            </summary>
            <param name="frameBuffer">The <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> to bind.</param>
            <returns>A token that must be disposed upon finishing use of <paramref name="frameBuffer"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.BufferedDrawNodeSharedData">
            <summary>
            Contains data which is shared between all <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>s of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This should be constructed _once_ per <see cref="T:osu.Framework.Graphics.Drawable"/>, and given to the constructor of <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.BufferedDrawNodeSharedData.DrawVersion">
            <summary>
            The version of drawn contents currently present in <see cref="P:osu.Framework.Graphics.BufferedDrawNodeSharedData.MainBuffer"/> and <see cref="F:osu.Framework.Graphics.BufferedDrawNodeSharedData.effectBuffers"/>.
            This should only be modified by <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BufferedDrawNodeSharedData.PixelSnapping">
            <summary>
            Whether the frame buffer position should be snapped to the nearest pixel when blitting.
            This amounts to setting the texture filtering mode to "nearest".
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BufferedDrawNodeSharedData.ClipToRootNode">
            <summary>
            Whether the frame buffer should be clipped to be contained in the root node.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.BufferedDrawNodeSharedData.effectBuffers">
            <summary>
            A set of <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s which are used in a ping-pong manner to render effects to.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNodeSharedData.#ctor(osu.Framework.Graphics.Rendering.RenderBufferFormat[],System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.BufferedDrawNodeSharedData"/> with no effect buffers.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNodeSharedData.#ctor(System.Int32,osu.Framework.Graphics.Rendering.RenderBufferFormat[],System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.BufferedDrawNodeSharedData"/> with a specific amount of effect buffers.
            </summary>
            <param name="effectBufferCount">The number of effect buffers.</param>
            <param name="mainBufferFormats">The render buffer formats to attach to the main frame buffer.</param>
            <param name="pixelSnapping">Whether the frame buffer position should be snapped to the nearest pixel when blitting.
            This amounts to setting the texture filtering mode to "nearest".</param>
            <param name="clipToRootNode">Whether the frame buffer should be clipped to be contained in the root node..</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="effectBufferCount"/> is less than 0.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.BufferedDrawNodeSharedData.MainBuffer">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> which contains the original version of the rendered <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.BufferedDrawNodeSharedData.CurrentEffectBuffer">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> which contains the most up-to-date drawn effect.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNodeSharedData.GetNextEffectBuffer">
            <summary>
            Retrieves the next <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> which effects can be rendered to.
            </summary>
            <exception cref="T:System.InvalidOperationException">If there are no available effect buffers.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.BufferedDrawNodeSharedData.ResetCurrentEffectBuffer">
            <summary>
            Resets <see cref="P:osu.Framework.Graphics.BufferedDrawNodeSharedData.CurrentEffectBuffer"/>.
            This should only be called by <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Colour4">
            <summary>
            Represents an RGBA colour in the linear colour space, having colour components in the range 0-1.
            Stored internally as a <see cref="T:System.Numerics.Vector4"/> for performance.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Colour4.Vector">
            <summary>
            <see cref="T:System.Numerics.Vector4"/> representation of the colour, where XYZW maps to RGBA,
            and each component is in the 0-1 range.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.R">
            <summary>
            Represents the red component of the linear RGBA colour in the 0-1 range.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.G">
            <summary>
            Represents the green component of the linear RGBA colour in the 0-1 range.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.B">
            <summary>
            Represents the blue component of the linear RGBA colour in the 0-1 range.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.A">
            <summary>
            Represents the alpha component of the RGBA colour in the 0-1 range.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the specified RGBA components in the 0-1 range.
            </summary>
            <param name="r">The red component, in the 0-1 range.</param>
            <param name="g">The green component, in the 0-1 range.</param>
            <param name="b">The blue component, in the 0-1 range.</param>
            <param name="a">The alpha component, in the 0-1 range.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the specified RGBA components in the 0-255 range.
            </summary>
            <param name="r">The red component, in the 0-255 range.</param>
            <param name="g">The green component, in the 0-255 range.</param>
            <param name="b">The blue component, in the 0-255 range.</param>
            <param name="a">The alpha component, in the 0-255 range.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.#ctor(System.Numerics.Vector4)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the specified <see cref="T:System.Numerics.Vector4"/>,
            where XYZW maps to RGBA.
            </summary>
            <param name="vector">The source vector, whose components should be in the 0-1 range.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.MultiplyAlpha(System.Single)">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the same RGB components, but multiplying the current alpha component by a scalar value.
            The final alpha is clamped to the 0-1 range.
            </summary>
            <param name="scalar">The value that the existing alpha will be multiplied by.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.Opacity(System.Single)">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the same RGB components and a specified alpha value.
            The final alpha is clamped to the 0-1 range.
            </summary>
            <param name="alpha">The new alpha value for the returned colour, in the 0-1 range.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.Opacity(System.Byte)">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with the same RGB components and a specified alpha value.
            The final alpha is clamped to the 0-1 range.
            </summary>
            <param name="alpha">The new alpha value for the returned colour, in the 0-255 range.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.Clamped">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with its individual components clamped to the 0-1 range.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.Lighten(System.Single)">
            <summary>
            Returns a lightened version of the colour.
            </summary>
            <param name="amount">Percentage light addition</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.Darken(System.Single)">
            <summary>
            Returns a darkened version of the colour.
            </summary>
            <param name="amount">Percentage light reduction</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Multiply(osu.Framework.Graphics.Colour4,osu.Framework.Graphics.Colour4)">
            <summary>
            Multiplies two colours in the linear colour space.
            </summary>
            <param name="first">The left hand side of the multiplication.</param>
            <param name="second">The right hand side of the multiplication.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Addition(osu.Framework.Graphics.Colour4,osu.Framework.Graphics.Colour4)">
            <summary>
            Adds two colours in the linear colour space. The final value is clamped to the 0-1 range.
            </summary>
            <param name="first">The left hand side of the addition.</param>
            <param name="second">The right hand side of the addition.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Subtraction(osu.Framework.Graphics.Colour4,osu.Framework.Graphics.Colour4)">
            <summary>
            Subtracts two colours in the linear colour space. The final value is clamped to the 0-1 range.
            </summary>
            <param name="first">The left hand side of the subtraction.</param>
            <param name="second">The right hand side of the subtraction.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Multiply(osu.Framework.Graphics.Colour4,System.Single)">
            <summary>
            Linearly multiplies a colour by a scalar value. The final value is clamped to the 0-1 range.
            </summary>
            <param name="colour">The original colour.</param>
            <param name="scalar">The scalar value to multiply by. Must not be negative.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="scalar"/> is negative.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Division(osu.Framework.Graphics.Colour4,System.Single)">
            <summary>
            Linearly divides a colour by a scalar value. The final value is clamped to the 0-1 range.
            </summary>
            <param name="colour">The original colour.</param>
            <param name="scalar">The scalar value to divide by. Must be positive.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="scalar"/> is zero or negative.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Equality(osu.Framework.Graphics.Colour4,osu.Framework.Graphics.Colour4)">
            <summary>
            Performs a <see cref="T:osu.Framework.Graphics.Colour4"/> equality check using the <see cref="T:System.IEquatable`1"/> implementation.
            </summary>
            <param name="first">The left hand side of the equation.</param>
            <param name="second">The right hand side of the equation.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Inequality(osu.Framework.Graphics.Colour4,osu.Framework.Graphics.Colour4)">
            <summary>
            Performs a <see cref="T:osu.Framework.Graphics.Colour4"/> inequality check using the <see cref="T:System.IEquatable`1"/> implementation.
            </summary>
            <param name="first">The left hand side of the equation.</param>
            <param name="second">The right hand side of the equation.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Implicit(osuTK.Graphics.Color4)~osu.Framework.Graphics.Colour4">
            <summary>
            Converts an osuTK <see cref="T:osuTK.Graphics.Color4"/> to an osu!framework <see cref="T:osu.Framework.Graphics.Colour4"/>.
            </summary>
            <param name="colour">The osuTK <see cref="T:osuTK.Graphics.Color4"/> to convert.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.op_Implicit(osu.Framework.Graphics.Colour4)~osuTK.Graphics.Color4">
            <summary>
            Converts an osu!framework <see cref="T:osu.Framework.Graphics.Colour4"/> to an osuTK <see cref="T:osuTK.Graphics.Color4"/>.
            </summary>
            <param name="colour">The osu!framework <see cref="T:osu.Framework.Graphics.Colour4"/> to convert.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToLinear">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with an SRGB->Linear conversion applied
            to each of its chromatic components. Alpha is unchanged.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToSRGB">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> with a Linear->SRGB conversion applied
            to each of its chromatic components. Alpha is unchanged.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToRGBA">
            <summary>
            Returns the <see cref="T:osu.Framework.Graphics.Colour4"/> as a 32-bit unsigned integer in the format RGBA.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.FromRGBA(System.UInt32)">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> from the passed 32-bit unsigned integer in the format RGBA.
            </summary>
            <param name="rgba">The source colour in Rgba32 format.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToARGB">
            <summary>
            Returns the <see cref="T:osu.Framework.Graphics.Colour4"/> as a 32-bit unsigned integer in the format ARGB.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.FromARGB(System.UInt32)">
            <summary>
            Returns a new <see cref="T:osu.Framework.Graphics.Colour4"/> from the passed 32-bit unsigned integer in the format ARGB.
            </summary>
            <param name="argb">The source colour in Argb32 format.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.FromHex(System.String)">
            <summary>
            Converts an RGB or RGBA-formatted hex colour code into a <see cref="T:osu.Framework.Graphics.Colour4"/>.
            Supported colour code formats:
            <list type="bullet">
            <item><description>RGB</description></item>
            <item><description>#RGB</description></item>
            <item><description>RGBA</description></item>
            <item><description>#RGBA</description></item>
            <item><description>RRGGBB</description></item>
            <item><description>#RRGGBB</description></item>
            <item><description>RRGGBBAA</description></item>
            <item><description>#RRGGBBAA</description></item>
            </list>
            </summary>
            <param name="hex">The hex code.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Colour4"/> representing the colour.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="hex"/> is not a supported colour code.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.TryParseHex(System.String,osu.Framework.Graphics.Colour4@)">
            <summary>
            Attempts to convert an RGB or RGBA-formatted hex colour code into a <see cref="T:osu.Framework.Graphics.Colour4"/>.
            Supported colour code formats:
            <list type="bullet">
            <item><description>RGB</description></item>
            <item><description>#RGB</description></item>
            <item><description>RGBA</description></item>
            <item><description>#RGBA</description></item>
            <item><description>RRGGBB</description></item>
            <item><description>#RRGGBB</description></item>
            <item><description>RRGGBBAA</description></item>
            <item><description>#RRGGBBAA</description></item>
            </list>
            </summary>
            <param name="hex">The hex code.</param>
            <param name="colour">The <see cref="T:osu.Framework.Graphics.Colour4"/> representing the colour, if parsing succeeded.</param>
            <returns>Whether the input could be parsed as a hex code.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToHex(System.Boolean)">
            <summary>
            Converts a <see cref="T:osu.Framework.Graphics.Colour4"/> into a hex colour code.
            </summary>
            <param name="alwaysOutputAlpha">Whether the alpha channel should always be output. If <c>false</c>, the alpha channel is only output if this colour is translucent.</param>
            <returns>The hex code representing the colour.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.FromHSV(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Converts an HSV colour to a <see cref="T:osu.Framework.Graphics.Colour4"/>. All components should be in the range 0-1.
            </summary>
            <param name="hue">The hue, between 0 and 1.</param>
            <param name="saturation">The saturation, between 0 and 1.</param>
            <param name="value">The value, between 0 and 1.</param>
            <param name="alpha">The alpha, between 0 and 1.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToHSV">
            <summary>
            Converts a <see cref="T:osu.Framework.Graphics.Colour4"/> to the HSV colour space, represented in the XYZ components of a <see cref="T:System.Numerics.Vector4"/>.
            The returned vector's W component represents the alpha channel of the colour.
            The angular hue is compressed to the 0-1 range in line with the other components.
            </summary>
            <returns>A <see cref="T:System.Numerics.Vector4"/> representing the colour, where all four components are in the 0-1 range.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.FromHSL(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Converts an HSL colour to a <see cref="T:osu.Framework.Graphics.Colour4"/>. All components should be in the range 0-1.
            </summary>
            <param name="hue">The hue, between 0 and 1.</param>
            <param name="saturation">The saturation, between 0 and 1.</param>
            <param name="lightness">The value, between 0 and 1.</param>
            <param name="alpha">The alpha, between 0 and 1.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Colour4.ToHSL">
            <summary>
            Converts a <see cref="T:osu.Framework.Graphics.Colour4"/> to the HSL colour space, represented in the XYZ components of a <see cref="T:System.Numerics.Vector4"/>.
            The returned vector's W component represents the alpha channel of the colour.
            The angular hue is compressed to the 0-1 range in line with the other components.
            </summary>
            <returns>A <see cref="T:System.Numerics.Vector4"/> representing the colour, where all four components are in the 0-1 range.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Transparent">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 255, 0).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.AliceBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 248, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.AntiqueWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 235, 215, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Aqua">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Aquamarine">
            <summary>
            Gets the system color with (R, G, B, A) = (127, 255, 212, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Azure">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 255, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Beige">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 245, 220, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Bisque">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 196, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Black">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.BlanchedAlmond">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 235, 205, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Blue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.BlueViolet">
            <summary>
            Gets the system color with (R, G, B, A) = (138, 43, 226, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Brown">
            <summary>
            Gets the system color with (R, G, B, A) = (165, 42, 42, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.BurlyWood">
            <summary>
            Gets the system color with (R, G, B, A) = (222, 184, 135, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.CadetBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (95, 158, 160, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Chartreuse">
            <summary>
            Gets the system color with (R, G, B, A) = (127, 255, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Chocolate">
            <summary>
            Gets the system color with (R, G, B, A) = (210, 105, 30, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Coral">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 127, 80, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.CornflowerBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (100, 149, 237, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Cornsilk">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 248, 220, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Crimson">
            <summary>
            Gets the system color with (R, G, B, A) = (220, 20, 60, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Cyan">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 139, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkCyan">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 139, 139, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkGoldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (184, 134, 11, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkGray">
            <summary>
            Gets the system color with (R, G, B, A) = (169, 169, 169, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 100, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkKhaki">
            <summary>
            Gets the system color with (R, G, B, A) = (189, 183, 107, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkMagenta">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 0, 139, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkOliveGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (85, 107, 47, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkOrange">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 140, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkOrchid">
            <summary>
            Gets the system color with (R, G, B, A) = (153, 50, 204, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkRed">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 0, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkSalmon">
            <summary>
            Gets the system color with (R, G, B, A) = (233, 150, 122, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (143, 188, 139, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkSlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (72, 61, 139, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkSlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (47, 79, 79, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 206, 209, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DarkViolet">
            <summary>
            Gets the system color with (R, G, B, A) = (148, 0, 211, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DeepPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 20, 147, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DeepSkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 191, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DimGray">
            <summary>
            Gets the system color with (R, G, B, A) = (105, 105, 105, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.DodgerBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (30, 144, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Firebrick">
            <summary>
            Gets the system color with (R, G, B, A) = (178, 34, 34, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.FloralWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 240, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.ForestGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (34, 139, 34, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Fuchsia">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Gainsboro">
            <summary>
            Gets the system color with (R, G, B, A) = (220, 220, 220, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.GhostWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (248, 248, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Gold">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 215, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Goldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (218, 165, 32, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Gray">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 128, 128, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Green">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 128, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.GreenYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (173, 255, 47, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Honeydew">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 255, 240, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.HotPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 105, 180, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.IndianRed">
            <summary>
            Gets the system color with (R, G, B, A) = (205, 92, 92, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Indigo">
            <summary>
            Gets the system color with (R, G, B, A) = (75, 0, 130, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Ivory">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 240, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Khaki">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 230, 140, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Lavender">
            <summary>
            Gets the system color with (R, G, B, A) = (230, 230, 250, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LavenderBlush">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 240, 245, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LawnGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (124, 252, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LemonChiffon">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 205, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (173, 216, 230, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightCoral">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 128, 128, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightCyan">
            <summary>
            Gets the system color with (R, G, B, A) = (224, 255, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightGoldenrodYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 250, 210, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (144, 238, 144, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightGray">
            <summary>
            Gets the system color with (R, G, B, A) = (211, 211, 211, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 182, 193, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightSalmon">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 160, 122, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (32, 178, 170, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightSkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (135, 206, 250, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightSlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (119, 136, 153, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightSteelBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (176, 196, 222, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LightYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 224, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Lime">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.LimeGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (50, 205, 50, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Linen">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 240, 230, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Magenta">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Maroon">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 0, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumAquamarine">
            <summary>
            Gets the system color with (R, G, B, A) = (102, 205, 170, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 205, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumOrchid">
            <summary>
            Gets the system color with (R, G, B, A) = (186, 85, 211, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumPurple">
            <summary>
            Gets the system color with (R, G, B, A) = (147, 112, 219, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (60, 179, 113, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumSlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (123, 104, 238, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumSpringGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 250, 154, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (72, 209, 204, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MediumVioletRed">
            <summary>
            Gets the system color with (R, G, B, A) = (199, 21, 133, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MidnightBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (25, 25, 112, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MintCream">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 255, 250, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.MistyRose">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 225, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Moccasin">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 181, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.NavajoWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 222, 173, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Navy">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 128, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.OldLace">
            <summary>
            Gets the system color with (R, G, B, A) = (253, 245, 230, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Olive">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 128, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.OliveDrab">
            <summary>
            Gets the system color with (R, G, B, A) = (107, 142, 35, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Orange">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 165, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.OrangeRed">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 69, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Orchid">
            <summary>
            Gets the system color with (R, G, B, A) = (218, 112, 214, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PaleGoldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (238, 232, 170, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PaleGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (152, 251, 152, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PaleTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (175, 238, 238, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PaleVioletRed">
            <summary>
            Gets the system color with (R, G, B, A) = (219, 112, 147, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PapayaWhip">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 239, 213, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PeachPuff">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 218, 185, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Peru">
            <summary>
            Gets the system color with (R, G, B, A) = (205, 133, 63, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Pink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 192, 203, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Plum">
            <summary>
            Gets the system color with (R, G, B, A) = (221, 160, 221, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.PowderBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (176, 224, 230, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Purple">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 0, 128, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Red">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.RosyBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (188, 143, 143, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.RoyalBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (65, 105, 225, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SaddleBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 69, 19, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Salmon">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 128, 114, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SandyBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (244, 164, 96, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (46, 139, 87, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SeaShell">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 245, 238, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Sienna">
            <summary>
            Gets the system color with (R, G, B, A) = (160, 82, 45, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Silver">
            <summary>
            Gets the system color with (R, G, B, A) = (192, 192, 192, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (135, 206, 235, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (106, 90, 205, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (112, 128, 144, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Snow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 250, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SpringGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 127, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.SteelBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (70, 130, 180, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Tan">
            <summary>
            Gets the system color with (R, G, B, A) = (210, 180, 140, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Teal">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 128, 128, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Thistle">
            <summary>
            Gets the system color with (R, G, B, A) = (216, 191, 216, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Tomato">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 99, 71, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Turquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (64, 224, 208, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Violet">
            <summary>
            Gets the system color with (R, G, B, A) = (238, 130, 238, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Wheat">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 222, 179, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.White">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 255, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.WhiteSmoke">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 245, 245, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.Yellow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 0, 255).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour4.YellowGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (154, 205, 50, 255).
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Colour.ColourInfo">
            <summary>
            ColourInfo contains information about the colours of all 4 vertices of a quad.
            These colours are always stored in linear space.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.SingleColour(osu.Framework.Graphics.Colour.SRGBColour)">
            <summary>
            Creates a ColourInfo with a single linear colour assigned to all vertices.
            </summary>
            <param name="colour">The single linear colour to be assigned to all vertices.</param>
            <returns>The created ColourInfo.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.GradientHorizontal(osu.Framework.Graphics.Colour.SRGBColour,osu.Framework.Graphics.Colour.SRGBColour)">
            <summary>
            Creates a ColourInfo with a horizontal gradient.
            </summary>
            <param name="c1">The left colour of the gradient.</param>
            <param name="c2">The right colour of the gradient.</param>
            <returns>The created ColourInfo.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.GradientVertical(osu.Framework.Graphics.Colour.SRGBColour,osu.Framework.Graphics.Colour.SRGBColour)">
            <summary>
            Creates a ColourInfo with a vertical gradient.
            </summary>
            <param name="c1">The top colour of the gradient.</param>
            <param name="c2">The bottom colour of the gradient.</param>
            <returns>The created ColourInfo.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.TryExtractSingleColour(osu.Framework.Graphics.Colour.SRGBColour@)">
            <summary>
            Attempts to extract the single colour represented by this <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/>.
            </summary>
            <param name="colour">The extracted colour. If <c>false</c> is returned, this represents the top-left colour.</param>
            <returns>Whether the extracted colour is the single colour represented by this <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.Interpolate(osu.Framework.Graphics.Primitives.Quad)">
            <summary>
            Interpolates this <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/> across a quad.
            </summary>
            <remarks>
            This method is especially useful when working with multi-colour <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/>s.
            When such a colour is interpolated across a quad that is a subset of the unit quad (0, 0, 1, 1),
            the resulting colour can be thought of as the the original colour but "cropped" to the bounds of the subquad.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.ColourInfo.MultiplyAlpha(System.Single)">
            <summary>
            Created a new ColourInfo with the alpha value of the colours of all vertices
            multiplied by a given alpha parameter.
            </summary>
            <param name="alpha">The alpha parameter to multiply the alpha values of all vertices with.</param>
            <returns>The new ColourInfo.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Colour.ColourInfo.AverageColour">
            <summary>
            The average colour of all corners.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour.ColourInfo.MaxAlpha">
            <summary>
            The maximum alpha value of all four corners.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour.ColourInfo.MinAlpha">
            <summary>
            The minimum alpha value of all four corners.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Colour.SRGBColour">
            <summary>
            A wrapper struct around Color4 that takes care of converting between sRGB and linear colour spaces.
            Internally this struct stores the colour in sRGB space, which is exposed by the <see cref="F:osu.Framework.Graphics.Colour.SRGBColour.SRGB"/> member.
            This struct converts to linear space by using the <see cref="P:osu.Framework.Graphics.Colour.SRGBColour.Linear"/> member.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Colour.SRGBColour.SRGB">
            <summary>
            A <see cref="T:osuTK.Graphics.Color4"/> representation of this colour in the sRGB space.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour.SRGBColour.Linear">
            <summary>
            A <see cref="T:osuTK.Graphics.Color4"/> representation of this colour in the linear space.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Colour.SRGBColour.Alpha">
            <summary>
            The alpha component of this colour.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Colour.SRGBColour.MultiplyAlpha(System.Single)">
            <summary>
            Multiplies the alpha value of this colour by the given alpha factor.
            </summary>
            <param name="alpha">The alpha factor to multiply with.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Component">
            <summary>
            An updateable component that can be inserted into the draw hierarchy.
            This is currently used as a marker for cases where nothing more than load, update, lifetime support and hierarchy presence are required.
            Eventually this will be fleshed out (and the inheritance will be reversed to Drawable : Component).
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.AudioContainer`1">
            <summary>
            A container which exposes audio adjustments via <see cref="T:osu.Framework.Audio.IAggregateAudioAdjustment"/>.
            </summary>
            <remarks>
            This is a bare-minimal implementation of a container, so it may be required to be nested inside a <see cref="T:osu.Framework.Graphics.Containers.Container"/> for some use cases.
            </remarks>
            <typeparam name="T">The type of <see cref="T:osu.Framework.Graphics.Drawable"/>.</typeparam>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.AudioContainer">
            <summary>
            A container which exposes audio adjustments via <see cref="T:osu.Framework.Audio.IAggregateAudioAdjustment"/>.
            </summary>
            <remarks>
            This is a bare-minimal implementation of a container, so it may be required to be nested inside a <see cref="T:osu.Framework.Graphics.Containers.Container"/> for some use cases.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.BufferedContainer">
            <summary>
            A container that renders its children to an internal framebuffer, and then
            blits the framebuffer to the screen, instead of directly rendering the children
            to the screen. This allows otherwise impossible effects to be applied to the
            appearance of the container at the cost of performance. Such effects include
            uniform fading of children, blur, and other post-processing effects.
            If all children are of a specific non-<see cref="T:osu.Framework.Graphics.Drawable"/> type, use the
            generic version <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.BufferedContainer.#ctor(osu.Framework.Graphics.Rendering.RenderBufferFormat[],System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:osu.Framework.Graphics.Containers.BufferedContainer`1">
            <summary>
            A container that renders its children to an internal framebuffer, and then
            blits the framebuffer to the screen, instead of directly rendering the children
            to the screen. This allows otherwise impossible effects to be applied to the
            appearance of the container at the cost of performance. Such effects include
            uniform fading of children, blur, and other post-processing effects.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.DrawOriginal">
            <summary>
            If true the original buffered children will be drawn a second time on top of any effect (e.g. blur).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.BlurSigma">
            <summary>
            Controls the amount of blurring in two orthogonal directions (X and Y if
            <see cref="P:osu.Framework.Graphics.Containers.BufferedContainer`1.BlurRotation"/> is zero).
            Blur is parametrized by a gaussian image filter. This property controls
            the standard deviation (sigma) of the gaussian kernel.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.BlurRotation">
            <summary>
            Rotates the blur kernel clockwise. In degrees. Has no effect if
            <see cref="P:osu.Framework.Graphics.Containers.BufferedContainer`1.BlurSigma"/> has the same magnitude in both directions.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.EffectColour">
            <summary>
            The multiplicative colour of drawn buffered object after applying all effects (e.g. blur). Default is <see cref="P:osuTK.Graphics.Color4.White"/>.
            Does not affect the original which is drawn when <see cref="P:osu.Framework.Graphics.Containers.BufferedContainer`1.DrawOriginal"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.EffectBlending">
            <summary>
            The <see cref="T:osu.Framework.Graphics.BlendingParameters"/> to use after applying all effects. Default is <see cref="F:osu.Framework.Graphics.BlendingType.Inherit"/>.
            <see cref="F:osu.Framework.Graphics.BlendingType.Inherit"/> inherits the blending mode of the original, i.e. <see cref="P:osu.Framework.Graphics.Drawable.Blending"/> is used.
            Does not affect the original which is drawn when <see cref="P:osu.Framework.Graphics.Containers.BufferedContainer`1.DrawOriginal"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.EffectPlacement">
            <summary>
            Whether the buffered effect should be drawn behind or in front of the original.
            Behind by default. Does not have any effect if <see cref="P:osu.Framework.Graphics.Containers.BufferedContainer`1.DrawOriginal"/> is false.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.BackgroundColour">
            <summary>
            The background colour of the framebuffer. Transparent black by default.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.BufferedContainer`1.UsingCachedFrameBuffer">
            <summary>
            Whether the rendered framebuffer is being cached until <see cref="M:osu.Framework.Graphics.Containers.BufferedContainer`1.ForceRedraw"/> is called
            or the size of the container (i.e. framebuffer) changes.
            If false, then the framebuffer is re-rendered before it is blitted to the screen; equivalent
            to calling <see cref="M:osu.Framework.Graphics.Containers.BufferedContainer`1.ForceRedraw"/> every frame.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.RedrawOnScale">
            <summary>
            Whether to redraw this <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer"/> when the draw scale changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.BufferedContainer`1.ForceRedraw">
            <summary>
            Forces a redraw of the framebuffer before it is blitted the next time.
            Only relevant if <see cref="F:osu.Framework.Graphics.Containers.BufferedContainer`1.UsingCachedFrameBuffer"/> is true.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.BufferedContainer`1.updateVersion">
            <summary>
            In order to signal the draw thread to re-draw the buffered container we version it.
            Our own version (update) keeps track of which version we are on, whereas the
            drawVersion keeps track of the version the draw thread is on.
            When forcing a redraw we increment updateVersion, pass it into each new drawnode
            and the draw thread will realize its drawVersion is lagging behind, thus redrawing.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.BufferedContainer`1.#ctor(osu.Framework.Graphics.Rendering.RenderBufferFormat[],System.Boolean,System.Boolean)">
            <summary>
            Constructs an empty buffered container.
            </summary>
            <param name="formats">The render buffer formats attached to the frame buffer of this <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer"/>.</param>
            <param name="pixelSnapping">
            Whether the frame buffer position should be snapped to the nearest pixel when blitting.
            This amounts to setting the texture filtering mode to "nearest".
            </param>
            <param name="cachedFrameBuffer">
            Whether the rendered frame buffer should be cached until <see cref="M:osu.Framework.Graphics.Containers.BufferedContainer`1.ForceRedraw"/> is called
            or the size of the container (i.e. frame buffer) changes.
            When disabled, drawing will be clipped to the game window bounds. Enabling can allow drawing larger than (or outside) the game window bounds.
            </param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.BufferedContainer`1.DrawEffectBlending">
            <summary>
            The blending which <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1.BufferedContainerDrawNode"/> uses for the effect.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.BufferedContainer`1.CreateView">
            <summary>
            Creates a view which can be added to a container to display the content of this <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/>.
            </summary>
            <returns>The view.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CircularContainer">
            <summary>
            A container which is rounded (via automatic corner-radius and corner-exponent=2) on the shortest edge.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CompositeComponent">
            <summary>
            An updateable component that can be inserted into the draw hierarchy and has self-managed child components.
            This is currently used as a marker for cases where nothing more than load, update, lifetime support and hierarchy presence are required.
            Eventually this will be fleshed out (and the inheritance will be reversed to Drawable : Component).
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CompositeDrawable">
            <summary>
            A drawable consisting of a composite of child drawables which are
            manages by the composite object itself. Transformations applied to
            a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> are also applied to its children.
            Additionally, <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>s support various effects, such as masking, edge effect,
            padding, and automatic sizing depending on their children.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.#ctor">
            <summary>
            Constructs a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> that stores children.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.CreateChildDependencies(osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Create a local dependency container which will be used by our nested children.
            If not overridden, the load-time parent's dependency tree will be used.
            </summary>
            <param name="parent">The parent <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> which should be passed through if we want fallback lookups to work.</param>
            <returns>A new dependency container to be stored for this Drawable.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.Dependencies">
            <summary>
            Contains all dependencies that can be injected into this CompositeDrawable's children using <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/>.
            Add or override dependencies by calling <see cref="M:osu.Framework.Allocation.DependencyContainer.Cache(System.Object)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponentAsync``1(``0,System.Action{``0},System.Threading.CancellationToken,osu.Framework.Threading.Scheduler)">
             <summary>
             Loads a future child or grand-child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> asynchronously. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Dependencies"/>
             and <see cref="P:osu.Framework.Graphics.Drawable.Clock"/> are inherited from this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            
             Note that this will always use the dependencies and clock from this instance. If you must load to a nested container level,
             consider using <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/>
             </summary>
             <typeparam name="TLoadable">The type of the future future child or grand-child to be loaded.</typeparam>
             <param name="component">The child or grand-child to be loaded.</param>
             <param name="onLoaded">Callback to be invoked on the update thread after loading is complete.</param>
             <param name="cancellation">An optional cancellation token.</param>
             <param name="scheduler">The scheduler for <paramref name="onLoaded"/> to be invoked on. If null, the local scheduler will be used.</param>
             <returns>The task which is used for loading and callbacks.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponent``1(``0)">
            <summary>
            Loads a future child or grand-child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> synchronously and immediately. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Dependencies"/>
            and <see cref="P:osu.Framework.Graphics.Drawable.Clock"/> are inherited from this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            <remarks>
            This is generally useful if already in an asynchronous context and requiring forcefully (pre)loading content without adding it to the hierarchy.
            </remarks>
            </summary>
            <typeparam name="TLoadable">The type of the future future child or grand-child to be loaded.</typeparam>
            <param name="component">The child or grand-child to be loaded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponentsAsync``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}},System.Threading.CancellationToken,osu.Framework.Threading.Scheduler)">
             <summary>
             Loads several future child or grand-child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> asynchronously. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Dependencies"/>
             and <see cref="P:osu.Framework.Graphics.Drawable.Clock"/> are inherited from this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            
             Note that this will always use the dependencies and clock from this instance. If you must load to a nested container level,
             consider using <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/>
             </summary>
             <typeparam name="TLoadable">The type of the future future child or grand-child to be loaded.</typeparam>
             <param name="components">The children or grand-children to be loaded.</param>
             <param name="onLoaded">Callback to be invoked on the update thread after loading is complete.</param>
             <param name="cancellation">An optional cancellation token.</param>
             <param name="scheduler">The scheduler for <paramref name="onLoaded"/> to be invoked on. If null, the local scheduler will be used.</param>
             <returns>The task which is used for loading and callbacks.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponents``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Loads several future child or grand-child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> synchronously and immediately. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Dependencies"/>
            and <see cref="P:osu.Framework.Graphics.Drawable.Clock"/> are inherited from this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            <remarks>
            This is generally useful if already in an asynchronous context and requiring forcefully (pre)loading content without adding it to the hierarchy.
            </remarks>
            </summary>
            <typeparam name="TLoadable">The type of the future future child or grand-child to be loaded.</typeparam>
            <param name="components">The children or grand-children to be loaded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.loadComponents``1(System.Collections.Generic.List{``0},osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Load the provided components. Any components which could not be loaded will be removed from the provided list.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.loadChild(osu.Framework.Graphics.Drawable)">
            <summary>
            Loads a <see cref="T:osu.Framework.Graphics.Drawable"/> child. This will not throw in the event of the load being cancelled.
            </summary>
            <param name="child">The <see cref="T:osu.Framework.Graphics.Drawable"/> child to load.</param>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.CompositeDrawable.ChildBecameAlive">
            <summary>
            Invoked when a child has entered <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.CompositeDrawable.ChildDied">
            <summary>
            Invoked when a child has left <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.CompositeDrawable.ChildDepthChanged">
            <summary>
            Fired after a child's <see cref="P:osu.Framework.Graphics.Drawable.Depth"/> is changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChild">
            <summary>
            Gets or sets the only child in <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.Compare(osu.Framework.Graphics.Drawable,osu.Framework.Graphics.Drawable)">
            <summary>
            Compares two <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/> to determine their sorting.
            </summary>
            <param name="x">The first child to compare.</param>
            <param name="y">The second child to compare.</param>
            <returns>-1 if <paramref name="x"/> comes before <paramref name="y"/>, and 1 otherwise.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.CompareReverseChildID(osu.Framework.Graphics.Drawable,osu.Framework.Graphics.Drawable)">
            <summary>
            Helper method comparing children by their depth first, and then by their reversed child ID.
            </summary>
            <param name="x">The first child to compare.</param>
            <param name="y">The second child to compare.</param>
            <returns>-1 if <paramref name="x"/> comes before <paramref name="y"/>, and 1 otherwise.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren">
            <summary>
            This <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> list of children. Assigning to this property will dispose all existing children of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildrenEnumerable">
            <summary>
            Replaces all internal children of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> with the elements contained in the enumerable.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.IndexOfInternal(osu.Framework.Graphics.Drawable)">
            <summary>
            The index of a given child within <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
            <returns>
            If the child is found, its index. Otherwise, the negated index it would obtain
            if it were added to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            <list type="bullet">
            <item>If the supplied <paramref name="drawable"/> is already attached to another <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>.</item>
            <item>If a child drawable was matched using <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.Compare(osu.Framework.Graphics.Drawable,osu.Framework.Graphics.Drawable)"/>, but that child drawable was not the supplied <paramref name="drawable"/>.</item>
            </list>
            </exception>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ContainsInternal(osu.Framework.Graphics.Drawable)">
            <summary>
            Checks whether a given child is contained within <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.RemoveInternal(osu.Framework.Graphics.Drawable,System.Boolean)">
            <summary>
            Removes a given child from this <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
            <param name="drawable">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be removed.</param>
            <param name="disposeImmediately">Whether removed item should be immediately disposed.</param>
            <returns>False if <paramref name="drawable"/> was not a child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> and true otherwise.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ClearInternal(System.Boolean)">
            <summary>
            Clear all of <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
            <param name="disposeChildren">
            Whether removed children should also get disposed.
            Disposal will be recursive.
            </param>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.currentChildID">
            <summary>
            Used to assign a monotonically increasing ID to children as they are added. This member is
            incremented whenever a child is added.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.AddInternal(osu.Framework.Graphics.Drawable)">
            <summary>
            Adds a child to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.AddRangeInternal(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Drawable})">
            <summary>
            Adds a range of children to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>. This is equivalent to calling
            <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.AddInternal(osu.Framework.Graphics.Drawable)"/> on each element of the range in order.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ChangeInternalChildDepth(osu.Framework.Graphics.Drawable,System.Single)">
            <summary>
            Changes the depth of an internal child. This affects ordering of <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            </summary>
            <param name="child">The child whose depth is to be changed.</param>
            <param name="newDepth">The new depth value to be set.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.SortInternal">
            <summary>
            Sorts all children of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
            <remarks>
            This can be used to re-sort the children if the result of <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.Compare(osu.Framework.Graphics.Drawable,osu.Framework.Graphics.Drawable)"/> has changed.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.SchedulerAfterChildren">
            <summary>
            A lazily-initialized scheduler used to schedule tasks to be invoked in future <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterChildren"/>s calls.
            The tasks are invoked at the beginning of the <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterChildren"/> method before anything else.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateChildrenLife">
            <summary>
            Updates the life status of <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/> according to their
            <see cref="P:osu.Framework.Graphics.Drawable.ShouldBeAlive"/> property.
            </summary>
            <returns>True iff the life status of at least one child changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.CheckChildrenLife">
            <summary>
            Checks whether the alive state of any child has changed and processes it. This will add or remove
            children from <see cref="F:osu.Framework.Graphics.Containers.CompositeDrawable.aliveInternalChildren"/> depending on their alive states.
            <para>Note that this does NOT check the load state of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> to check if it can hold any alive children.</para>
            </summary>
            <returns>Whether any child's alive state has changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.checkChildLife(osu.Framework.Graphics.Drawable)">
             <summary>
             Checks whether the alive state of a child has changed and processes it. This will add or remove
             the child from <see cref="F:osu.Framework.Graphics.Containers.CompositeDrawable.aliveInternalChildren"/> depending on its alive state.
            
             This should only ever be called on a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s own <see cref="F:osu.Framework.Graphics.Containers.CompositeDrawable.internalChildren"/>.
            
             <para>Note that this does NOT check the load state of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> to check if it can hold any alive children.</para>
             </summary>
             <param name="child">The child to check.</param>
             <returns>Whether the child's alive state has changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.MakeChildAlive(osu.Framework.Graphics.Drawable)">
            <summary>
            Makes a child alive.
            </summary>
            <remarks>
            Callers have to ensure that <paramref name="child"/> is of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s non-alive <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/> and <see cref="T:osu.Framework.Graphics.LoadState"/> of the <paramref name="child"/> is at least <see cref="F:osu.Framework.Graphics.LoadState.Ready"/>.
            </remarks>
            <param name="child">The child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>> to make alive.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.MakeChildDead(osu.Framework.Graphics.Drawable)">
            <summary>
            Makes a child dead (not alive) and removes it if <see cref="P:osu.Framework.Graphics.Drawable.RemoveWhenNotAlive"/> of the <paramref name="child"/> is set.
            </summary>
            <remarks>
            Callers have to ensure that <paramref name="child"/> is of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </remarks>
            <param name="child">The child of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>> to make dead.</param>
            <returns>Whether <paramref name="child"/> has been removed by death.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.DisposeChildAsync(osu.Framework.Graphics.Drawable)">
            <summary>
            Unbinds a child's bindings synchronously and queues an asynchronous disposal of the child.
            </summary>
            <param name="drawable">The child to dispose.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.RequiresChildrenUpdate">
            <summary>
            Specifies whether this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> requires an update of its children.
            If the return value is false, then children are not updated and
            <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterChildren"/> is not called.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateSubTreeMasking">
            <summary>
            Updates all masking calculations for this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> and its <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            This occurs post-<see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateSubTree"/> to ensure that all <see cref="T:osu.Framework.Graphics.Drawable"/> updates have taken place.
            </summary>
            <returns>Whether masking calculations have taken place.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ComputeChildMaskingBounds">
            <summary>
            Computes the <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> to be used as the masking bounds for all <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
            <returns>The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> to be used as the masking bounds for <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.ChildMaskingBounds">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> to be used as the masking bounds for all <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterChildrenLife">
            <summary>
            Invoked after <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateChildrenLife"/> and <see cref="P:osu.Framework.Graphics.Drawable.IsPresent"/> state checks have taken place,
            but before <see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/> is invoked for all <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            This occurs after <see cref="M:osu.Framework.Graphics.Drawable.Update"/> has been invoked on this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterChildren">
            <summary>
            An opportunity to update state once-per-frame after <see cref="M:osu.Framework.Graphics.Drawable.Update"/> has been called
            for all <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            This is invoked prior to any autosize calculations of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.UpdateAfterAutoSize">
            <summary>
            Invoked after all autosize calculations have taken place.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.InvalidateChildrenSizeDependencies(osu.Framework.Graphics.Invalidation,osu.Framework.Graphics.Axes,osu.Framework.Graphics.Drawable)">
            <summary>
            Invalidates the children size dependencies of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> when a child's position or size changes.
            </summary>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> to invalidate with.</param>
            <param name="axes">The position or size <see cref="T:osu.Framework.Graphics.Axes"/> that changed.</param>
            <param name="source">The source <see cref="T:osu.Framework.Graphics.Drawable"/>.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.ForceLocalVertexBatch">
            <summary>
            Whether to use a local vertex batch for rendering. If false, a parenting vertex batch will be used.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.CanBeFlattened">
            <summary>
            A flattened <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> has its <see cref="T:osu.Framework.Graphics.DrawNode"/> merged into its parents'.
            In some cases, the <see cref="T:osu.Framework.Graphics.DrawNode"/> must always be generated and flattening should not occur.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.addFromComposite(System.UInt64,System.Int32,System.Boolean,System.Int32@,osu.Framework.Graphics.Containers.CompositeDrawable,System.Collections.Generic.List{osu.Framework.Graphics.DrawNode})">
            <summary>
            This function adds all children's <see cref="T:osu.Framework.Graphics.DrawNode"/>s to a target List, flattening the children of certain types
            of <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> subtrees for optimization purposes.
            </summary>
            <param name="frame">The frame which <see cref="T:osu.Framework.Graphics.DrawNode"/>s should be generated for.</param>
            <param name="treeIndex">The index of the currently in-use <see cref="T:osu.Framework.Graphics.DrawNode"/> tree.</param>
            <param name="forceNewDrawNode">Whether the creation of a new <see cref="T:osu.Framework.Graphics.DrawNode"/> should be forced, rather than re-using an existing <see cref="T:osu.Framework.Graphics.DrawNode"/>.</param>
            <param name="j">The running index into the target List.</param>
            <param name="parentComposite">The <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> whose children's <see cref="T:osu.Framework.Graphics.DrawNode"/>s to add.</param>
            <param name="target">The target list to fill with DrawNodes.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.RemoveCompletedTransforms">
            <summary>
            Whether to remove completed transforms from the list of applicable transforms. Setting this to false allows for rewinding transforms.
            <para>
            This value is passed down to children.
            </para>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.FadeEdgeEffectTo(System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Helper function for creating and adding a <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> that fades the current <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.EdgeEffect"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.FadeEdgeEffectTo(osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Helper function for creating and adding a <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> that fades the current <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.EdgeEffect"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.TweenEdgeEffectTo(osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Helper function for creating and adding a <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> that tweens the current <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.EdgeEffect"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ShouldBeConsideredForInput(osu.Framework.Graphics.Drawable)">
            <summary>
            Check whether a child should be considered for inclusion in <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.BuildNonPositionalInputQueue(System.Collections.Generic.List{osu.Framework.Graphics.Drawable},System.Boolean)"/> and <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.BuildPositionalInputQueue(osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Graphics.Drawable})"/>
            </summary>
            <param name="child">The drawable to be evaluated.</param>
            <returns>Whether or not the specified drawable should be considered when building input queues.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.ReceivePositionalInputAtSubTree(osuTK.Vector2)">
            <summary>
            Determines whether the subtree of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> should receive positional input when the mouse is at the given screen-space position.
            </summary>
            <remarks>
            By default, the subtree of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> always receives input when masking is turned off, and only receives input if this
            <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> also receives input when masking is turned on.
            </remarks>
            <param name="screenSpacePos">The screen-space position where input could be received.</param>
            <returns>True if the subtree should receive input at the given screen-space position.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking">
            <summary>
            If enabled, only the portion of children that falls within this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s
            shape is drawn to the screen.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.MaskingSmoothness">
            <summary>
            Determines over how many pixels the alpha component smoothly fades out.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.CornerRadius">
            <summary>
            Determines how large of a radius is masked away around the corners.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.CornerExponent">
            <summary>
            Determines how gentle the curve of the corner straightens. A value of 2 (default) results in
            circular arcs, a value of 2.5 results in something closer to apple's "continuous corner".
            Values between 2 and 10 result in varying degrees of "continuousness", where larger values are smoother.
            Values between 1 and 2 result in a "flatter" appearance than round corners.
            Values between 0 and 1 result in a concave, round corner as opposed to a convex round corner,
            where a value of 0.5 is a circular concave arc.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true and <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.CornerRadius"/> is non-zero.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.BorderThickness">
            <summary>
            Determines how thick of a border to draw around the inside of the masked region.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true.
            The border only is drawn on top of children using a sprite shader.
            </summary>
            <remarks>
            Drawing borders is optimized heavily into our sprite shaders. As a consequence
            borders are only drawn correctly on top of quad-shaped children using our sprite
            shaders.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.BorderColour">
            <summary>
            Determines the color of the border controlled by <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.BorderThickness"/>.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.EdgeEffect">
            <summary>
            Determines an edge effect of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            Edge effects are e.g. glow or a shadow.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.Padding">
            <summary>
            Shrinks the space children may occupy within this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>
            by the specified amount on each side.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.ChildSize">
            <summary>
            The size of the coordinate space revealed to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Captures the effect of e.g. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Padding"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.ChildOffset">
            <summary>
            Positional offset applied to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Captures the effect of e.g. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Padding"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeChildSize">
            <summary>
            The size of the relative position/size coordinate space of children of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            Children positioned at this size will appear as if they were positioned at <see cref="P:osu.Framework.Graphics.Drawable.Position"/> = <see cref="F:osuTK.Vector2.One"/> in this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeChildOffset">
            <summary>
            The offset of the relative position/size coordinate space of children of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            Children positioned at this offset will appear as if they were positioned at <see cref="P:osu.Framework.Graphics.Drawable.Position"/> = <see cref="F:osuTK.Vector2.Zero"/> in this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeToAbsoluteFactor">
            <summary>
            Conversion factor from relative to absolute coordinates in our space.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.TransformRelativeChildSizeTo(osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Tweens the <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeChildSize"/> of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
            <param name="newSize">The coordinate space to tween to.</param>
            <param name="duration">The tween duration.</param>
            <param name="easing">The tween easing.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CompositeDrawable.TransformRelativeChildOffsetTo(osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Tweens the <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeChildOffset"/> of this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
            <param name="newOffset">The coordinate space to tween to.</param>
            <param name="duration">The tween duration.</param>
            <param name="easing">The tween easing.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Children's <see cref="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes"/> are ignored for automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeSizeAxes"/> of children
            do not affect automatic sizing to avoid circular size dependencies.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Size"/> (or <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Width"/> / <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.AutoSizeDuration">
            <summary>
            The duration which automatic sizing should take. If zero, then it is instantaneous.
            Otherwise, this is equivalent to applying an automatic size via a resize transform.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.AutoSizeEasing">
            <summary>
            The type of easing which should be used for smooth automatic sizing when <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AutoSizeDuration"/>
            is non-zero.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.CompositeDrawable.OnAutoSize">
            <summary>
            Fired after this <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.Size"/> is updated through autosize.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.ChildrenSizeDependenciesIsValid">
            <summary>
            Whether the <see cref="F:osu.Framework.Graphics.Containers.CompositeDrawable.childrenSizeDependencies"/> layout is valid.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.baseSize">
            <summary>
            A helper property for <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.autoSizeResizeTo(osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)"/> to change the size of <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>s with <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AutoSizeAxes"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode">
            <summary>
            A draw node responsible for rendering a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> and the <see cref="T:osu.Framework.Graphics.DrawNode"/>s of its children.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.Shader">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> to use for rendering.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.Children">
            <summary>
            The <see cref="T:osu.Framework.Graphics.DrawNode"/>s of the children of our <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.maskingInfo">
            <summary>
            Information about how masking of children should be carried out.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.screenSpaceMaskingQuad">
            <summary>
            The screen-space version of <see cref="F:osu.Framework.Graphics.Rendering.MaskingInfo.MaskingRect"/>.
            Used as cache of screen-space masking quads computed in previous frames.
            Assign null to reset.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.edgeEffect">
            <summary>
            Information about how the edge effect should be rendered.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.forceLocalVertexBatch">
            <summary>
            Whether to use a local vertex batch for rendering. If false, a parenting vertex batch will be used.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.CompositeDrawable.CompositeDrawableDrawNode.quadBatch">
            <summary>
            The vertex batch used for child quads during the back-to-front pass.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Container">
            <summary>
            A drawable which can have children added to it. Transformations applied to
            a container are also applied to its children.
            Additionally, containers support various effects, such as masking, edge effect,
            padding, and automatic sizing depending on their children.
            If all children are of a specific non-<see cref="T:osu.Framework.Graphics.Drawable"/> type, use the
            generic version <see cref="T:osu.Framework.Graphics.Containers.Container`1"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Container`1">
            <summary>
            A drawable which can have children added to it. Transformations applied to
            a container are also applied to its children.
            Additionally, containers support various effects, such as masking, edge effect,
            padding, and automatic sizing depending on their children.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.Container`1.enumeratorVersion">
            <summary>
            This is checked when enumerating through this <see cref="T:osu.Framework.Graphics.Containers.Container"/> to throw when
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> was mutated while enumerating (in <see cref="T:osu.Framework.Graphics.Containers.Container`1.Enumerator"/>).
            This is incremented whenever <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> is mutated (e.g. with <see cref="M:osu.Framework.Graphics.Containers.Container`1.Add(`0)"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.#ctor">
            <summary>
            Constructs a <see cref="T:osu.Framework.Graphics.Containers.Container"/> that stores children.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Content">
            <summary>
            The content of this container. <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> and all methods that mutate
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> (e.g. <see cref="M:osu.Framework.Graphics.Containers.Container`1.Add(`0)"/> and <see cref="M:osu.Framework.Graphics.Containers.Container`1.Remove(`0,System.Boolean)"/>) are
            forwarded to the content. By default a container's content is itself, in which case
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> refers to <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            This property is useful for containers that require internal children that should
            not be exposed to the outside world, e.g. <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Children">
            <summary>
            The publicly accessible list of children. Forwards to the children of <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/>.
            If <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/> is this container, then returns <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Assigning to this property will dispose all existing children of this Container.
            <remarks>
            If a foreach loop is used, iterate over the <see cref="T:osu.Framework.Graphics.Containers.Container"/> directly rather than its <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>.
            </remarks>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.AliveChildren">
            <summary>
            The publicly accessible list of alive children. Forwards to the alive children of <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/>.
            If <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/> is this container, then returns <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Item(System.Int32)">
            <summary>
            Accesses the <paramref name="index"/>-th child.
            </summary>
            <param name="index">The index of the child to access.</param>
            <returns>The <paramref name="index"/>-th child.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Count">
            <summary>
            The amount of elements in <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.IsReadOnly">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Containers.Container`1"/> can have elements added and removed. Always false.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:osu.Framework.Graphics.Containers.Container`1"/> to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The Array into which all children should be copied.</param>
            <param name="arrayIndex">The starting index in the Array.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.ChildrenEnumerable">
            <summary>
            Sets all children of this container to the elements contained in the enumerable.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Child">
            <summary>
            Gets or sets the only child of this container.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.IndexOf(`0)">
            <summary>
            The index of a given child within <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>.
            </summary>
            <returns>
            If the child is found, its index. Otherwise, the negated index it would obtain
            if it were added to <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>.
            </returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.Contains(`0)">
            <summary>
            Checks whether a given child is contained within <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.Add(`0)">
            <summary>
            Adds a child to this container. This amounts to adding a child to <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/>'s
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/>, recursing until <see cref="P:osu.Framework.Graphics.Containers.Container`1.Content"/> == this.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of children. This is equivalent to calling <see cref="M:osu.Framework.Graphics.Containers.Container`1.Add(`0)"/> on
            each element of the range in order.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.Remove(`0,System.Boolean)">
            <summary>
            Removes a given child from this container.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.RemoveAll(System.Predicate{`0},System.Boolean)">
            <summary>
            Removes all children which match the given predicate.
            This is equivalent to calling <see cref="M:osu.Framework.Graphics.Containers.Container`1.Remove(`0,System.Boolean)"/> for each child that
            matches the given predicate.
            </summary>
            <returns>The amount of removed children.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Removes a range of children. This is equivalent to calling <see cref="M:osu.Framework.Graphics.Containers.Container`1.Remove(`0,System.Boolean)"/> on
            each element of the range in order.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.Clear">
            <summary>
            Removes all children.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.Clear(System.Boolean)">
            <summary>
            Removes all children.
            </summary>
            <param name="disposeChildren">
            Whether removed children should also get disposed.
            Disposal will be recursive.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Container`1.ChangeChildDepth(`0,System.Single)">
            <summary>
            Changes the depth of a child. This affects ordering of children within this container.
            </summary>
            <param name="child">The child whose depth is to be changed.</param>
            <param name="newDepth">The new depth value to be set.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Masking">
            <summary>
            If enabled, only the portion of children that falls within this <see cref="T:osu.Framework.Graphics.Containers.Container"/>'s
            shape is drawn to the screen.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.MaskingSmoothness">
            <summary>
            Determines over how many pixels the alpha component smoothly fades out when an inner <see cref="P:osu.Framework.Graphics.Containers.Container`1.EdgeEffect"/> or <see cref="P:osu.Framework.Graphics.Containers.Container`1.BorderThickness"/> is present.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.CornerRadius">
            <summary>
            Determines how large of a radius is masked away around the corners.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.CornerExponent">
            <summary>
            Determines how gentle the curve of the corner straightens. A value of 2 results in
            circular arcs, a value of 2.5 (default) results in something closer to apple's "continuous corner".
            Values between 2 and 10 result in varying degrees of "continuousness", where larger values are smoother.
            Values between 1 and 2 result in a "flatter" appearance than round corners.
            Values between 0 and 1 result in a concave, round corner as opposed to a convex round corner,
            where a value of 0.5 is a circular concave arc.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true and <see cref="P:osu.Framework.Graphics.Containers.Container`1.CornerRadius"/> is non-zero.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.BorderThickness">
            <summary>
            Determines how thick of a border to draw around the inside of the masked region.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true.
            The border only is drawn on top of children using a sprite shader.
            </summary>
            <remarks>
            Drawing borders is optimized heavily into our sprite shaders. As a consequence
            borders are only drawn correctly on top of quad-shaped children using our sprite
            shaders.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.BorderColour">
            <summary>
            Determines the color of the border controlled by <see cref="P:osu.Framework.Graphics.Containers.Container`1.BorderThickness"/>.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.EdgeEffect">
            <summary>
            Determines an edge effect of this <see cref="T:osu.Framework.Graphics.Containers.Container"/>.
            Edge effects are e.g. glow or a shadow.
            Only has an effect when <see cref="P:osu.Framework.Graphics.Containers.Container`1.Masking"/> is true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.Padding">
            <summary>
            Shrinks the space children may occupy within this <see cref="T:osu.Framework.Graphics.Containers.Container"/>
            by the specified amount on each side.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.ForceLocalVertexBatch">
            <summary>
            Whether to use a local vertex batch for rendering. If false, a parenting vertex batch will be used.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.RelativeChildSize">
            <summary>
            The size of the relative position/size coordinate space of children of this <see cref="T:osu.Framework.Graphics.Containers.Container"/>.
            Children positioned at this size will appear as if they were positioned at <see cref="P:osu.Framework.Graphics.Drawable.Position"/> = <see cref="F:osuTK.Vector2.One"/> in this <see cref="T:osu.Framework.Graphics.Containers.Container"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.RelativeChildOffset">
            <summary>
            The offset of the relative position/size coordinate space of children of this <see cref="T:osu.Framework.Graphics.Containers.Container"/>.
            Children positioned at this offset will appear as if they were positioned at <see cref="P:osu.Framework.Graphics.Drawable.Position"/> = <see cref="F:osuTK.Vector2.Zero"/> in this <see cref="T:osu.Framework.Graphics.Containers.Container"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Children's <see cref="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes"/> are ignored for automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> of children
            do not affect automatic sizing to avoid circular size dependencies.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Drawable.Size"/> (or <see cref="P:osu.Framework.Graphics.Drawable.Width"/> / <see cref="P:osu.Framework.Graphics.Drawable.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.AutoSizeDuration">
            <summary>
            The duration which automatic sizing should take. If zero, then it is instantaneous.
            Otherwise, this is equivalent to applying an automatic size via a resize transform.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Container`1.AutoSizeEasing">
            <summary>
            The type of easing which should be used for smooth automatic sizing when <see cref="P:osu.Framework.Graphics.Containers.Container`1.AutoSizeDuration"/>
            is non-zero.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.ContainerExtensions">
            <summary>
            Holds extension methods for <see cref="T:osu.Framework.Graphics.Containers.Container`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ContainerExtensions.Wrap``2(``0,``1)">
            <summary>
            Wraps the given <paramref name="drawable"/> with the given <paramref name="container"/>
            such that the <paramref name="container"/> can be used instead of the <paramref name="drawable"/>
            without affecting the layout. The <paramref name="container"/> must not contain any children before wrapping.
            </summary>
            <typeparam name="TContainer">The type of the <paramref name="container"/>.</typeparam>
            <typeparam name="TChild">The type of the children of <paramref name="container"/>.</typeparam>
            <param name="container">The <paramref name="container"/> that should wrap the given <paramref name="drawable"/>.</param>
            <param name="drawable">The <paramref name="drawable"/> that should be wrapped by the given <paramref name="container"/>.</param>
            <returns>The given <paramref name="container"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ContainerExtensions.WithChild``2(``0,``1)">
            <summary>
            Set a specified <paramref name="child"/> on <paramref name="container"/>.
            </summary>
            <typeparam name="TContainer">The container type.</typeparam>
            <typeparam name="TChild">The type of children contained by <paramref name="container"/>.</typeparam>
            <param name="container">The <paramref name="container"/> that will have a child set.</param>
            <param name="child">The <paramref name="child"/> that should be set to the <paramref name="container"/>.</param>
            <returns>The given <paramref name="container"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ContainerExtensions.WithChildren``2(``0,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Set specified <paramref name="children"/> on <paramref name="container"/>.
            </summary>
            <typeparam name="TContainer">The container type.</typeparam>
            <typeparam name="TChild">The type of children contained by <paramref name="container"/>.</typeparam>
            <param name="container">The <paramref name="container"/> that will have children set.</param>
            <param name="children">The <paramref name="children"/> that should be set to the <paramref name="container"/>.</param>
            <returns>The given <paramref name="container"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CustomizableTextChunk`1">
            <summary>
            Implementation of <see cref="T:osu.Framework.Graphics.Containers.TextChunk`1"/> that support substitution of text placeholders for arbitrary placeholders
            as provided by <see cref="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.TryGetIconFactory(System.String,System.Delegate@)"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.CustomizableTextContainer">
            <summary>
            A <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/> that supports adding icons into its text. Inherit from this class to define reusable custom placeholders for icons.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.CustomizableTextContainer.Placeholders">
            <summary>
            Sets the placeholders that should be used to replace the numeric placeholders, in the order given.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.AddPlaceholder(osu.Framework.Graphics.Drawable)">
            <summary>
            Adds the given drawable as a placeholder that can be used when adding text. The drawable must not have a parent. Returns the index that can be used to reference the added placeholder.
            </summary>
            <param name="drawable">The drawable to use as a placeholder. This drawable must not have a parent.</param>
            <returns>The index that can be used to reference the added placeholder.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.AddIconFactory(System.String,System.Delegate)">
            <summary>
            Adds the given factory method as a placeholder. It will be used to create a drawable each time [<paramref name="name"/>] is encountered in the text. The <paramref name="factory"/> method must return a <see cref="T:osu.Framework.Graphics.Drawable"/> and may contain an arbitrary number of integer parameters. If there are, fe, 2 integer parameters on the factory method, the placeholder in the text would need to look like [<paramref name="name"/>(42, 1337)] supplying the values 42 and 1337 to the method as arguments.
            </summary>
            <param name="name">The name of the placeholder that the factory should create drawables for.</param>
            <param name="factory">The factory method creating drawables.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.AddIconFactory(System.String,System.Func{osu.Framework.Graphics.Drawable})">
            <summary>
            Adds the given factory method as a placeholder. It will be used to create a drawable each time [<paramref name="name"/>] is encountered in the text. The <paramref name="factory"/> method must return a <see cref="T:osu.Framework.Graphics.Drawable"/> and may contain an arbitrary number of integer parameters. If there are, fe, 2 integer parameters on the factory method, the placeholder in the text would need to look like [<paramref name="name"/>(42, 1337)] supplying the values 42 and 1337 to the method as arguments.
            </summary>
            <param name="name">The name of the placeholder that the factory should create drawables for.</param>
            <param name="factory">The factory method creating drawables.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.AddIconFactory(System.String,System.Func{System.Int32,osu.Framework.Graphics.Drawable})">
            <summary>
            Adds the given factory method as a placeholder. It will be used to create a drawable each time [<paramref name="name"/>] is encountered in the text. The <paramref name="factory"/> method must return a <see cref="T:osu.Framework.Graphics.Drawable"/> and may contain an arbitrary number of integer parameters. If there are, fe, 2 integer parameters on the factory method, the placeholder in the text would need to look like [<paramref name="name"/>(42, 1337)] supplying the values 42 and 1337 to the method as arguments.
            </summary>
            <param name="name">The name of the placeholder that the factory should create drawables for.</param>
            <param name="factory">The factory method creating drawables.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.AddIconFactory(System.String,System.Func{System.Int32,System.Int32,osu.Framework.Graphics.Drawable})">
            <summary>
            Adds the given factory method as a placeholder. It will be used to create a drawable each time [<paramref name="name"/>] is encountered in the text. The <paramref name="factory"/> method must return a <see cref="T:osu.Framework.Graphics.Drawable"/> and may contain an arbitrary number of integer parameters. If there are, fe, 2 integer parameters on the factory method, the placeholder in the text would need to look like [<paramref name="name"/>(42, 1337)] supplying the values 42 and 1337 to the method as arguments.
            </summary>
            <param name="name">The name of the placeholder that the factory should create drawables for.</param>
            <param name="factory">The factory method creating drawables.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.CustomizableTextContainer.TryGetIconFactory(System.String,System.Delegate@)">
            <summary>
            Attempts to retrieve an icon factory matching the placeholder with the given <paramref name="name"/>.
            </summary>
            <param name="name">The name of the placeholder.</param>
            <param name="iconFactory">The icon factory matching <paramref name="name"/>, if the method returned <see langword="true"/>.</param>
            <returns>Whether an icon factory was found for the given <paramref name="name"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper">
            <summary>
            A container which asynchronously loads specified content.
            Has the ability to delay the loading until it has been visible on-screen for a specified duration.
            In order to benefit from delayed load, we must be inside a <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.DelayedLoadWrapper.#ctor(osu.Framework.Graphics.Drawable,System.Double)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Containers.Container"/> that will asynchronously load the given <see cref="T:osu.Framework.Graphics.Drawable"/> with a delay.
            </summary>
            <remarks>If <see cref="F:osu.Framework.Graphics.Containers.DelayedLoadWrapper.timeBeforeLoad"/> is set to 0, the loading process will begin on the next Update call.</remarks>
            <param name="content">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be loaded.</param>
            <param name="timeBeforeLoad">The delay in milliseconds before loading can begin.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.DelayedLoadWrapper.#ctor(System.Func{osu.Framework.Graphics.Drawable},System.Double)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Containers.Container"/> that will asynchronously load the given <see cref="T:osu.Framework.Graphics.Drawable"/> with a delay.
            This constructor is preferred due to avoiding construction of the loadable content until a load is actually triggered.
            </summary>
            <remarks>If <see cref="F:osu.Framework.Graphics.Containers.DelayedLoadWrapper.timeBeforeLoad"/> is set to 0, the loading process will begin on the next Update call.</remarks>
            <param name="createFunc">A function which created future content.</param>
            <param name="timeBeforeLoad">The delay in milliseconds before loading can begin.</param>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DelayedLoadWrapper.timeBeforeLoad">
            <summary>
            The amount of time on-screen in milliseconds before we begin a load of children.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.DelayedLoadWrapper.DelayedLoadStarted">
            <summary>
            Fired when delayed async load has started.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.DelayedLoadWrapper.DelayedLoadComplete">
            <summary>
            Fired when delayed async load completes. Should be used to perform transitions.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DelayedLoadWrapper.DelayedLoadTriggered">
            <summary>
            True if the load task for our content has been started.
            Will remain true even after load is completed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.DelayedLoadWrapper.DelayedLoadCompleted">
            <summary>
            True if the content has been added to the drawable hierarchy.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper.IOnScreenOptimisingContainer">
            <summary>
            A container which acts as a masking parent for on-screen delayed load optimisations.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer">
            <summary>
            A <see cref="T:osu.Framework.Graphics.Containers.Container"/> filling its parent while preserving a given target
            <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> according to a <see cref="T:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy"/>.
            This is useful, for example, to automatically scale the user interface according to
            the window resolution, or to provide automatic HiDPI display support.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize">
            <summary>
            The target <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> to be enforced according to <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.Strategy"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.Strategy">
            <summary>
            The strategy to be used for enforcing <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/>. The default strategy
            is Minimum, which preserves the aspect ratio of all children while ensuring one of the
            two axes matches <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/> while the other is always larger.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy">
            <summary>
            Strategies used by <see cref="T:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer"/> to enforce its
            <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy.Minimum">
            <summary>
            Preserves the aspect ratio of all children while ensuring one of the
            two axes matches <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/>
            while the other is always larger.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy.Maximum">
            <summary>
            Preserves the aspect ratio of all children while ensuring one of the
            two axes matches <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/>
            while the other is always smaller.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy.Average">
            <summary>
            Preserves the aspect ratio of all children while one axis is always larger and
            the other always smaller than <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/>,
            achieving a good compromise.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.DrawSizePreservationStrategy.Separate">
            <summary>
            Ensures <see cref="F:osu.Framework.Graphics.Containers.DrawSizePreservingFillContainer.TargetDrawSize"/> is perfectly
            matched while aspect ratio of children is disregarded.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.FillFlowContainer">
            <summary>
            A <see cref="T:osu.Framework.Graphics.Containers.FlowContainer`1"/> that fills space by arranging its children
            next to each other.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> can be arranged horizontally, vertically, and in a
            combined fashion, which is controlled by <see cref="T:osu.Framework.Graphics.Direction"/>.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from left-to-right if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the left or centered horizontally.
            They are arranged from right-to-left otherwise.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from top-to-bottom if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the top or centered vertically.
            They are arranged from bottom-to-top otherwise.
            If non-<see cref="T:osu.Framework.Graphics.Drawable"/> <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are desired, use
            <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.FillFlowContainer`1">
            <summary>
            A <see cref="T:osu.Framework.Graphics.Containers.FlowContainer`1"/> that fills space by arranging its children
            next to each other.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> can be arranged horizontally, vertically, and in a
            combined fashion, which is controlled by <see cref="P:osu.Framework.Graphics.Containers.FillFlowContainer`1.Direction"/>.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from left-to-right if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the left or centered horizontally.
            They are arranged from right-to-left otherwise.
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from top-to-bottom if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the top or centered vertically.
            They are arranged from bottom-to-top otherwise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FillFlowContainer`1.Direction">
            <summary>
            If <see cref="F:osu.Framework.Graphics.Containers.FillDirection.Full"/> or <see cref="F:osu.Framework.Graphics.Containers.FillDirection.Horizontal"/>,
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from left-to-right if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the left or centered horizontally.
            They are arranged from right-to-left otherwise.
            If <see cref="F:osu.Framework.Graphics.Containers.FillDirection.Full"/> or <see cref="F:osu.Framework.Graphics.Containers.FillDirection.Vertical"/>,
            <see cref="P:osu.Framework.Graphics.Containers.Container`1.Children"/> are arranged from top-to-bottom if their
            <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> is to the top or centered vertically.
            They are arranged from bottom-to-top otherwise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FillFlowContainer`1.Spacing">
            <summary>
            The spacing between individual elements. Default is <see cref="F:osuTK.Vector2.Zero"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.FillFlowContainer`1.ForceNewRow(osu.Framework.Graphics.Drawable)">
            <summary>
            Returns true if the given child should be placed on a new row, false otherwise. This will be called automatically for each child in this FillFlowContainers FlowingChildren-List.
            </summary>
            <param name="child">The child to check.</param>
            <returns>True if the given child should be placed on a new row, false otherwise.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.FillDirection">
            <summary>
            Represents the direction children of a <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/> should be filled in.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.FillDirection.Full">
            <summary>
            Fill horizontally first, then fill vertically via multiple rows.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.FillDirection.Horizontal">
            <summary>
            Fill only horizontally.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.FillDirection.Vertical">
            <summary>
            Fill only vertically.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.FlowContainer`1">
            <summary>
            A container that can be used to fluently arrange its children.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FlowContainer`1.LayoutEasing">
            <summary>
            The easing that should be used when children are moved to their position in the layout.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FlowContainer`1.LayoutDuration">
            <summary>
            The time it should take to move a child from its current position to its new layout position.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FlowContainer`1.MaximumSize">
            <summary>
            Optional maximum dimensions for this container. Note that the meaning of this value can change
            depending on the implementation.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.FlowContainer`1.InvalidateLayout">
            <summary>
            Invoked when layout should be invalidated.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.FlowContainer`1.SetLayoutPosition(osu.Framework.Graphics.Drawable,System.Single)">
            <summary>
            Changes the position of the drawable in the layout. A higher position value means the drawable will be processed later (that is, the drawables with the lowest position appear first, and the drawable with the highest position appear last).
            For example, the drawable with the lowest position value will be the left-most drawable in a horizontal <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/> and the drawable with the highest position value will be the right-most drawable in a horizontal <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/>.
            </summary>
            <param name="drawable">The drawable whose position should be changed, must be a child of this container.</param>
            <param name="newPosition">The new position in the layout the drawable should have.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.FlowContainer`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a new drawable at the specified layout position.
            </summary>
            <param name="position">The layout position of the new child.</param>
            <param name="drawable">The drawable to be inserted.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.FlowContainer`1.GetLayoutPosition(osu.Framework.Graphics.Drawable)">
            <summary>
            Gets the position of the drawable in the layout. A higher position value means the drawable will be processed later (that is, the drawables with the lowest position appear first, and the drawable with the highest position appear last).
            For example, the drawable with the lowest position value will be the left-most drawable in a horizontal <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/> and the drawable with the highest position value will be the right-most drawable in a horizontal <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/>.
            </summary>
            <param name="drawable">The drawable whose position should be retrieved, must be a child of this container.</param>
            <returns>The position of the drawable in the layout.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.FlowContainer`1.FlowingChildren">
            <summary>
            Gets the children that appear in the flow of this <see cref="T:osu.Framework.Graphics.Containers.FlowContainer`1"/> in the order in which they are processed within the flowing layout.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.FocusedOverlayContainer">
            <summary>
            An overlay container that eagerly holds keyboard focus.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.GridContainer">
            <summary>
            A container which allows laying out <see cref="T:osu.Framework.Graphics.Drawable"/>s in a grid.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.GridContainer.Padding">
            <summary>
            Shrinks the space children may occupy within this <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>
            by the specified amount on each side.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.GridContainer.Content">
            <summary>
            The content of this <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>, arranged in a 2D grid array, where each array
            of <see cref="T:osu.Framework.Graphics.Drawable"/>s represents a row and each element of that array represents a column.
            <para>
            Null elements are allowed to represent blank rows/cells.
            </para>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.GridContainer.RowDimensions">
            <summary>
            Explicit dimensions for rows. Each index of this array applies to the respective row index inside <see cref="P:osu.Framework.Graphics.Containers.GridContainer.Content"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.GridContainer.ColumnDimensions">
            <summary>
            Explicit dimensions for columns. Each index of this array applies to the respective column index inside <see cref="P:osu.Framework.Graphics.Containers.GridContainer.Content"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.GridContainer.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Children's <see cref="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes"/> are ignored for automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> of children
            do not affect automatic sizing to avoid circular size dependencies.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Drawable.Size"/> (or <see cref="P:osu.Framework.Graphics.Drawable.Width"/> / <see cref="P:osu.Framework.Graphics.Drawable.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.GridContainer.layoutContent">
            <summary>
            Moves content from <see cref="P:osu.Framework.Graphics.Containers.GridContainer.Content"/> into cells.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.GridContainer.layoutCells">
            <summary>
            Repositions/resizes cells.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.GridContainer.getCellSizesAlongAxis(osu.Framework.Graphics.Axes,System.Single)">
            <summary>
            Retrieves the size of all cells along the span of an axis.
            For the X-axis, this retrieves the size of all columns.
            For the Y-axis, this retrieves the size of all rows.
            </summary>
            <param name="axis">The axis span.</param>
            <param name="spanLength">The absolute length of the span.</param>
            <returns>The size of all cells along the span of <paramref name="axis"/>.</returns>
            <exception cref="T:System.InvalidOperationException">If the <see cref="T:osu.Framework.Graphics.Containers.Dimension"/> for a cell is unsupported.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.GridContainer.distribute(osu.Framework.Graphics.Containers.Dimension[],System.Single,System.Single[])">
            <summary>
            Distributes any available length along all distributed dimensions, if required.
            </summary>
            <param name="dimensions">The full dimensions of the row or column.</param>
            <param name="spanLength">The total available length.</param>
            <param name="cellSizes">An array containing pre-filled sizes of any non-distributed cells. This array will be mutated.</param>
            <returns><paramref name="cellSizes"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.GridContainer.CellContainer">
            <summary>
            Represents one cell of the <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Dimension">
            <summary>
            Defines the size of a row or column in a <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.Dimension.Mode">
            <summary>
            The mode in which this row or column <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/> is sized.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.Dimension.Size">
            <summary>
            The size of the row or column which this <see cref="T:osu.Framework.Graphics.Containers.Dimension"/> applies to.
            Only has an effect if <see cref="F:osu.Framework.Graphics.Containers.Dimension.Mode"/> is not <see cref="F:osu.Framework.Graphics.Containers.GridSizeMode.Distributed"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.Dimension.MinSize">
            <summary>
            The minimum size of the row or column which this <see cref="T:osu.Framework.Graphics.Containers.Dimension"/> applies to.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.Dimension.MaxSize">
            <summary>
            The maximum size of the row or column which this <see cref="T:osu.Framework.Graphics.Containers.Dimension"/> applies to.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Dimension.#ctor(osu.Framework.Graphics.Containers.GridSizeMode,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Containers.Dimension"/>.
            </summary>
            <param name="mode">The sizing mode to use.</param>
            <param name="size">The size of this row or column. This only has an effect if <paramref name="mode"/> is not <see cref="F:osu.Framework.Graphics.Containers.GridSizeMode.Distributed"/>.</param>
            <param name="minSize">The minimum size of this row or column.</param>
            <param name="maxSize">The maximum size of this row or column.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Dimension.Range">
            <summary>
            The range of the size of this <see cref="T:osu.Framework.Graphics.Containers.Dimension"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.GridSizeMode.Distributed">
            <summary>
            Any remaining area of the <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/> will be divided amongst this and all
            other elements which use <see cref="F:osu.Framework.Graphics.Containers.GridSizeMode.Distributed"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.GridSizeMode.Relative">
            <summary>
            This element should be sized relative to the dimensions of the <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.GridSizeMode.Absolute">
            <summary>
            This element has a size independent of the <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.GridSizeMode.AutoSize">
            <summary>
            This element will be sized to the maximum size along its span.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.GridContainerContent">
            <summary>
            A wrapper for the content of a <see cref="T:osu.Framework.Graphics.Containers.GridContainer"/> that provides notifications when elements are changed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.IConditionalFilterable">
            <summary>
            Am <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> that additionally allows specifying whether the item can be shown
            based on additional criteria.
            The item will be visible in a <see cref="T:osu.Framework.Graphics.Containers.SearchContainer"/>
            if and only if <see cref="P:osu.Framework.Graphics.Containers.IHasFilterTerms.FilterTerms"/> match
            and <see cref="P:osu.Framework.Graphics.Containers.IConditionalFilterable.CanBeShown"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.IContainerEnumerable`1.RemoveAll(System.Predicate{`0},System.Boolean)">
            <summary>
            Remove all matching children from this container.
            </summary>
            <param name="match">A predicate used to find matching items.</param>
            <param name="disposeImmediately">Whether removed items should be immediately disposed.</param>
            <remarks>
            <paramref name="disposeImmediately"/> should be <c>true</c> unless the removed items are to be re-used in the future.
            If <c>false</c>, ensure removed items are manually disposed else object leakage may occur.
            </remarks>
            <returns>The number of matching items removed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.IContainerCollection`1.Remove(`0,System.Boolean)">
            <summary>
            Remove the provided drawable from this container's children.
            </summary>
            <param name="drawable">The drawable to be removed.</param>
            <param name="disposeImmediately">Whether removed item should be immediately disposed.</param>
            <remarks>
            <paramref name="disposeImmediately"/> should be <c>true</c> unless the removed item is to be re-used in the future.
            If <c>false</c>, ensure the removed item is manually disposed (or added back to another part of the hierarchy) else
            object leakage may occur.
            </remarks>
            <returns>Whether the drawable was removed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.IContainerCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Remove all matching children from this container.
            </summary>
            <param name="range">The drawables to be removed.</param>
            <param name="disposeImmediately">Whether removed items should be immediately disposed.</param>
            <remarks>
            <paramref name="disposeImmediately"/> should be <c>true</c> unless the removed items are to be re-used in the future.
            If <c>false</c>, ensure removed items are manually disposed else object leakage may occur.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.IFilterable">
            <summary>
            Implementing this interface in a <see cref="T:osu.Framework.Graphics.Drawable"/> allows it to be filtered basing on provided search terms
            when placed inside a <see cref="T:osu.Framework.Graphics.Containers.SearchContainer`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.IFilterable.MatchingFilter">
            <summary>
            Whether the current object is matching (ie. visible) given the current filter criteria of a parent.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.IFilterable.FilteringActive">
            <summary>
            Whether a filter is currently being performed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.IHasFilterableChildren.FilterableChildren">
            <summary>
            List of children that can be filtered
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.IHasFilterTerms">
            <summary>
            An interface to expose a number of keywords with the intent of helping a parent filter results.
            See <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> for an interface which adds a callback on matching keywords.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.IHasFilterTerms.FilterTerms">
            <summary>
            An enumerator of relevant terms which match the current object in a filtered scenario.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.ISafeArea">
            <summary>
            Containers that implement this interface act as a target for any child <see cref="T:osu.Framework.Graphics.Containers.SafeAreaContainer"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ISafeArea.AvailableNonSafeSpace">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> that defines the non-safe size which can be overriden into using <see cref="P:osu.Framework.Graphics.Containers.SafeAreaContainer.SafeAreaOverrideEdges"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ISafeArea.SafeAreaPadding">
            <summary>
            The padding which should be applied to confine a child to the safe area.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ISafeArea.ExpandRectangleToSpaceOfOtherDrawable(osu.Framework.Graphics.IDrawable)">
            <summary>
            Returns the full non-safe space rectangle in the coordinate space of the passed <see cref="T:osu.Framework.Graphics.IDrawable"/>.
            </summary>
            <param name="other">The target <see cref="T:osu.Framework.Graphics.IDrawable"/> for coordinate space translation.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.IScrollContainer.ScrollDirection">
            <summary>
            The direction in which scrolling is supported.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.ITextPart">
            <summary>
            Represents a part of text inside a <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/>.
            This implementation allows for the contents of a text part to be swapped out,
            in order to support things like text localisation, for instance.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ITextPart.Drawables">
            <summary>
            The drawables which currently correspond to this text part.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.ITextPart.DrawablePartsRecreated">
            <summary>
            Raised when <see cref="P:osu.Framework.Graphics.Containers.ITextPart.Drawables"/> is reconstructed (e.g. when the user language was changed).
            Can be used by consumers to re-apply manual adjustments to the appearance of <see cref="P:osu.Framework.Graphics.Containers.ITextPart.Drawables"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ITextPart.RecreateDrawablesFor(osu.Framework.Graphics.Containers.TextFlowContainer)">
            <summary>
            Recreates the drawables for this text part, in order for them to be appended to the <paramref name="textFlowContainer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.LifetimeManagementContainer">
            <summary>
            This container is optimized for when number of alive children is significantly smaller than number of all children.
            Specifically, the time complexity of <see cref="M:osu.Framework.Graphics.Drawable.Update"/> should be closer to
            O(number of alive children + 1) rather than O(number of all children + 1) for typical frames.
            </summary>
            <remarks>
            This container assumes child's <see cref="P:osu.Framework.Graphics.Drawable.Clock"/> is the same as ours and
            <see cref="P:osu.Framework.Graphics.Drawable.ShouldBeAlive"/> is not overrided.
            Also, <see cref="P:osu.Framework.Graphics.Drawable.RemoveWhenNotAlive"/> should be false.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.LifetimeManagementContainer.unmanagedDrawablesToProcess">
            <summary>
            List of drawables that do not have their lifetime managed by us, but still need to have their aliveness processed once.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.LifetimeManagementContainer.AddInternal(osu.Framework.Graphics.Drawable,System.Boolean)">
            <summary>
            Adds a <see cref="T:osu.Framework.Graphics.Drawable"/> to this <see cref="T:osu.Framework.Graphics.Containers.LifetimeManagementContainer"/>.
            </summary>
            <param name="drawable">The <see cref="T:osu.Framework.Graphics.Drawable"/> to add.</param>
            <param name="withManagedLifetime">Whether the lifetime of <paramref name="drawable"/> should be managed by this <see cref="T:osu.Framework.Graphics.Containers.LifetimeManagementContainer"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.LifetimeManagementContainer.OnChildLifetimeBoundaryCrossed(osu.Framework.Graphics.Containers.LifetimeBoundaryCrossedEvent)">
            <summary>
            Called when the clock is crossed child lifetime boundary.
            If child's lifetime is changed during this callback and that causes additional crossings,
            those events are queued and this method will be called later (on the same frame).
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.LifetimeBoundaryCrossedEvent">
            <summary>
            Represents that the clock is crossed <see cref="T:osu.Framework.Graphics.Containers.LifetimeManagementContainer"/>'s child lifetime boundary i.e. <see cref="P:osu.Framework.Graphics.Drawable.LifetimeStart"/> or <see cref="P:osu.Framework.Graphics.Drawable.LifetimeEnd"/>,
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.LifetimeBoundaryCrossedEvent.Child">
            <summary>
            The drawable.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.LifetimeBoundaryCrossedEvent.Kind">
            <summary>
            Which lifetime boundary is crossed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.LifetimeBoundaryCrossedEvent.Direction">
            <summary>
            The direction of the crossing.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.Footnotes.MarkdownFootnote">
            <summary>
            Visualises a single <see cref="T:Markdig.Extensions.Footnotes.Footnote"/> within a <see cref="T:Markdig.Extensions.Footnotes.FootnoteGroup"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.Footnotes.MarkdownFootnoteBacklink">
            <summary>
            Visualises a backlink from a <see cref="T:Markdig.Extensions.Footnotes.Footnote"/> to the <see cref="T:Markdig.Extensions.Footnotes.FootnoteLink"/> that referenced it.
            These backlinks are usually placed in <see cref="T:Markdig.Extensions.Footnotes.FootnoteGroup"/>s.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.Footnotes.MarkdownFootnoteGroup">
            <summary>
            Visualises a <see cref="T:Markdig.Extensions.Footnotes.FootnoteGroup"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.Footnotes.MarkdownFootnoteLink">
            <summary>
            Visualises an in-text <see cref="T:Markdig.Extensions.Footnotes.FootnoteLink"/> which references a <see cref="T:Markdig.Extensions.Footnotes.Footnote"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextComponent.CreateSpriteText">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> to display text within this <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent"/>.
            </summary>
            <remarks>
            The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> defined by the <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextComponent"/> resolved from dependencies is used by default,
            but may be overridden via this method to provide additional styling local to this <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent"/>.
            </remarks>
            <returns>The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent.CreateTextFlow">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTextFlowContainer"/> to display text within this <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent"/>.
            </summary>
            <remarks>
            The <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTextFlowContainer"/> defined by the <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent"/> resolved from dependencies is used by default,
            but may be overridden via this method to provide additional styling local to this <see cref="T:osu.Framework.Graphics.Containers.Markdown.IMarkdownTextFlowComponent"/>.
            </remarks>
            <returns>The <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTextFlowContainer"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownCodeBlock">
             <summary>
             Visualises an indented/fenced code block.
             </summary>
             <code>
             ```
             code1
             code2
             code3
             ```
             </code>
             <code>
            
                 code1
                 code2
                 code3
            
             </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer">
            <summary>
            Visualises a markdown text document.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Children's <see cref="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes"/> are ignored for automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> of children
            do not affect automatic sizing to avoid circular size dependencies.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Drawable.Size"/> (or <see cref="P:osu.Framework.Graphics.Drawable.Width"/> / <see cref="P:osu.Framework.Graphics.Drawable.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.Text">
            <summary>
            The text to visualise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.LineSpacing">
            <summary>
            The vertical spacing between lines.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.DocumentMargin">
            <summary>
            The margins of the contained document.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.DocumentPadding">
            <summary>
            The padding of the contained document.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.DocumentUrl">
            <summary>
            The URL of the loaded document.
            </summary>
            <exception cref="T:System.ArgumentException">If the provided URL was not a valid absolute URI.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.RootUrl">
            <summary>
            The base URL for all root-relative links.
            </summary>
            <exception cref="T:System.ArgumentException">If the provided URL was not a valid absolute URI.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.AddMarkdownComponent(Markdig.Syntax.IMarkdownObject,osu.Framework.Graphics.Containers.FillFlowContainer,System.Int32)">
            <summary>
            Adds a component that visualises a <see cref="T:Markdig.Syntax.IMarkdownObject"/> to the document.
            </summary>
            <param name="markdownObject">The <see cref="T:Markdig.Syntax.IMarkdownObject"/> to visualise.</param>
            <param name="container">The container to add the visualisation to.</param>
            <param name="level">The level in the document of <paramref name="markdownObject"/>.
            0 for the root level, 1 for first-level items in a list, 2 for second-level items in a list, etc.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateHeading(Markdig.Syntax.HeadingBlock)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Syntax.HeadingBlock"/>.
            </summary>
            <param name="headingBlock">The <see cref="T:Markdig.Syntax.HeadingBlock"/> to visualise.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateParagraph(Markdig.Syntax.ParagraphBlock,System.Int32)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Syntax.ParagraphBlock"/>.
            </summary>
            <param name="paragraphBlock">The <see cref="T:Markdig.Syntax.ParagraphBlock"/> to visualise.</param>
            <param name="level">The level in the document of <paramref name="paragraphBlock"/>.
            0 for the root level, 1 for first-level items in a list, 2 for second-level items in a list, etc.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateQuoteBlock(Markdig.Syntax.QuoteBlock)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Syntax.QuoteBlock"/>.
            </summary>
            <param name="quoteBlock">The <see cref="T:Markdig.Syntax.QuoteBlock"/> to visualise.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateCodeBlock(Markdig.Syntax.CodeBlock)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Syntax.CodeBlock"/>.
            </summary>
            <param name="codeBlock">The <see cref="T:Markdig.Syntax.CodeBlock"/> to visualise.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateTable(Markdig.Extensions.Tables.Table)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Extensions.Tables.Table"/>.
            </summary>
            <param name="table">The <see cref="T:Markdig.Extensions.Tables.Table"/> to visualise.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateList(Markdig.Syntax.ListBlock)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Syntax.ListBlock"/>.
            </summary>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateSeparator(Markdig.Syntax.ThematicBreakBlock)">
            <summary>
            Creates the visualiser for a horizontal separator.
            </summary>
            <returns>The visualiser.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateFootnoteGroup(Markdig.Extensions.Footnotes.FootnoteGroup)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Extensions.Footnotes.FootnoteGroup"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateFootnote(Markdig.Extensions.Footnotes.Footnote)">
            <summary>
            Creates the visualiser for a <see cref="T:Markdig.Extensions.Footnotes.Footnote"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownContainer.CreateNotImplemented(Markdig.Syntax.IMarkdownObject)">
            <summary>
            Creates the visualiser for an element that isn't implemented.
            </summary>
            <param name="markdownObject">The <see cref="T:Markdig.Syntax.MarkdownObject"/> that isn't implemented.</param>
            <returns>The visualiser.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownHeading">
            <summary>
            Visualises a heading.
            </summary>
            <code>
            # H1
            ## H2
            ### H3
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownImage">
            <summary>
            Visualises an image.
            </summary>
            <code>
            ![alt text](url)
            </code>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.CreateContent(System.String)">
            <summary>
            Creates the content of this <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownImage"/>, including the <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.ImageContainer"/>.
            </summary>
            <param name="url">The image url.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.CreateImageContainer(System.String)">
            <summary>
            Creates an <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.ImageContainer"/> to display the image.
            </summary>
            <param name="url">The image URL.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.ImageContainer.CreateImageSprite">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Sprites.Sprite"/> to display the image.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.ImageContainer.GetImageTexture(osu.Framework.Graphics.Textures.TextureStore,System.String)">
            <summary>
            Retrieves a <see cref="T:osu.Framework.Graphics.Textures.Texture"/> for the image.
            </summary>
            <param name="textures">The texture store.</param>
            <param name="url">The image URL.</param>
            <returns>The image's <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownImage.ImageContainer.GetNotFoundTexture(osu.Framework.Graphics.Textures.TextureStore)">
            <summary>
            Retrieves a default <see cref="T:osu.Framework.Graphics.Textures.Texture"/> to be displayed when the image can't be loaded.
            </summary>
            <param name="textures">The texture store.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownLinkText">
            <summary>
            Visualises a link.
            </summary>
            <code>
            [link text](url)
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownList">
            <summary>
            Visualises a list.
            </summary>
            <code>
            * item 1
            * item 2
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownParagraph">
            <summary>
            Visualises a paragraph.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownQuoteBlock">
            <summary>
            Visualises a quote block.
            </summary>
            <code>
            > Quote
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownSeparator">
            <summary>
            Visualises a horizontal separator.
            </summary>
            <code>
            ---
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTable">
            <summary>
            Visualises a table.
            </summary>
            <code>
            | heading 1 | heading 2 |
            | --------- | --------- |
            |  cell 1   |  cell 2   |
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTableCell">
            <summary>
            Visualises a cell of a <see cref="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTable"/>.
            </summary>
            <code>
            |  cell 1   |  cell 2   |
            </code>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.MarkdownTextFlowContainer">
            <summary>
            Markdown text flow container.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.Markdown.MarkdownTextFlowContainer.ApplyEmphasisedCreationParameters(osu.Framework.Graphics.Sprites.SpriteText,System.Boolean,System.Boolean)">
            <summary>
            Applies emphasised creation parameters to <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>.
            </summary>
            <param name="spriteText">The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> to be emphasised.</param>
            <param name="bold">Whether the text should be emboldened.</param>
            <param name="italic">Whether the text should be italicised.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.Markdown.NotImplementedMarkdown">
            <summary>
            Visualises a message that displays when a <see cref="T:Markdig.Syntax.IMarkdownObject"/> doesn't have a visual implementation.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.ModelBackedDrawable`1">
            <summary>
            Manages dynamically displaying a custom <see cref="T:osu.Framework.Graphics.Drawable"/> based on a model object.
            Useful for replacing <see cref="T:osu.Framework.Graphics.Drawable"/>s on the fly.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.DisplayedDrawable">
            <summary>
            The currently displayed <see cref="T:osu.Framework.Graphics.Drawable"/>. Null if no drawable is displayed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.Comparer">
            <summary>
            The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used to compare models to ensure that <see cref="T:osu.Framework.Graphics.Drawable"/>s are not updated unnecessarily.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.Model">
            <summary>
            Gets or sets the model, potentially triggering the current <see cref="T:osu.Framework.Graphics.Drawable"/> to update.
            Subclasses should expose this via a nicer property name to better represent the data being set.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.displayedWrapper">
            <summary>
            The wrapper which has the current displayed content.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.currentWrapper">
            <summary>
            The wrapper which is currently loading, or has finished loading (i.e <see cref="F:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.displayedWrapper"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.#ctor">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Containers.ModelBackedDrawable`1"/> with the default <typeparamref name="T"/> equality comparer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.#ctor(System.Func{`0,`0,System.Boolean})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Containers.ModelBackedDrawable`1"/> with a custom equality function.
            </summary>
            <param name="func">The equality function.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Containers.ModelBackedDrawable`1"/> with a custom <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.finishLoad(osu.Framework.Graphics.Containers.DelayedLoadWrapper)">
            <summary>
            Invoked when a <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/> has finished loading its contents.
            May be invoked multiple times for each <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/>.
            </summary>
            <param name="wrapper">The current <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.createWrapper(System.Func{osu.Framework.Graphics.Drawable},System.Double)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/> which supports reloading.
            </summary>
            <param name="createContentFunc">A function that creates the wrapped <see cref="T:osu.Framework.Graphics.Drawable"/>.</param>
            <param name="timeBeforeLoad">The time before loading should begin.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/> or null if <paramref name="createContentFunc"/> returns null.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.OnLoadStarted">
            <summary>
            Invoked when the <see cref="T:osu.Framework.Graphics.Drawable"/> representation of a model begins loading.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.OnLoadFinished">
            <summary>
            Invoked when the <see cref="T:osu.Framework.Graphics.Drawable"/> representation of a model has finished loading.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.TransformImmediately">
            <summary>
            Determines whether <see cref="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.ApplyHideTransforms(osu.Framework.Graphics.Drawable)"/> should be invoked immediately on the currently-displayed drawable when switching to a new model.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.TransformDuration">
            <summary>
            The default time in milliseconds for transforms applied through <see cref="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.ApplyHideTransforms(osu.Framework.Graphics.Drawable)"/> and <see cref="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.ApplyShowTransforms(osu.Framework.Graphics.Drawable)"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.LoadDelay">
            <summary>
            The delay in milliseconds before <see cref="T:osu.Framework.Graphics.Drawable"/>s will begin loading.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.CreateDelayedLoadWrapper(System.Func{osu.Framework.Graphics.Drawable},System.Double)">
            <summary>
            Allows subclasses to customise the <see cref="T:osu.Framework.Graphics.Containers.DelayedLoadWrapper"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.CreateDrawable(`0)">
            <summary>
            Creates a custom <see cref="T:osu.Framework.Graphics.Drawable"/> to display a model.
            </summary>
            <param name="model">The model that the <see cref="T:osu.Framework.Graphics.Drawable"/> should represent.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Drawable"/> that represents <paramref name="model"/>, or null if no <see cref="T:osu.Framework.Graphics.Drawable"/> should be displayed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.ApplyHideTransforms(osu.Framework.Graphics.Drawable)">
            <summary>
            Hides a drawable.
            </summary>
            <param name="drawable">The drawable that is to be hidden.</param>
            <returns>The transform sequence.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ModelBackedDrawable`1.ApplyShowTransforms(osu.Framework.Graphics.Drawable)">
            <summary>
            Shows a drawable.
            </summary>
            <param name="drawable">The drawable that is to be shown.</param>
            <returns>The transform sequence.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.OverlayContainer">
            <summary>
            An element which starts hidden and can be toggled to visible.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.OverlayContainer.BlockPositionalInput">
            <summary>
            Whether we should block any positional input from interacting with things behind us.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.OverlayContainer.BlockScrollInput">
            <summary>
            Scroll events are sometimes required to be handled differently to general positional input.
            This covers whether scroll events that occur within this overlay's bounds are blocked or not.
            Defaults to the same value as <see cref="P:osu.Framework.Graphics.Containers.OverlayContainer.BlockPositionalInput"/>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.OverlayContainer.BlockNonPositionalInput">
            <summary>
            Whether we should block any non-positional input from interacting with things behind us.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.RearrangeableListContainer`1">
            <summary>
            A list container that enables its children to be rearranged via dragging.
            </summary>
            <remarks>
            Adding duplicate items is not currently supported.
            </remarks>
            <typeparam name="TModel">The type of rearrangeable item.</typeparam>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.Items">
            <summary>
            The items contained by this <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListContainer`1"/>, in the order they are arranged.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.MaxExponent">
            <summary>
            The maximum exponent of the automatic scroll speed at the boundaries of this <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListContainer`1"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ScrollContainer">
            <summary>
            The <see cref="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ScrollContainer"/> containing the flow of items.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ListContainer">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer"/> containing of all the <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ItemMap">
            <summary>
            The mapping of <typeparamref name="TModel"/> to <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.#ctor">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListContainer`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.OnItemsChanged">
            <summary>
            Fired whenever new drawable items are added or removed from <see cref="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ListContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.CreateListFillFlowContainer">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.Containers.FillFlowContainer`1"/> for the items.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.CreateScrollContainer">
            <summary>
            Creates the <see cref="F:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.ScrollContainer"/> for the list of items.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListContainer`1.CreateDrawable(`0)">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.Drawable"/> representation of an item.
            </summary>
            <param name="item">The item to create the <see cref="T:osu.Framework.Graphics.Drawable"/> representation of.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1">
            <summary>
            An item of a <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListContainer`1"/>.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListItem`1.StartArrangement">
            <summary>
            Invoked on drag start, if an arrangement should be started.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListItem`1.Arrange">
            <summary>
            Invoked on drag, if this item is being arranged.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListItem`1.EndArrangement">
            <summary>
            Invoked on drag end, if this item is being arranged.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.RearrangeableListItem`1.Model">
            <summary>
            The item this <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1"/> represents.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListItem`1.#ctor(`0)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Containers.RearrangeableListItem`1"/>.
            </summary>
            <param name="item">The item to represent.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.RearrangeableListItem`1.IsDraggableAt(osuTK.Vector2)">
            <summary>
            Whether the item is able to be dragged at the given screen-space position.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.SafeAreaContainer">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Containers.Container"/> that can also apply a padding based on the safe areas of the nearest cached <see cref="T:osu.Framework.Graphics.Containers.SafeAreaDefiningContainer"/>.
            Padding will only be applied if the contents of this container would otherwise intersect the safe area margins relative to the associated target container.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.SafeAreaContainer.SafeAreaOverrideEdges">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Edges"/> that should bypass the defined <see cref="T:osu.Framework.Graphics.Containers.ISafeArea" /> to bleed to the screen edge.
            Defaults to <see cref="F:osu.Framework.Graphics.Edges.None"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.SafeAreaDefiningContainer">
            <summary>
            A <see cref="T:osu.Framework.Graphics.Containers.Container"/> that is automatically cached and provides a <see cref="T:osu.Framework.Bindables.BindableSafeArea"/> representing
            the desired safe area margins. Should be used in conjunction with child <see cref="T:osu.Framework.Graphics.Containers.SafeAreaContainer"/>s.
            The root of the scenegraph contains an instance of this container, with <see cref="T:osu.Framework.Bindables.BindableSafeArea"/> automatically bound
            to the host <see cref="T:osu.Framework.Platform.IWindow"/>'s <see cref="P:osu.Framework.Platform.IWindow.SafeAreaPadding"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.SafeAreaDefiningContainer.#ctor(osu.Framework.Bindables.BindableSafeArea)">
            <summary>
            Initialises a <see cref="T:osu.Framework.Graphics.Containers.SafeAreaDefiningContainer"/> by optionally providing a custom <see cref="T:osu.Framework.Bindables.BindableSafeArea"/>.
            If no such binding is provided, the container will default to <see cref="P:osu.Framework.Platform.IWindow.SafeAreaPadding"/>.
            </summary>
            <param name="safeArea">The custom <see cref="T:osu.Framework.Bindables.BindableSafeArea"/> to bind to, if required.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarAnchor">
            <summary>
            Determines whether the scroll dragger appears on the left side. If not, then it always appears on the right side.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarVisible">
            <summary>
            Whether the scrollbar is visible.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarOverlapsContent">
            <summary>
            Whether the scrollbar overlaps the content or resides in its own padded space.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.AvailableContent">
            <summary>
            Size of available content (i.e. everything that can be scrolled to) in the scroll direction.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.DisplayableContent">
            <summary>
            Size of the viewport in the scroll direction.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollDistance">
            <summary>
            Controls the distance scrolled per unit of mouse scroll.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.ClampExtension">
            <summary>
            This limits how far out of clamping bounds we allow the target position to be at most.
            Effectively, larger values result in bouncier behavior as the scroll boundaries are approached
            with high velocity.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.distance_decay_clamping">
            <summary>
            This corresponds to the clamping force. A larger value means more aggressive clamping. Default is 0.012.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.DistanceDecayDrag">
            <summary>
            Controls the rate with which the target position is approached after ending a drag. Default is 0.0035.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.DistanceDecayScroll">
            <summary>
            Controls the rate with which the target position is approached after scrolling. Default is 0.01
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.DistanceDecayJump">
            <summary>
            Controls the rate with which the target position is approached after jumping to a specific location. Default is 0.01.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.ScrollContainer`1.distanceDecay">
            <summary>
            Controls the rate with which the target position is approached. It is automatically set after
            dragging or scrolling.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.Current">
            <summary>
            The current scroll position.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.Target">
            <summary>
            The target scroll position which is exponentially approached by current via a rate of distance decay.
            </summary>
            <remarks>
            When not animating scroll position, this will always be equal to <see cref="P:osu.Framework.Graphics.Containers.ScrollContainer`1.Current"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollableExtent">
            <summary>
            The maximum distance that can be scrolled in the scroll direction.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarMovementExtent">
            <summary>
            The maximum distance that the scrollbar can move in the scroll direction.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.Clamp(System.Single,System.Single)">
            <summary>
            Clamp a value to the available scroll range.
            </summary>
            <param name="position">The value to clamp.</param>
            <param name="extension">An extension value beyond the normal extent.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.IsScrolledToStart(System.Single)">
            <summary>
            Whether we are currently scrolled to the beginning of content.
            </summary>
            <param name="lenience">How close to the extent we need to be.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.IsScrolledToEnd(System.Single)">
            <summary>
            Whether we are currently scrolled as far as possible into the scroll direction.
            </summary>
            <param name="lenience">How close to the extent we need to be.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollContent">
            <summary>
            The container holding all children which are getting scrolled around.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollDim">
            <summary>
            The direction in which scrolling is supported, converted to an int for array index lookups.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.#ctor(osu.Framework.Graphics.Direction)">
            <summary>
            Creates a scroll container.
            </summary>
            <param name="scrollDirection">The direction in which should be scrolled. Can be vertical or horizontal. Default is vertical.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.OffsetScrollPosition(System.Single)">
            <summary>
            Immediately offsets the current and target scroll position.
            </summary>
            <param name="offset">The scroll offset.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollToStart(System.Boolean,System.Boolean)">
            <summary>
            Scroll to the start of available content.
            </summary>
            <param name="animated">Whether to animate the movement.</param>
            <param name="allowDuringDrag">Whether we should interrupt a user's active drag.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollToEnd(System.Boolean,System.Boolean)">
            <summary>
            Scroll to the end of available content.
            </summary>
            <param name="animated">Whether to animate the movement.</param>
            <param name="allowDuringDrag">Whether we should interrupt a user's active drag.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollBy(System.Single,System.Boolean)">
            <summary>
            Scrolls to a new position relative to the current scroll offset.
            </summary>
            <param name="offset">The amount by which we should scroll.</param>
            <param name="animated">Whether to animate the movement.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.OnUserScroll(System.Single,System.Boolean,System.Nullable{System.Double})">
            <summary>
            Handle a scroll to an absolute position from a user input.
            </summary>
            <param name="value">The position to scroll to.</param>
            <param name="animated">Whether to animate the movement.</param>
            <param name="distanceDecay">Controls the rate with which the target position is approached after jumping to a specific location. Default is <see cref="F:osu.Framework.Graphics.Containers.ScrollContainer`1.DistanceDecayJump"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollTo(System.Single,System.Boolean,System.Nullable{System.Double})">
            <summary>
            Scrolls to an absolute position.
            </summary>
            <param name="value">The position to scroll to.</param>
            <param name="animated">Whether to animate the movement.</param>
            <param name="distanceDecay">Controls the rate with which the target position is approached after jumping to a specific location. Default is <see cref="F:osu.Framework.Graphics.Containers.ScrollContainer`1.DistanceDecayJump"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollTo(osu.Framework.Graphics.Drawable,System.Boolean)">
            <summary>
            Scrolls a <see cref="T:osu.Framework.Graphics.Drawable"/> to the top.
            </summary>
            <param name="d">The <see cref="T:osu.Framework.Graphics.Drawable"/> to scroll to.</param>
            <param name="animated">Whether to animate the movement.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollIntoView(osu.Framework.Graphics.Drawable,System.Boolean)">
            <summary>
            Scrolls a <see cref="T:osu.Framework.Graphics.Drawable"/> into view.
            </summary>
            <param name="d">The <see cref="T:osu.Framework.Graphics.Drawable"/> to scroll into view.</param>
            <param name="animated">Whether to animate the movement.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.GetChildPosInContent(osu.Framework.Graphics.Drawable,osuTK.Vector2)">
            <summary>
            Determines the position of a child in the content.
            </summary>
            <param name="d">The child to get the position from.</param>
            <param name="offset">Positional offset in the child's space.</param>
            <returns>The position of the child.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.GetChildPosInContent(osu.Framework.Graphics.Drawable)">
            <summary>
            Determines the position of a child in the content.
            </summary>
            <param name="d">The child to get the position from.</param>
            <returns>The position of the child.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.toScrollbarPosition(System.Single)">
            <summary>
            Converts a scroll position to a scrollbar position.
            </summary>
            <param name="scrollPosition">The absolute scroll position (e.g. <see cref="P:osu.Framework.Graphics.Containers.ScrollContainer`1.Current"/>).</param>
            <returns>The scrollbar position.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.fromScrollbarPosition(System.Single)">
            <summary>
            Converts a scrollbar position to a scroll position.
            </summary>
            <param name="scrollbarPosition">The scrollbar position.</param>
            <returns>The absolute scroll position.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.ScrollContainer`1.CreateScrollbar(osu.Framework.Graphics.Direction)">
            <summary>
            Creates the scrollbar for this <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1"/>.
            </summary>
            <param name="direction">The scrolling direction.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarContainer.MinimumDimSize">
            <summary>
            The minimum size of this <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1.ScrollbarContainer"/>. Defaults to the size in the non-scrolling direction.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.SearchContainer`1">
            <summary>
            A container which automatically filters <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> children based on a search term.
            Re-filtering will only be performed when the <see cref="P:osu.Framework.Graphics.Containers.SearchContainer`1.SearchTerm"/> changes, or
            the layout of the container is invalidated.
            </summary>
            <remarks>
            <list type="bullet">
            <item>Children which are searchable should be marked with the <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> interface. They do not need to be direct children to work (filtering will traverse the full drawable subtree).</item>
            <item>Marking a container (ie. a "group" or "section" that contains nested <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/>s) as <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> will automatically keep it non-filtered as long as at least one nested item is not filtered away.</item>
            <item>Any <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/>s which are contained in a <see cref="T:osu.Framework.Graphics.Containers.IConditionalFilterable"/> which has <see cref="P:osu.Framework.Graphics.Containers.IConditionalFilterable.CanBeShown"/> set to <see langword="false"/> will be excluded from filtering. This can be used to exclude certain items from consideration (ie. items which are hidden from display), allowing group/sections to be correctly filtered away.</item>
            </list>
            </remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="E:osu.Framework.Graphics.Containers.SearchContainer`1.FilterCompleted">
            <summary>
            Fired whenever a filter operation completes.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.SearchContainer`1.AllowNonContiguousMatching">
            <summary>
            Whether the matching algorithm should consider cases where other characters exist between consecutive characters in the search term.
            If <c>true</c>, searching for "BSI" will match "BeatmapSetInfo".
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.SearchContainer`1.SearchTerm">
            <summary>
            A string that should match the <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> children
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.SearchContainer`1.Filter">
             <summary>
             Immediately filter <see cref="T:osu.Framework.Graphics.Containers.IFilterable"/> children based on the current <see cref="P:osu.Framework.Graphics.Containers.SearchContainer`1.SearchTerm"/>.
             </summary>
             <remarks>
             Filtering is done automatically after a change to <see cref="P:osu.Framework.Graphics.Containers.SearchContainer`1.SearchTerm"/>, on new drawables being added, and on certain changes to
             searchable children (like <see cref="P:osu.Framework.Graphics.Containers.IConditionalFilterable.CanBeShown"/> changing).
            
             However, if <see cref="T:osu.Framework.Graphics.Containers.SearchContainer`1"/> or any of its parents are hidden this will not be run.
             If an implementation relies on filtering to become present / visible, this method can be used to force a filter.
            
             Note that this will only run if the current filter is not in an already valid state.
             </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.SearchContainer`1.checkTerm(System.String,System.String,System.Boolean)">
            <summary>
            Check whether a search term exists in a forward direction, allowing for potentially non-matching characters to exist between matches.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.ITabbableContainer">
            <summary>
            This interface is used for recognizing <see cref="T:osu.Framework.Graphics.Containers.TabbableContainer`1"/> of any type without reflection.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.ITabbableContainer.CanBeTabbedTo">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Containers.ITabbableContainer"/> can be tabbed to.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TabbableContainer`1.CanBeTabbedTo">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Containers.TabbableContainer`1"/> can be tabbed to.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TabbableContainer`1.TabbableContentContainer">
            <summary>
            Allows for tabbing between multiple levels within the TabbableContentContainer.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TableContainer">
            <summary>
            A container which tabulates <see cref="T:osu.Framework.Graphics.Drawable"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.Content">
            <summary>
            The content of this <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>, arranged in a 2D rectangular array.
            <para>
            Null elements are allowed to represent blank rows/cells.
            </para>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.Columns">
            <summary>
            Describes the columns of this <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>.
            Each index of this array applies to the respective column index inside <see cref="P:osu.Framework.Graphics.Containers.TableContainer.Content"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.RowSize">
            <summary>
            Explicit dimensions for rows. The dimension is applied to every row of this <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.ShowHeaders">
            <summary>
            Whether to display a row with column headers at the top of the table.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.InternalChildren"/>.
            Children's <see cref="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes"/> are ignored for automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> of children
            do not affect automatic sizing to avoid circular size dependencies.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Drawable.Size"/> (or <see cref="P:osu.Framework.Graphics.Drawable.Width"/> / <see cref="P:osu.Framework.Graphics.Drawable.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.totalRows">
            <summary>
            The total number of rows in the content, including the header.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TableContainer.totalColumns">
            <summary>
            The total number of columns in the content, including the header.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableContainer.updateContent">
            <summary>
            Adds content to the underlying grid.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableContainer.getContentWithHeaders">
            <summary>
            Adds headers, if required, and returns the resulting content. <see cref="F:osu.Framework.Graphics.Containers.TableContainer.content"/> is not modified in the process.
            </summary>
            <returns>The content, with headers added if required.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableContainer.updateAnchors">
            <summary>
            Ensures that all cells have the correct anchors defined by <see cref="P:osu.Framework.Graphics.Containers.TableContainer.Columns"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableContainer.updateGridSize">
            <summary>
            Keeps the grid autosized in our autosized axes, and relative-sized in our non-autosized axes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableContainer.CreateHeader(System.Int32,osu.Framework.Graphics.Containers.TableColumn)">
            <summary>
            Creates the content for a cell in the header row of the table.
            </summary>
            <param name="index">The column index.</param>
            <param name="column">The column definition.</param>
            <returns>The cell content.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TableColumn">
            <summary>
            Defines a column of the <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.TableColumn.Header">
            <summary>
            The localisable text to be displayed in the cell.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.TableColumn.Anchor">
            <summary>
            The anchor of all cells in this column of the <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.TableColumn.Dimension">
            <summary>
            The dimension of the column in the table.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TableColumn.#ctor(System.Nullable{osu.Framework.Localisation.LocalisableString},osu.Framework.Graphics.Anchor,osu.Framework.Graphics.Containers.Dimension)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Containers.TableColumn"/>.
            </summary>
            <param name="header">The localisable text to be displayed in the cell.</param>
            <param name="anchor">The anchor of all cells in this column of the <see cref="T:osu.Framework.Graphics.Containers.TableContainer"/>.</param>
            <param name="dimension">The dimension of the column in the table.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TextChunk`1">
            <summary>
            Represents a plain chunk of text to be displayed in a text flow.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TextFlowContainer">
            <summary>
            A drawable text object that supports more advanced text formatting.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.FirstLineIndent">
            <summary>
            An indent value for the first (header) line of a paragraph.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.ContentIndent">
            <summary>
            An indent value for all lines proceeding the first line in a paragraph.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.ParagraphSpacing">
            <summary>
            Vertical space between paragraphs (i.e. text separated by '\n') in multiples of the text size.
            The default value is 0.5.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.LineSpacing">
            <summary>
            Vertical space between lines both when a new paragraph begins and when line wrapping occurs.
            Additive with <see cref="P:osu.Framework.Graphics.Containers.TextFlowContainer.ParagraphSpacing"/> on new paragraph. Default value is 0.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.TextAnchor">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Anchor"/> which text should flow from.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.TextFlowContainer.Text">
            <summary>
            An easy way to set the full text of a text flow in one go.
            This will overwrite any existing text added using this method of <see cref="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText(osu.Framework.Localisation.LocalisableString,System.Action{osu.Framework.Graphics.Sprites.SpriteText})"/>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})">
            <summary>
            Add new text to this text flow. The \n character will create a new paragraph, not just a line break.
            If you need \n to be a line break, use <see cref="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddParagraph``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})"/> instead.
            </summary>
            <returns>A collection of <see cref="T:osu.Framework.Graphics.Drawable" /> objects for each <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> word and <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer.NewLineContainer"/> created from the given text.</returns>
            <param name="text">The text to add.</param>
            <param name="creationParameters">A callback providing any <see cref="T:osu.Framework.Graphics.Sprites.SpriteText" /> instances created for this new text.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText(osu.Framework.Localisation.LocalisableString,System.Action{osu.Framework.Graphics.Sprites.SpriteText})">
            <inheritdoc cref="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})"/>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText``1(``0,System.Action{``0})">
            <summary>
            Add an arbitrary <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> to this <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/>.
            While default creation parameters are applied automatically, word wrapping is unavailable for contained words.
            This should only be used when a specialised <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> type is required.
            </summary>
            <param name="text">The text to add.</param>
            <param name="creationParameters">A callback providing any <see cref="T:osu.Framework.Graphics.Sprites.SpriteText" /> instances created for this new text.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddParagraph``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})">
            <summary>
            Add a new paragraph to this text flow. The \n character will create a line break
            If you need \n to be a new paragraph, not just a line break, use <see cref="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddText``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})"/> instead.
            </summary>
            <returns>A collection of <see cref="T:osu.Framework.Graphics.Drawable" /> objects for each <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> word and <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer.NewLineContainer"/> created from the given text.</returns>
            <param name="paragraph">The paragraph to add.</param>
            <param name="creationParameters">A callback providing any <see cref="T:osu.Framework.Graphics.Sprites.SpriteText" /> instances created for this new paragraph.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddParagraph(osu.Framework.Localisation.LocalisableString,System.Action{osu.Framework.Graphics.Sprites.SpriteText})">
            <inheritdoc cref="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddParagraph``1(osu.Framework.Localisation.LocalisableString,System.Action{``0})"/>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.CreateChunkFor``1(osu.Framework.Localisation.LocalisableString,System.Boolean,System.Func{``0},System.Action{``0})">
            <summary>
            Creates an appropriate implementation of <see cref="T:osu.Framework.Graphics.Containers.TextChunk`1"/> for this text flow container type.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.NewLine">
            <summary>
            End current line and start a new one.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.NewParagraph">
            <summary>
            End current paragraph and start a new one.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.AddPart(osu.Framework.Graphics.Containers.ITextPart)">
            <summary>
            Adds an <see cref="T:osu.Framework.Graphics.Containers.ITextPart"/> and its associated drawables to this <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextFlowContainer.RemovePart(osu.Framework.Graphics.Containers.ITextPart)">
            <summary>
            Removes an <see cref="T:osu.Framework.Graphics.Containers.ITextPart"/> from this text flow.
            </summary>
            <returns>Whether <see cref="T:osu.Framework.Graphics.Containers.ITextPart"/> was successfully removed from the flow.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TextPart">
            <summary>
            A basic implementation of <see cref="T:osu.Framework.Graphics.Containers.ITextPart"/>,
            which automatically handles returning correct <see cref="P:osu.Framework.Graphics.Containers.TextPart.Drawables"/>
            and raising <see cref="E:osu.Framework.Graphics.Containers.TextPart.DrawablePartsRecreated"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.TextPart.CreateDrawablesFor(osu.Framework.Graphics.Containers.TextFlowContainer)">
            <summary>
            Creates drawables representing the contents of this <see cref="T:osu.Framework.Graphics.Containers.TextPart"/>,
            to be appended to the <paramref name="textFlowContainer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.TextPartManual">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Containers.ITextPart"/> which utilises externally-provided drawables.
            Will never recreate its contents or raise <see cref="E:osu.Framework.Graphics.Containers.TextPartManual.DrawablePartsRecreated"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Containers.VisibilityContainer">
            <summary>
            A container which adds a basic visibility state.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Containers.VisibilityContainer.State">
            <summary>
            The current visibility state.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Containers.VisibilityContainer.StartHidden">
            <summary>
            Whether we should be in a hidden state when first displayed.
            Override this and set to true to *always* perform a <see cref="M:osu.Framework.Graphics.Containers.VisibilityContainer.PopIn"/> animation even when the state is non-hidden at
            first display.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.Show">
            <summary>
            Show this container by setting its visibility to <see cref="F:osu.Framework.Graphics.Containers.Visibility.Visible"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.Hide">
            <summary>
            Hide this container by setting its visibility to <see cref="F:osu.Framework.Graphics.Containers.Visibility.Hidden"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.ToggleVisibility">
            <summary>
            Toggle this container's visibility.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.PopIn">
            <summary>
            Implement any transition to be played when <see cref="F:osu.Framework.Graphics.Containers.VisibilityContainer.State"/> becomes <see cref="F:osu.Framework.Graphics.Containers.Visibility.Visible"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.PopOut">
            <summary>
            Implement any transition to be played when <see cref="F:osu.Framework.Graphics.Containers.VisibilityContainer.State"/> becomes <see cref="F:osu.Framework.Graphics.Containers.Visibility.Hidden"/>.
            Will be invoked once on <see cref="M:osu.Framework.Graphics.Containers.VisibilityContainer.LoadComplete"/> if <see cref="P:osu.Framework.Graphics.Containers.VisibilityContainer.StartHidden"/> is set.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Containers.VisibilityContainer.UpdateState(osu.Framework.Bindables.ValueChangedEvent{osu.Framework.Graphics.Containers.Visibility})">
            <summary>
            Called whenever <see cref="F:osu.Framework.Graphics.Containers.VisibilityContainer.State"/> is changed.
            Used to update this container's elements according to the new visibility state.
            </summary>
            <param name="state">The <see cref="T:osu.Framework.Bindables.ValueChangedEvent`1"/> provided by <see cref="F:osu.Framework.Graphics.Containers.VisibilityContainer.State"/></param>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.ContextMenuContainer">
            <summary>
            A container which manages a <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            If a right-click happens on a <see cref="T:osu.Framework.Graphics.Drawable"/> that implements <see cref="T:osu.Framework.Graphics.Cursor.IHasContextMenu"/> and exists as a child of the same <see cref="T:osu.Framework.Input.InputManager"/> as this container,
            a <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> will be displayed with bottom-right origin at the right-clicked position.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.ContextMenuContainer.CreateMenu">
            <summary>
            Creates a new context menu. Can be overridden to supply custom subclass of <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.ContextMenuContainer.#ctor">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Cursor.ContextMenuContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.CursorContainer.CreateLongPressFeedback">
            <summary>
            Creates a drawable providing visual feedback for touch long-presses, signaled via <see cref="M:osu.Framework.Graphics.Cursor.TouchLongPressFeedback.BeginAnimation(System.Double)"/> and <see cref="M:osu.Framework.Graphics.Cursor.TouchLongPressFeedback.CancelAnimation"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.IHasAppearDelay">
            <summary>
            A tooltip which provides a custom delay until it appears, override the <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/>-wide default.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.IHasAppearDelay.AppearDelay">
            <summary>
            The delay until the tooltip should be displayed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.IHasContextMenu.ContextMenuItems">
            <summary>
            Menu items that appear when the drawable is right-clicked.
            </summary>
            <remarks>
            If empty, this <see cref="T:osu.Framework.Graphics.Drawable"/> will be picked as the menu target but a context menu will not be shown.
            <para>If null, this <see cref="T:osu.Framework.Graphics.Drawable"/> will not be picked as the menu target and other <see cref="T:osu.Framework.Graphics.Drawable"/>s underneath may become the menu target.</para>
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.IHasCustomTooltip">
            <summary>
            Implementing this interface allows the implementing <see cref="T:osu.Framework.Graphics.Drawable"/> to display a custom tooltip if it is the child of a <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/>.
            Keep in mind that tooltips can only be displayed by a <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/> if the <see cref="T:osu.Framework.Graphics.Drawable"/> implementing <see cref="T:osu.Framework.Graphics.Cursor.IHasCustomTooltip"/> has <see cref="P:osu.Framework.Graphics.Drawable.HandlePositionalInput"/> set to true.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.IHasCustomTooltip.GetCustomTooltip">
            <summary>
            The custom tooltip that should be displayed.
            </summary>
            <remarks>
            A tooltip may be reused between different drawables with different content if they share the same tooltip type.
            Therefore it is recommended for all displayed content in the tooltip to be provided by <see cref="P:osu.Framework.Graphics.Cursor.IHasCustomTooltip.TooltipContent"/> instead.
            </remarks>
            <returns>The custom tooltip that should be displayed.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.IHasCustomTooltip.TooltipContent">
            <summary>
            Tooltip text that shows when hovering the drawable.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.IHasCustomTooltip`1">
            <inheritdoc />
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.IHasCustomTooltip`1.GetCustomTooltip">
            <inheritdoc cref="M:osu.Framework.Graphics.Cursor.IHasCustomTooltip.GetCustomTooltip"/>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.IHasCustomTooltip`1.TooltipContent">
            <inheritdoc cref="P:osu.Framework.Graphics.Cursor.IHasCustomTooltip.TooltipContent"/>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.IHasPopover">
            <summary>
            Interface to be implemented by UI controls that show a <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/> on click.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.IHasPopover.GetPopover">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/> to display for this control.
            Supports returning <see langword="null"/> if the popover should only display in some cases
            (e.g. if the control is not disabled).
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.IHasTooltip">
            <summary>
            Implementing this interface allows the implementing <see cref="T:osu.Framework.Graphics.Drawable"/> to display a tooltip if it is the child of a <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/>. The tooltip used is
            dependent on the implementation of the <see cref="M:osu.Framework.Graphics.Cursor.TooltipContainer.CreateTooltip"/> method of the <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/> containing this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.IHasTooltip.TooltipText">
            <summary>
            Tooltip text that shows when hovering the drawable.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.ITooltip">
            <summary>
            A tooltip that can be used in conjunction with a <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer"/> and/or <see cref="T:osu.Framework.Graphics.Cursor.IHasCustomTooltip"/> implementation.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.ITooltip.SetContent(System.Object)">
            <summary>
            Set new content be displayed on this tooltip.
            </summary>
            <param name="content">The content to be displayed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.ITooltip.Move(osuTK.Vector2)">
            <summary>
            Moves the tooltip to the given position. May use easing.
            </summary>
            <param name="pos">The position the tooltip should be moved to.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.ITooltip`1">
            <inheritdoc />
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.ITooltip`1.SetContent(`0)">
            <inheritdoc cref="M:osu.Framework.Graphics.Cursor.ITooltip.SetContent(System.Object)"/>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.ITooltipContentProvider">
            <summary>
            Marker interface for interfaces that provide tooltip content.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.PopoverContainer.SetTarget(osu.Framework.Graphics.Cursor.IHasPopover)">
            <summary>
            Sets the target drawable for this <see cref="T:osu.Framework.Graphics.Cursor.PopoverContainer"/> to <paramref name="newTarget"/>.
            </summary>
            <remarks>
            After calling this method, the previous popover shown in this <see cref="T:osu.Framework.Graphics.Cursor.PopoverContainer"/> will be hidden.
            This method can be called with a <see langword="null"/> argument to hide the currently-visible popover.
            </remarks>
            <returns><see langword="true"/> if a new popover was shown, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.PopoverContainer.availableSizeAroundTargetForAnchor(osu.Framework.Graphics.Primitives.Quad,osu.Framework.Graphics.Anchor)">
            <summary>
            Computes the available size around the <paramref name="targetLocalQuad"/> on the side of it indicated by <paramref name="anchor"/>
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.TooltipContainer">
            <summary>
            Displays Tooltips for all its children that inherit from the <see cref="T:osu.Framework.Graphics.Cursor.IHasTooltip"/> or <see cref="T:osu.Framework.Graphics.Cursor.IHasCustomTooltip"/> interfaces. Keep in mind that only children with <see cref="P:osu.Framework.Graphics.Drawable.HandlePositionalInput"/> set to true will be checked for their tooltips.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearDelay">
            <summary>
            Duration the cursor has to stay in a circular region of <see cref="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearRadius"/>
            for the tooltip to appear.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearRadius">
            <summary>
            Radius of the circular region the cursor has to stay in for <see cref="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearDelay"/>
            milliseconds for the tooltip to appear.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.CreateTooltip">
            <summary>
            Creates a new tooltip. Can be overridden to supply custom subclass of <see cref="T:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.#ctor(osu.Framework.Graphics.Cursor.CursorContainer)">
            <summary>
            Creates a tooltip container where the tooltip is positioned at the bottom-right of
            the <see cref="P:osu.Framework.Graphics.Cursor.CursorContainer.ActiveCursor"/> of the given <see cref="T:osu.Framework.Graphics.Cursor.CursorContainer"/>.
            </summary>
            <param name="cursorContainer">The <see cref="T:osu.Framework.Graphics.Cursor.CursorContainer"/> of which the <see cref="P:osu.Framework.Graphics.Cursor.CursorContainer.ActiveCursor"/>
            shall be used for positioning. If null is provided, then a small offset from the current mouse position is used.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.findTooltipTarget">
            <summary>
            Determines which drawable should currently receive a tooltip, taking into account
            <see cref="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearDelay"/> and <see cref="P:osu.Framework.Graphics.Cursor.TooltipContainer.AppearRadius"/>. Returns null if no valid
            target is found.
            </summary>
            <returns>The tooltip target. null if no valid one is found.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.RefreshTooltip(osu.Framework.Graphics.Cursor.ITooltip,osu.Framework.Graphics.Cursor.ITooltipContentProvider)">
            <summary>
            Refreshes the displayed tooltip. By default, this <see cref="M:osu.Framework.Graphics.Cursor.ITooltip.Move(osuTK.Vector2)"/>s the tooltip to the cursor position and updates its content via <see cref="M:osu.Framework.Graphics.Cursor.ITooltip.SetContent(System.Object)"/>.
            </summary>
            <param name="tooltip">The tooltip that is refreshed.</param>
            <param name="tooltipTarget">The target of the tooltip.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.ShallHideTooltip(osu.Framework.Graphics.Cursor.ITooltipContentProvider)">
            <summary>
            Returns true if the currently visible tooltip should be hidden, false otherwise. By default, returns true if the target of the tooltip is neither hovered nor dragged.
            </summary>
            <param name="tooltipTarget">The target of the tooltip.</param>
            <returns>True if the currently visible tooltip should be hidden, false otherwise.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip">
            <summary>
            The default tooltip. Simply displays its text on a gray background and performs no easing.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip.TooltipText">
            <summary>
            The text to be displayed by this tooltip. This property is assigned to whenever the tooltip text changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip.#ctor">
            <summary>
            Constructs a new tooltip that starts out invisible.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip.PopIn">
            <summary>
            Called whenever the tooltip appears. When overriding do not forget to fade in.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip.PopOut">
            <summary>
            Called whenever the tooltip disappears. When overriding do not forget to fade out.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TooltipContainer.Tooltip.Move(osuTK.Vector2)">
            <summary>
            Called whenever the position of the tooltip changes. Can be overridden to customize
            easing.
            </summary>
            <param name="pos">The new position of the tooltip.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TouchLongPressFeedback.BeginAnimation(System.Double)">
            <summary>
            Begins long-press animation with the specified duration.
            </summary>
            <param name="duration">The animation duration.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Cursor.TouchLongPressFeedback.CancelAnimation">
            <summary>
            Cancels an ongoing long-press animation.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Drawable">
             <summary>
             Drawables are the basic building blocks of a scene graph in this framework.
             Anything that is visible or that the user interacts with has to be a Drawable.
            
             For example:
              - Boxes
              - Sprites
              - Collections of Drawables
            
             Drawables are always rectangular in shape in their local coordinate system,
             which makes them quad-shaped in arbitrary (linearly transformed) coordinate systems.
             </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Dispose">
            <summary>
            Disposes this drawable.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Dispose(System.Boolean)">
            <summary>
            Disposes this drawable.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DisposeOnDeathRemoval">
            <summary>
            Whether this Drawable should be disposed when it is automatically removed from
            its <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> due to <see cref="P:osu.Framework.Graphics.Drawable.ShouldBeAlive"/> being false.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.UnbindAllBindablesSubTree">
            <summary>
            Recursively invokes <see cref="M:osu.Framework.Graphics.Drawable.UnbindAllBindables"/> on this <see cref="T:osu.Framework.Graphics.Drawable"/> and all <see cref="T:osu.Framework.Graphics.Drawable"/>s further down the scene graph.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.UnbindAllBindables">
            <summary>
            Unbinds all <see cref="T:osu.Framework.Bindables.Bindable`1"/>s stored as fields or properties in this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsLoaded">
            <summary>
            Whether this Drawable is fully loaded.
            This is true iff <see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/> has run once on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LoadState">
            <summary>
            Describes the current state of this Drawable within the loading pipeline.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LoadThread">
            <summary>
            The thread on which the <see cref="M:osu.Framework.Graphics.Drawable.Load(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)"/> operation started, or null if <see cref="T:osu.Framework.Graphics.Drawable"/> has not started loading.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.LoadFromAsync(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)">
            <summary>
            Load this drawable from an async context.
            Because we can't be sure of the disposal state, it is returned as a bool rather than thrown as in <see cref="M:osu.Framework.Graphics.Drawable.Load(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)"/>.
            </summary>
            <param name="clock">The clock we should use by default.</param>
            <param name="dependencies">The dependency tree we will inherit by default. May be extended via <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.CreateChildDependencies(osu.Framework.Allocation.IReadOnlyDependencyContainer)"/></param>
            <param name="isDirectAsyncContext">Whether this call is being executed from a directly async context (not a parent).</param>
            <returns>Whether the load was successful.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Load(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)">
            <summary>
            Loads this drawable, including the gathering of dependencies and initialisation of required resources.
            </summary>
            <param name="clock">The clock we should use by default.</param>
            <param name="dependencies">The dependency tree we will inherit by default. May be extended via <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.CreateChildDependencies(osu.Framework.Allocation.IReadOnlyDependencyContainer)"/></param>
            <param name="isDirectAsyncContext">Whether this call is being executed from a directly async context (not a parent).</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.InjectDependencies(osu.Framework.Allocation.IReadOnlyDependencyContainer)">
            <summary>
            Injects dependencies from an <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> into this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="dependencies">The dependencies to inject.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.loadComplete">
            <summary>
            Runs once on the update thread after loading has finished.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.LoadAsyncComplete">
            <summary>
            Invoked after dependency injection has completed for this <see cref="T:osu.Framework.Graphics.Drawable"/> and all
            children if this is a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
            <remarks>
            This method is invoked in the potentially asynchronous context of <see cref="M:osu.Framework.Graphics.Drawable.Load(osu.Framework.Timing.IFrameBasedClock,osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Boolean)"/> prior to
            this <see cref="T:osu.Framework.Graphics.Drawable"/> becoming <see cref="P:osu.Framework.Graphics.Drawable.IsLoaded"/> = true.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.LoadComplete">
            <summary>
            Invoked after this <see cref="T:osu.Framework.Graphics.Drawable"/> has finished loading.
            </summary>
            <remarks>
            This method is invoked on the update thread inside this <see cref="T:osu.Framework.Graphics.Drawable"/>'s <see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.ChildID">
            <summary>
            Captures the order in which Drawables were added to a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>. Each Drawable
            is assigned a monotonically increasing ID upon being added to a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>. This
            ID is unique within the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            The primary use case of this ID is stable sorting of Drawables with equal <see cref="P:osu.Framework.Graphics.Drawable.Depth"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsPartOfComposite">
            <summary>
            Whether this drawable has been added to a parent <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>. Note that this does NOT imply that
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> has been set.
            This is primarily used to block properties such as <see cref="P:osu.Framework.Graphics.Drawable.Depth"/> that strictly rely on the value of <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>
            to alert the user of an invalid operation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsAlive">
            <summary>
            Whether this drawable is part of its parent's <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.AliveInternalChildren"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Depth">
            <summary>
            Controls which Drawables are behind or in front of other Drawables.
            This amounts to sorting Drawables by their <see cref="P:osu.Framework.Graphics.Drawable.Depth"/>.
            A Drawable with higher <see cref="P:osu.Framework.Graphics.Drawable.Depth"/> than another Drawable is
            drawn behind the other Drawable.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.OnUpdate">
            <summary>
            This event is fired after the <see cref="M:osu.Framework.Graphics.Drawable.Update"/> method is called at the end of
            <see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/>. It should be used when a simple action should be performed
            at the end of every update call which does not warrant overriding the Drawable.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.OnLoadComplete">
            <summary>
            This event is fired after the <see cref="M:osu.Framework.Graphics.Drawable.LoadComplete"/> method is called.
            It should be used when a simple action should be performed
            when the Drawable is loaded which does not warrant overriding the Drawable.
            This event is automatically cleared after being invoked.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.Invalidated">
            <summary>.
            Fired after the <see cref="M:osu.Framework.Graphics.Drawable.Invalidate(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource)"/> method is called.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.OnDispose">
            <summary>
            Fired after the <see cref="M:osu.Framework.Graphics.Drawable.Dispose(System.Boolean)"/> method is called.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.OnUnbindAllBindables">
            <summary>
            Fired after the <see cref="M:osu.Framework.Graphics.Drawable.UnbindAllBindables"/> method is called.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.scheduler_acquisition_lock">
            <summary>
            A lock exclusively used for initial acquisition/construction of the <see cref="P:osu.Framework.Graphics.Drawable.Scheduler"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Scheduler">
            <summary>
            A lazily-initialized scheduler used to schedule tasks to be invoked in future <see cref="M:osu.Framework.Graphics.Drawable.Update"/>s calls.
            The tasks are invoked at the beginning of the <see cref="M:osu.Framework.Graphics.Drawable.Update"/> method before anything else.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.UpdateSubTree">
            <summary>
            Updates this Drawable and all Drawables further down the scene graph.
            Called once every frame.
            </summary>
            <returns>False if the drawable should not be updated.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ComputeMaskingBounds">
            <summary>
            Computes the masking bounds of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <returns>The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> that defines the masking bounds.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.UpdateSubTreeMasking">
            <summary>
            Updates all masking calculations for this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            This occurs post-<see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/> to ensure that all <see cref="T:osu.Framework.Graphics.Drawable"/> updates have taken place.
            </summary>
            <returns>Whether masking calculations have taken place.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ComputeIsMaskedAway(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Computes whether this <see cref="T:osu.Framework.Graphics.Drawable"/> is masked away.
            </summary>
            <param name="maskingBounds">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> that defines the masking bounds.</param>
            <returns>Whether this <see cref="T:osu.Framework.Graphics.Drawable"/> is currently masked away.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Update">
            <summary>
            Performs a once-per-frame update specific to this Drawable. A more elegant alternative to
            <see cref="E:osu.Framework.Graphics.Drawable.OnUpdate"/> when deriving from <see cref="T:osu.Framework.Graphics.Drawable"/>. Note, that this
            method is always called before Drawables further down the scene graph are updated.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Position">
            <summary>
            Positional offset of <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> to <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/> in the
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system. May be in absolute or relative units
            (controlled by <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/>).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.X">
            <summary>
            X component of <see cref="P:osu.Framework.Graphics.Drawable.Position"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Y">
            <summary>
            Y component of <see cref="P:osu.Framework.Graphics.Drawable.Position"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RelativePositionAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> of <see cref="P:osu.Framework.Graphics.Drawable.Position"/> are relative w.r.t.
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s size (from 0 to 1) rather than absolute.
            The <see cref="T:osu.Framework.Graphics.Axes"/> set in this property are ignored by automatically sizing
            parents.
            </summary>
            <remarks>
            When setting this property, the <see cref="P:osu.Framework.Graphics.Drawable.Position"/> is converted such that
            <see cref="P:osu.Framework.Graphics.Drawable.DrawPosition"/> remains invariant.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawPosition">
            <summary>
            Absolute positional offset of <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> to <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/>
            in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Size">
            <summary>
            Size of this Drawable in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system.
            May be in absolute or relative units (controlled by <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/>).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Width">
            <summary>
            X component of <see cref="P:osu.Framework.Graphics.Drawable.Size"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Height">
            <summary>
            Y component of <see cref="P:osu.Framework.Graphics.Drawable.Size"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are relative sizes w.r.t. <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s size
            (from 0 to 1) in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system, rather than absolute sizes.
            The <see cref="T:osu.Framework.Graphics.Axes"/> set in this property are ignored by automatically sizing
            parents.
            </summary>
            <remarks>
            If an axis becomes relatively sized and its component of <see cref="P:osu.Framework.Graphics.Drawable.Size"/> was previously 0,
            then it automatically becomes 1. In all other cases <see cref="P:osu.Framework.Graphics.Drawable.Size"/> is converted such that
            <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> remains invariant across changes of this property.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawSize">
            <summary>
            Absolute size of this Drawable in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawWidth">
            <summary>
            X component of <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawHeight">
            <summary>
            Y component of <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Margin">
            <summary>
            Size of an empty region around this Drawable used to manipulate
            layout. Does not affect <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> or the region of accepted input,
            but does affect <see cref="P:osu.Framework.Graphics.Drawable.LayoutSize"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LayoutSize">
            <summary>
            Absolute size of this Drawable's layout rectangle in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s
            coordinate system; i.e. <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> with the addition of <see cref="P:osu.Framework.Graphics.Drawable.Margin"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawRectangle">
            <summary>
            Absolutely sized rectangle for drawing in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system.
            Based on <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LayoutRectangle">
            <summary>
            Absolutely sized rectangle for layout in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s coordinate system.
            Based on <see cref="P:osu.Framework.Graphics.Drawable.LayoutSize"/> and <see cref="F:osu.Framework.Graphics.Drawable.margin"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ApplyRelativeAxes(osu.Framework.Graphics.Axes,osuTK.Vector2,osu.Framework.Graphics.FillMode)">
            <summary>
            Helper function for converting potentially relative coordinates in the
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s space to absolute coordinates based on which
            axes are relative. <see cref="T:osu.Framework.Graphics.Axes"/>
            </summary>
            <param name="relativeAxes">Describes which axes are relative.</param>
            <param name="v">The coordinates to convert.</param>
            <param name="fillMode">The <see cref="P:osu.Framework.Graphics.Drawable.FillMode"/> to be used.</param>
            <returns>Absolute coordinates in <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s space.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.relativeToAbsoluteFactor">
            <summary>
            Conversion factor from relative to absolute coordinates in the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s space.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.BypassAutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are ignored by parent <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> automatic sizing.
            Most notably, <see cref="P:osu.Framework.Graphics.Drawable.RelativePositionAxes"/> and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> do not affect
            automatic sizing to avoid circular size dependencies.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.BoundingBox">
            <summary>
            Computes the bounding box of this drawable in its parent's space.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnSizingChanged">
            <summary>
            Called whenever the <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> of this drawable is changed, or when the <see cref="P:osu.Framework.Graphics.Containers.Container`1.AutoSizeAxes"/> are changed if this drawable is a <see cref="T:osu.Framework.Graphics.Containers.Container`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Scale">
            <summary>
            Base relative scaling factor around <see cref="P:osu.Framework.Graphics.Drawable.OriginPosition"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.FillAspectRatio">
            <summary>
            The desired ratio of width to height when under the effect of a non-stretching <see cref="P:osu.Framework.Graphics.Drawable.FillMode"/>
            and <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> being <see cref="F:osu.Framework.Graphics.Axes.Both"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.FillMode">
            <summary>
            Controls the behavior of <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> when it is set to <see cref="F:osu.Framework.Graphics.Axes.Both"/>.
            Otherwise, this member has no effect. By default, stretching is used, which simply scales
            this drawable's <see cref="P:osu.Framework.Graphics.Drawable.Size"/> according to <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.RelativeToAbsoluteFactor"/>
            disregarding this drawable's <see cref="P:osu.Framework.Graphics.Drawable.FillAspectRatio"/>. Other values of <see cref="P:osu.Framework.Graphics.Drawable.FillMode"/> preserve <see cref="P:osu.Framework.Graphics.Drawable.FillAspectRatio"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawScale">
            <summary>
            Relative scaling factor around <see cref="P:osu.Framework.Graphics.Drawable.OriginPosition"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Shear">
            <summary>
            Relative shearing factor. The X dimension is relative w.r.t. <see cref="P:osu.Framework.Graphics.Drawable.Height"/>
            and the Y dimension relative w.r.t. <see cref="P:osu.Framework.Graphics.Drawable.Width"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Rotation">
            <summary>
            Rotation in degrees around <see cref="P:osu.Framework.Graphics.Drawable.OriginPosition"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Origin">
            <summary>
            The origin of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If the provided value does not exist in the <see cref="T:osu.Framework.Graphics.Anchor"/> enumeration.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RelativeOriginPosition">
            <summary>
            The origin of this <see cref="T:osu.Framework.Graphics.Drawable"/> expressed in relative coordinates from the top-left corner of <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">If <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> is <see cref="F:osu.Framework.Graphics.Anchor.Custom"/>.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.OriginPosition">
            <summary>
            The origin of this <see cref="T:osu.Framework.Graphics.Drawable"/> expressed in absolute coordinates from the top-left corner of <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If the provided value is not finite.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Anchor">
            <summary>
            Specifies where <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> is attached to the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>
            in the coordinate system with origin at the top left corner of the
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>.
            Can either be one of 9 relative positions (0, 0.5, and 1 in x and y)
            or a fixed absolute position via <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition">
            <summary>
            Specifies in relative coordinates where <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> is attached
            to the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> in the coordinate system with origin at the top
            left corner of the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>, and
            a value of <see cref="F:osuTK.Vector2.One"/> referring to the bottom right corner of
            the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.AnchorPosition">
            <summary>
            Specifies in absolute coordinates where <see cref="P:osu.Framework.Graphics.Drawable.Origin"/> is attached
            to the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> in the coordinate system with origin at the top
            left corner of the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Drawable.DrawRectangle"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.computeAnchorPosition(osuTK.Vector2,osu.Framework.Graphics.Anchor)">
            <summary>
            Helper function to compute an absolute position given an absolute size and
            a relative <see cref="T:osu.Framework.Graphics.Anchor"/>.
            </summary>
            <param name="size">Absolute size</param>
            <param name="anchor">Relative <see cref="T:osu.Framework.Graphics.Anchor"/></param>
            <returns>Absolute position</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Colour">
            <summary>
            Colour of this <see cref="T:osu.Framework.Graphics.Drawable"/> in sRGB space. Can contain individual colours for all four
            corners of this <see cref="T:osu.Framework.Graphics.Drawable"/>, which are then interpolated, but can also be assigned
            just a single colour. Implicit casts from <see cref="T:osu.Framework.Graphics.Colour.SRGBColour"/> and from <see cref="T:osuTK.Graphics.Color4"/> exist.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Alpha">
            <summary>
            Multiplicative alpha factor applied on top of <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/> and its existing
            alpha channel(s).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsPresent">
            <summary>
            Determines whether this Drawable is present based on its <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> value.
            Can be forced always on with <see cref="P:osu.Framework.Graphics.Drawable.AlwaysPresent"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.AlwaysPresent">
            <summary>
            If true, forces <see cref="P:osu.Framework.Graphics.Drawable.IsPresent"/> to always be true. In other words,
            this drawable is always considered for layout, input, and drawing, regardless
            of alpha value.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Blending">
            <summary>
            Determines how this Drawable is blended with other already drawn Drawables.
            Inherits the <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s <see cref="P:osu.Framework.Graphics.Drawable.Blending"/> by default.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Clock">
            <summary>
            The clock of this drawable. Used for keeping track of time across
            frames. By default is inherited from <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>.
            If set, then the provided value is used as a custom clock and the
            <see cref="P:osu.Framework.Graphics.Drawable.Parent"/>'s clock is ignored.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.UpdateClock(osu.Framework.Timing.IFrameBasedClock)">
            <summary>
            Updates the clock to be used. Has no effect if this drawable
            uses a custom clock.
            </summary>
            <param name="clock">The new clock to be used.</param>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.ProcessCustomClock">
            <summary>
            Whether <see cref="M:osu.Framework.Timing.IFrameBasedClock.ProcessFrame"/> should be automatically invoked on this <see cref="T:osu.Framework.Graphics.Drawable"/>'s <see cref="P:osu.Framework.Graphics.Drawable.Clock"/>
            in <see cref="M:osu.Framework.Graphics.Drawable.UpdateSubTree"/>. This should only be set to false in scenarios where the clock is updated elsewhere.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Drawable.LifetimeChanged">
            <summary>
            Invoked after <see cref="F:osu.Framework.Graphics.Drawable.lifetimeStart"/> or <see cref="P:osu.Framework.Graphics.Drawable.LifetimeEnd"/> has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LifetimeStart">
            <summary>
            The time at which this drawable becomes valid (and is considered for drawing).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.LifetimeEnd">
            <summary>
            The time at which this drawable is no longer valid (and is considered for disposal).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.ShouldBeAlive">
            <summary>
            Whether this drawable should currently be alive.
            This is queried by the framework to decide the <see cref="P:osu.Framework.Graphics.Drawable.IsAlive"/> state of this drawable for the next frame.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RemoveWhenNotAlive">
            <summary>
            Whether to remove the drawable from its parent's children when it's not alive.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.GetContainingInputManager">
            <summary>
            Retrieve the first parent in the tree which derives from <see cref="T:osu.Framework.Input.InputManager"/>.
            As this is performing an upward tree traversal, avoid calling every frame.
            </summary>
            <returns>The first parent <see cref="T:osu.Framework.Input.InputManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.GetContainingFocusManager">
            <summary>
            Retrieve the first parent in the tree which implements <see cref="T:osu.Framework.Input.IFocusManager"/>.
            As this is performing an upward tree traversal, avoid calling every frame.
            </summary>
            <returns>The first parent <see cref="T:osu.Framework.Input.IFocusManager"/>.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Parent">
            <summary>
            The parent of this drawable in the scene graph.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.Original">
            <summary>
            Refers to the original if this drawable was created via
            <see cref="M:osu.Framework.Graphics.Drawable.CreateProxy"/>. Otherwise refers to this.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.HasProxy">
            <summary>
            True iff <see cref="M:osu.Framework.Graphics.Drawable.CreateProxy"/> has been called before.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsProxy">
            <summary>
            True iff this <see cref="T:osu.Framework.Graphics.Drawable"/> is not a proxy of any <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.CreateProxy">
            <summary>
            Creates a proxy drawable which can be inserted elsewhere in the scene graph.
            Will cause the original instance to not render itself.
            Creating multiple proxies is not supported and will result in an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ValidateProxyDrawNode(System.Int32,System.UInt64)">
            <summary>
            Validates a <see cref="T:osu.Framework.Graphics.DrawNode"/> for use by the proxy of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            This is used exclusively by <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.addFromComposite(System.UInt64,System.Int32,System.Boolean,System.Int32@,osu.Framework.Graphics.Containers.CompositeDrawable,System.Collections.Generic.List{osu.Framework.Graphics.DrawNode})"/>, and should not be used otherwise.
            </summary>
            <param name="treeIndex">The index of the <see cref="T:osu.Framework.Graphics.DrawNode"/> in <see cref="F:osu.Framework.Graphics.Drawable.drawNodes"/> which the proxy should use.</param>
            <param name="frame">The frame for which the <see cref="T:osu.Framework.Graphics.DrawNode"/> was created. This is the parameter used for validation.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsMaskedAway">
            <summary>
            Was this Drawable masked away completely during the last frame?
            This is measured conservatively, i.e. it is only true when the Drawable was
            actually masked away, but it may be false, even if the Drawable was masked away.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.ScreenSpaceDrawQuad">
            <summary>
            The screen-space quad this drawable occupies.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawInfo">
            <summary>
            Contains the linear transformation of this <see cref="T:osu.Framework.Graphics.Drawable"/> that is used during draw.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DrawColourInfo">
            <summary>
            Contains the colour and blending information of this <see cref="T:osu.Framework.Graphics.Drawable"/> that are used during draw.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RequiredParentSizeToFit">
            <summary>
            Returns the size of the smallest axis aligned box in parent space which
            encompasses this drawable while preserving this drawable's
            <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/>.
            If a component of <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/> is smaller than zero
            or larger than one, then it is impossible to preserve <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/>
            while fitting into the parent, and thus <see cref="P:osu.Framework.Graphics.Drawable.RelativeAnchorPosition"/> returns
            zero in that dimension; i.e. we no longer fit into the parent.
            This behavior is prominent with non-centre and non-custom <see cref="P:osu.Framework.Graphics.Drawable.Anchor"/> values.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.invalidationList">
            <summary>
            The flags which this <see cref="T:osu.Framework.Graphics.Drawable"/> has been invalidated with, grouped by <see cref="T:osu.Framework.Layout.InvalidationSource"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.layoutList">
            <summary>
            Represents the most-recently added <see cref="T:osu.Framework.Layout.LayoutMember"/> (via <see cref="M:osu.Framework.Graphics.Drawable.AddLayout(osu.Framework.Layout.LayoutMember)"/>).
            It is also used as a linked-list during invalidation by traversing through <see cref="F:osu.Framework.Layout.LayoutMember.Next"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.AddLayout(osu.Framework.Layout.LayoutMember)">
            <summary>
            Adds a layout member that will be invalidated when its <see cref="F:osu.Framework.Layout.LayoutMember.Invalidation"/> is invalidated.
            </summary>
            <param name="member">The layout member to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ValidateSuperTree(osu.Framework.Graphics.Invalidation)">
            <summary>
            Validates the super-tree of this <see cref="T:osu.Framework.Graphics.Drawable"/> for the given <see cref="T:osu.Framework.Graphics.Invalidation"/> flags.
            </summary>
            <remarks>
            This is internally invoked by <see cref="T:osu.Framework.Layout.LayoutMember"/>, and should not be invoked manually.
            </remarks>
            <param name="validationType">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags to validate with.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Invalidate(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource)">
            <summary>
            Invalidates the layout of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="invalidation">The flags to invalidate with.</param>
            <param name="source">The source that triggered the invalidation.</param>
            <returns>If any layout was invalidated.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.invalidate(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource,System.Boolean)">
            <summary>
            Invalidates the layout of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="invalidation">The flags to invalidate with.</param>
            <param name="source">The source that triggered the invalidation.</param>
            <param name="propagateToParent">Whether to propagate the invalidation to the parent of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            Only has an effect if <paramref name="source"/> is <see cref="F:osu.Framework.Layout.InvalidationSource.Self"/>.</param>
            <returns>If any layout was invalidated.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnInvalidate(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource)">
            <summary>
            Invoked when the layout of this <see cref="T:osu.Framework.Graphics.Drawable"/> was invalidated.
            </summary>
            <remarks>
            This should be used to perform any custom invalidation logic that cannot be described as a layout.
            </remarks>
            <remarks>
            This does not ensure that the parent containers have been updated before us, thus operations involving
            parent states (e.g. <see cref="P:osu.Framework.Graphics.Drawable.DrawInfo"/>) should not be executed in an overridden implementation.
            </remarks>
            <param name="invalidation">The flags that the this <see cref="T:osu.Framework.Graphics.Drawable"/> was invalidated with.</param>
            <param name="source">The source that triggered the invalidation.</param>
            <returns>Whether any custom invalidation was performed. Must be true if the <see cref="T:osu.Framework.Graphics.DrawNode"/> for this <see cref="T:osu.Framework.Graphics.Drawable"/> is to be invalidated.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.invalidateParentSizeDependencies(osu.Framework.Graphics.Invalidation,osu.Framework.Graphics.Axes)">
            <summary>
            A fast path for invalidating ourselves and our parent's children size dependencies whenever a size or position change occurs.
            </summary>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> to invalidate with.</param>
            <param name="changedAxes">The <see cref="T:osu.Framework.Graphics.Axes"/> that were affected.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.GenerateDrawNodeSubtree(System.UInt64,System.Int32,System.Boolean)">
            <summary>
            Generates the <see cref="T:osu.Framework.Graphics.DrawNode"/> for ourselves.
            </summary>
            <param name="frame">The frame which the <see cref="T:osu.Framework.Graphics.DrawNode"/> sub-tree should be generated for.</param>
            <param name="treeIndex">The index of the <see cref="T:osu.Framework.Graphics.DrawNode"/> to use.</param>
            <param name="forceNewDrawNode">Whether the creation of a new <see cref="T:osu.Framework.Graphics.DrawNode"/> should be forced, rather than re-using an existing <see cref="T:osu.Framework.Graphics.DrawNode"/>.</param>
            <returns>A complete and updated <see cref="T:osu.Framework.Graphics.DrawNode"/>, or null if the <see cref="T:osu.Framework.Graphics.DrawNode"/> would be invisible.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.CreateDrawNode">
            <summary>
            Creates a draw node capable of containing all information required to draw this drawable.
            </summary>
            <returns>The created draw node.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToSpaceOfOtherDrawable(osuTK.Vector2,osu.Framework.Graphics.IDrawable)">
            <summary>
            Accepts a vector in local coordinates and converts it to coordinates in another Drawable's space.
            </summary>
            <param name="input">A vector in local coordinates.</param>
            <param name="other">The drawable in which space we want to transform the vector to.</param>
            <returns>The vector in other's coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToSpaceOfOtherDrawable(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.IDrawable)">
            <summary>
            Accepts a rectangle in local coordinates and converts it to coordinates in another Drawable's space.
            </summary>
            <param name="input">A rectangle in local coordinates.</param>
            <param name="other">The drawable in which space we want to transform the rectangle to.</param>
            <returns>The rectangle in other's coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToParentSpace(osuTK.Vector2)">
            <summary>
            Accepts a vector in local coordinates and converts it to coordinates in Parent's space.
            </summary>
            <param name="input">A vector in local coordinates.</param>
            <returns>The vector in Parent's coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToParentSpace(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Accepts a rectangle in local coordinates and converts it to a quad in Parent's space.
            </summary>
            <param name="input">A rectangle in local coordinates.</param>
            <returns>The quad in Parent's coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToScreenSpace(osuTK.Vector2)">
            <summary>
            Accepts a vector in local coordinates and converts it to coordinates in screen space.
            </summary>
            <param name="input">A vector in local coordinates.</param>
            <returns>The vector in screen coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToScreenSpace(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Accepts a rectangle in local coordinates and converts it to a quad in screen space.
            </summary>
            <param name="input">A rectangle in local coordinates.</param>
            <returns>The quad in screen coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToLocalSpace(osuTK.Vector2)">
            <summary>
            Accepts a vector in screen coordinates and converts it to coordinates in local space.
            </summary>
            <param name="screenSpacePos">A vector in screen coordinates.</param>
            <returns>The vector in local coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ToLocalSpace(osu.Framework.Graphics.Primitives.Quad)">
            <summary>
            Accepts a quad in screen coordinates and converts it to coordinates in local space.
            </summary>
            <param name="screenSpaceQuad">A quad in screen coordinates.</param>
            <returns>The quad in local coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Handle(osu.Framework.Input.Events.UIEvent)">
            <summary>
            Handle a UI event.
            </summary>
            <param name="e">The event to be handled.</param>
            <returns>If the event supports blocking, returning true will make the event to not propagating further.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.TriggerEvent(osu.Framework.Input.Events.UIEvent)">
            <summary>
            Trigger a UI event with <see cref="F:osu.Framework.Input.Events.UIEvent.Target"/> set to this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The event. Its <see cref="F:osu.Framework.Input.Events.UIEvent.Target"/> will be modified.</param>
            <returns>The result of event handler.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.TriggerClick">
            <summary>
            Triggers a left click event for this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <returns>Whether the click event is handled.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnMouseMove(osu.Framework.Input.Events.MouseMoveEvent)">
            <summary>
            An event that occurs every time the mouse is moved while hovering this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.MouseMoveEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)">
            <summary>
            An event that occurs when the mouse starts hovering this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.HoverEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnHoverLost(osu.Framework.Input.Events.HoverLostEvent)">
            <summary>
            An event that occurs when the mouse stops hovering this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.HoverLostEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnMouseDown(osu.Framework.Input.Events.MouseDownEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.MouseButton"/> is pressed on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.MouseDownEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnMouseUp(osu.Framework.Input.Events.MouseUpEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.MouseButton"/> that was pressed on this <see cref="T:osu.Framework.Graphics.Drawable"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnMouseDown(osu.Framework.Input.Events.MouseDownEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.MouseUpEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.MouseButton"/> is clicked on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/>s that received a previous <see cref="M:osu.Framework.Graphics.Drawable.OnMouseDown(osu.Framework.Input.Events.MouseDownEvent)"/> invocation
            which are still present in the input queue (via <see cref="M:osu.Framework.Graphics.Drawable.BuildPositionalInputQueue(osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Graphics.Drawable})"/>) when the click occurs.<br />
            This will not occur if a drag was started (<see cref="M:osu.Framework.Graphics.Drawable.OnDragStart(osu.Framework.Input.Events.DragStartEvent)"/> was invoked) or a double-click occurred (<see cref="M:osu.Framework.Graphics.Drawable.OnDoubleClick(osu.Framework.Input.Events.DoubleClickEvent)"/> was invoked).
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.ClickEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnDoubleClick(osu.Framework.Input.Events.DoubleClickEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.MouseButton"/> is double-clicked on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/> that returned <code>true</code> from a previous <see cref="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)"/> invocation.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.DoubleClickEvent"/> containing information about the input event.</param>
            <returns>Whether to block the next <see cref="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)"/> event from occurring.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnDragStart(osu.Framework.Input.Events.DragStartEvent)">
            <summary>
            An event that occurs when the mouse starts dragging on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.DragEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnDrag(osu.Framework.Input.Events.DragEvent)">
            <summary>
            An event that occurs every time the mouse moves while dragging this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/> that returned <code>true</code> from a previous <see cref="M:osu.Framework.Graphics.Drawable.OnDragStart(osu.Framework.Input.Events.DragStartEvent)"/> invocation.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.DragEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnDragEnd(osu.Framework.Input.Events.DragEndEvent)">
            <summary>
            An event that occurs when the mouse stops dragging this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/> that returned <code>true</code> from a previous <see cref="M:osu.Framework.Graphics.Drawable.OnDragStart(osu.Framework.Input.Events.DragStartEvent)"/> invocation.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.DragEndEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnScroll(osu.Framework.Input.Events.ScrollEvent)">
            <summary>
            An event that occurs when the mouse wheel is scrolled on this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.ScrollEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnFocus(osu.Framework.Input.Events.FocusEvent)">
            <summary>
            An event that occurs when this <see cref="T:osu.Framework.Graphics.Drawable"/> gains focus.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/> that returned <code>true</code> from both <see cref="P:osu.Framework.Graphics.Drawable.AcceptsFocus"/> and a previous <see cref="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)"/> invocation.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.FocusEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnFocusLost(osu.Framework.Input.Events.FocusLostEvent)">
            <summary>
            An event that occurs when this <see cref="T:osu.Framework.Graphics.Drawable"/> loses focus.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/> that previously had focus (<see cref="M:osu.Framework.Graphics.Drawable.OnFocus(osu.Framework.Input.Events.FocusEvent)"/> was invoked).
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.FocusLostEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.Key"/> is pressed.
            </summary>
            <remarks>
            Repeat events can only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/>s that received a previous non-repeat <see cref="M:osu.Framework.Graphics.Drawable.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)"/> invocation
            which are still present in the input queue (via <see cref="M:osu.Framework.Graphics.Drawable.BuildNonPositionalInputQueue(System.Collections.Generic.List{osu.Framework.Graphics.Drawable},System.Boolean)"/>) when the repeat occurs.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.KeyDownEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnKeyUp(osu.Framework.Input.Events.KeyUpEvent)">
            <summary>
            An event that occurs when a <see cref="T:osuTK.Input.Key"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.KeyUpEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTouchDown(osu.Framework.Input.Events.TouchDownEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.Touch"/> is active.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TouchDownEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTouchMove(osu.Framework.Input.Events.TouchMoveEvent)">
            <summary>
            An event that occurs every time an active <see cref="T:osu.Framework.Input.Touch"/> has moved while hovering this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <remarks>
            This will only be invoked on the <see cref="T:osu.Framework.Graphics.Drawable"/>s that received a previous <see cref="M:osu.Framework.Graphics.Drawable.OnTouchDown(osu.Framework.Input.Events.TouchDownEvent)"/> invocation from the source of this touch.
            This will not occur if the touch has been activated then deactivated without moving from its initial position.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TouchMoveEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTouchUp(osu.Framework.Input.Events.TouchUpEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.Touch"/> is not active.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnTouchDown(osu.Framework.Input.Events.TouchDownEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TouchUpEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnJoystickPress(osu.Framework.Input.Events.JoystickPressEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.JoystickButton"/> is pressed.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.JoystickPressEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnJoystickRelease(osu.Framework.Input.Events.JoystickReleaseEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.JoystickButton"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnJoystickPress(osu.Framework.Input.Events.JoystickPressEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.JoystickReleaseEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnJoystickAxisMove(osu.Framework.Input.Events.JoystickAxisMoveEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.JoystickAxis"/> is moved.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.JoystickAxisMoveEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnMidiDown(osu.Framework.Input.Events.MidiDownEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.MidiKey"/> is pressed.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.MidiDownEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnMidiUp(osu.Framework.Input.Events.MidiUpEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.MidiKey"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="T:osu.Framework.Input.Events.MidiDownEvent"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.MidiUpEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTabletPenButtonPress(osu.Framework.Input.Events.TabletPenButtonPressEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.TabletPenButton"/> is pressed.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TabletPenButtonPressEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTabletPenButtonRelease(osu.Framework.Input.Events.TabletPenButtonReleaseEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.TabletPenButton"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnTabletPenButtonPress(osu.Framework.Input.Events.TabletPenButtonPressEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TabletPenButtonReleaseEvent"/> containing information about the input event.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTabletAuxiliaryButtonPress(osu.Framework.Input.Events.TabletAuxiliaryButtonPressEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.TabletAuxiliaryButton"/> is pressed.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TabletAuxiliaryButtonPressEvent"/> containing information about the input event.</param>
            <returns>Whether to block the event from propagating to other <see cref="T:osu.Framework.Graphics.Drawable"/>s in the hierarchy.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.OnTabletAuxiliaryButtonRelease(osu.Framework.Input.Events.TabletAuxiliaryButtonReleaseEvent)">
            <summary>
            An event that occurs when a <see cref="T:osu.Framework.Input.TabletAuxiliaryButton"/> is released.
            </summary>
            <remarks>
            This is guaranteed to be invoked if <see cref="M:osu.Framework.Graphics.Drawable.OnTabletAuxiliaryButtonPress(osu.Framework.Input.Events.TabletAuxiliaryButtonPressEvent)"/> was invoked.
            </remarks>
            <param name="e">The <see cref="T:osu.Framework.Input.Events.TabletAuxiliaryButtonReleaseEvent"/> containing information about the input event.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RequestsNonPositionalInput">
            <summary>
            Whether this drawable should receive non-positional input. This does not mean that the drawable will immediately handle the received input, but that it may handle it at some point.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RequestsPositionalInput">
            <summary>
            Whether this drawable should receive positional input. This does not mean that the drawable will immediately handle the received input, but that it may handle it at some point.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.RequestsNonPositionalInputSubTree">
            <summary>
            Conservatively approximates whether there is a descendant which <see cref="P:osu.Framework.Graphics.Drawable.RequestsNonPositionalInput"/> in the sub-tree rooted at this drawable
            to enable sub-tree skipping optimization for input handling.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.RequestsPositionalInputSubTree">
            <summary>
            Conservatively approximates whether there is a descendant which <see cref="P:osu.Framework.Graphics.Drawable.RequestsPositionalInput"/> in the sub-tree rooted at this drawable
            to enable sub-tree skipping optimization for input handling.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.HandleNonPositionalInput">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Drawable"/> handles non-positional input.
            This value is true by default if <see cref="M:osu.Framework.Graphics.Drawable.Handle(osu.Framework.Input.Events.UIEvent)"/> or any non-positional (e.g. keyboard related) "On-" input methods are overridden.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.HandlePositionalInput">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Drawable"/> handles positional input.
            This value is true by default if <see cref="M:osu.Framework.Graphics.Drawable.Handle(osu.Framework.Input.Events.UIEvent)"/> or any positional (i.e. mouse related) "On-" input methods are overridden.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.HasFocus">
            <summary>
            Check whether we have active focus.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.RequestsFocus">
            <summary>
            If true, we are eagerly requesting focus. If nothing else above us has (or is requesting focus) we will get it.
            </summary>
            <remarks>In order to get focused, <see cref="P:osu.Framework.Graphics.Drawable.HandleNonPositionalInput"/> must be true.</remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.AcceptsFocus">
            <summary>
            If true, we will gain focus (receiving priority on keyboard input) (and receive an <see cref="M:osu.Framework.Graphics.Drawable.OnFocus(osu.Framework.Input.Events.FocusEvent)"/> event) on returning true in <see cref="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.ChangeFocusOnClick">
            <summary>
            If true, returning true in <see cref="M:osu.Framework.Graphics.Drawable.OnClick(osu.Framework.Input.Events.ClickEvent)"/> causes the current focus target to be unfocused.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsHovered">
            <summary>
            Whether this Drawable is currently hovered over.
            </summary>
            <remarks>This is updated only if <see cref="P:osu.Framework.Graphics.Drawable.HandlePositionalInput"/> is true.</remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.IsDragged">
            <summary>
            Whether this Drawable is currently being dragged.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.ReceivePositionalInputAt(osuTK.Vector2)">
            <summary>
            Determines whether this drawable receives positional input when the mouse is at the
            given screen-space position.
            </summary>
            <param name="screenSpacePos">The screen-space position where input could be received.</param>
            <returns>True if input is received at the given screen-space position.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Contains(osuTK.Vector2)">
            <summary>
            Computes whether a given screen-space position is contained within this drawable.
            Mouse input events are only received when this function is true, or when the drawable
            is in focus.
            </summary>
            <param name="screenSpacePos">The screen space position to be checked against this drawable.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.PropagateNonPositionalInputSubTree">
            <summary>
            Whether non-positional input should be propagated to the sub-tree rooted at this drawable.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.PropagatePositionalInputSubTree">
            <summary>
            Whether positional input should be propagated to the sub-tree rooted at this drawable.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Drawable.DragBlocksClick">
            <summary>
            Whether clicks should be blocked when this drawable is in a dragged state.
            </summary>
            <remarks>
            This is queried when a click is to be actuated.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.BuildNonPositionalInputQueue(System.Collections.Generic.List{osu.Framework.Graphics.Drawable},System.Boolean)">
            <summary>
            This method is responsible for building a queue of Drawables to receive non-positional input in reverse order.
            </summary>
            <param name="queue">The input queue to be built.</param>
            <param name="allowBlocking">Whether blocking at <see cref="T:osu.Framework.Input.PassThroughInputManager"/>s should be allowed.</param>
            <returns>Returns false if we should skip this sub-tree.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.BuildPositionalInputQueue(osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Graphics.Drawable})">
            <summary>
            This method is responsible for building a queue of Drawables to receive positional input in reverse order.
            </summary>
            <param name="screenSpacePos">The screen space position of the positional input.</param>
            <param name="queue">The input queue to be built.</param>
            <returns>Returns false if we should skip this sub-tree.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.EnsureMutationAllowed(System.String)">
            <summary>
            Check whether the current thread is valid for operating on thread-safe properties.
            </summary>
            <param name="action">The action to be performed, used only for describing failures in exception messages.</param>
            <exception cref="T:osu.Framework.Graphics.Drawable.InvalidThreadForMutationException">If the current thread is not valid.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Expire(System.Boolean)">
            <summary>
            Make this drawable automatically clean itself up after all transforms have finished playing.
            Can be delayed using Delay().
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Hide">
            <summary>
            Hide sprite instantly.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Show">
            <summary>
            Show sprite instantly.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.WithEffect``1(osu.Framework.Graphics.Effects.IEffect{``0},System.Action{``0})">
            <summary>
            Returns the drawable created by applying the given effect to this drawable. This method may add this drawable to a container.
            If this drawable should be the child of another container, make sure to add the created drawable to the container instead of this drawable.
            </summary>
            <typeparam name="T">The type of the drawable that results from applying the given effect.</typeparam>
            <param name="effect">The effect to apply to this drawable.</param>
            <param name="initializationAction">The action that should get called to initialize the created drawable before it is returned.</param>
            <returns>The drawable created by applying the given effect to this drawable.</returns>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.Name">
            <summary>
            A name used to identify this Drawable internally.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Drawable.Empty">
            <summary>
            Creates a new instance of an empty <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Drawable.HandleInputCache">
            <summary>
            Nested class which is used for caching <see cref="P:osu.Framework.Graphics.Drawable.HandleNonPositionalInput"/>, <see cref="P:osu.Framework.Graphics.Drawable.HandlePositionalInput"/> values.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.ProxyDrawable.ProxyDrawNode.DrawNodeIndex">
            <summary>
            The index of the original draw node to draw.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Drawable.ProxyDrawable.ProxyDrawNode.FrameCount">
            <summary>
            The current draw frame index.
            If this differs from the frame index of the original draw node, the original drawable will have not been drawn this frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Invalidation">
            <summary>
            Specifies which type of properties are being invalidated.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.DrawInfo">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.DrawInfo"/> has changed. No change to <see cref="P:osu.Framework.Graphics.Drawable.RequiredParentSizeToFit"/> or <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/>
            is assumed unless indicated by additional flags.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.DrawSize">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> has changed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.MiscGeometry">
            <summary>
            Captures all other geometry changes than <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/>, such as
            <see cref="P:osu.Framework.Graphics.Drawable.Rotation"/>, <see cref="P:osu.Framework.Graphics.Drawable.Shear"/>, and <see cref="P:osu.Framework.Graphics.Drawable.DrawPosition"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.Colour">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> has changed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.DrawNode">
            <summary>
            <see cref="M:osu.Framework.Graphics.DrawNode.ApplyState"/> has to be invoked on all old draw nodes.
            This <see cref="T:osu.Framework.Graphics.Invalidation"/> flag never propagates to children.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.Presence">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.IsPresent"/> has changed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.Parent">
            <summary>
            A <see cref="P:osu.Framework.Graphics.Drawable.Parent"/> has changed.
            Unlike other <see cref="T:osu.Framework.Graphics.Invalidation"/> flags, this propagates to all children regardless of their <see cref="P:osu.Framework.Graphics.Drawable.IsAlive"/> state.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.None">
            <summary>
            No invalidation.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.RequiredParentSizeToFit">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.RequiredParentSizeToFit"/> has to be recomputed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.All">
            <summary>
            All possible things are affected.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Invalidation.Layout">
            <summary>
            Only the layout flags.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Anchor">
            <summary>
            General enum to specify an "anchor" or "origin" point from the standard 9 points on a rectangle.
            x and y counterparts can be accessed using bitwise flags.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.y0">
            <summary>
            The vertical counterpart is at "Top" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.y1">
            <summary>
            The vertical counterpart is at "Centre" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.y2">
            <summary>
            The vertical counterpart is at "Bottom" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.x0">
            <summary>
            The horizontal counterpart is at "Left" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.x1">
            <summary>
            The horizontal counterpart is at "Centre" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.x2">
            <summary>
            The horizontal counterpart is at "Right" position.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Anchor.Custom">
            <summary>
            The user is manually updating the outcome, so we shouldn't.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.LoadState">
            <summary>
            Possible states of a <see cref="T:osu.Framework.Graphics.Drawable"/> within the loading pipeline.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.LoadState.NotLoaded">
            <summary>
            Not loaded, and no load has been initiated yet.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.LoadState.Loading">
            <summary>
            Currently loading (possibly and usually on a background thread via <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.LoadComponentAsync``1(``0,System.Action{``0},System.Threading.CancellationToken,osu.Framework.Threading.Scheduler)"/>).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.LoadState.Ready">
            <summary>
            Loading is complete, but has not yet been finalized on the update thread
            (<see cref="M:osu.Framework.Graphics.Drawable.LoadComplete"/> has not been called yet, which
            always runs on the update thread and requires <see cref="P:osu.Framework.Graphics.Drawable.IsAlive"/>).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.LoadState.Loaded">
            <summary>
            Loading is fully completed and the Drawable is now part of the scene graph.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.FillMode">
            <summary>
            Controls the behavior of <see cref="P:osu.Framework.Graphics.Drawable.RelativeSizeAxes"/> when it is set to <see cref="F:osu.Framework.Graphics.Axes.Both"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.FillMode.Stretch">
            <summary>
            Completely fill the parent with a relative size of 1 at the cost of stretching the aspect ratio (default).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.FillMode.Fill">
            <summary>
            Always maintains aspect ratio while filling the portion of the parent's size denoted by the relative size.
            A relative size of 1 results in completely filling the parent by scaling the smaller axis of the drawable to fill the parent.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.FillMode.Fit">
            <summary>
            Always maintains aspect ratio while fitting into the portion of the parent's size denoted by the relative size.
            A relative size of 1 results in fitting exactly into the parent by scaling the larger axis of the drawable to fit into the parent.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.DrawableExtensions">
            <summary>
            Holds extension methods for <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.DrawableExtensions.With``1(``0,System.Action{``0})">
            <summary>
            Adjusts specified properties of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="drawable">The <see cref="T:osu.Framework.Graphics.Drawable"/> whose properties should be adjusted.</param>
            <param name="adjustment">The adjustment function.</param>
            <returns>The given <see cref="T:osu.Framework.Graphics.Drawable"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.DrawableExtensions.FindClosestParent``1(osu.Framework.Graphics.Drawable)">
            <summary>
            Find the closest parent of a specified type.
            </summary>
            <remarks>
            This can be a potentially expensive operation and should be used with discretion.
            </remarks>
            <typeparam name="T">The type to match.</typeparam>
            <returns>The first matching parent, or null if no parent of type <typeparamref name="T"/> is found.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.DrawableExtensions.IsRootedAt(osu.Framework.Graphics.Drawable,osu.Framework.Graphics.Drawable)">
            <summary>
            Check whether the drawable is rooted at a proposed parent drawable.
            </summary>
            <param name="drawable">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be checked.</param>
            <param name="root">The root to be checked against.</param>
            <returns>Whether the drawable was rooted.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.DrawableExtensions.RemoveAndDisposeImmediately(osu.Framework.Graphics.Drawable)">
             <summary>
             Forces removal of this drawable from its parent, followed by immediate synchronous disposal.
             </summary>
             <remarks>
             This is intended as a temporary solution for the fact that there is no way to easily dispose
             a component in a way that is guaranteed to be synchronously run on the update thread.
            
             Eventually components will have a better method for unloading.
             </remarks>
             <param name="drawable">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be disposed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.DrawInfo.ApplyTransform(osuTK.Vector2,osuTK.Vector2,System.Single,osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Applies a transformation to the current DrawInfo.
            </summary>
            <param name="translation">The amount by which to translate the current position.</param>
            <param name="scale">The amount by which to scale.</param>
            <param name="rotation">The amount by which to rotate.</param>
            <param name="shear">The shear amounts for both directions.</param>
            <param name="origin">The center of rotation and scale.</param>
        </member>
        <member name="T:osu.Framework.Graphics.DrawNode">
            <summary>
            Contains all the information required to draw a single <see cref="T:osu.Framework.Graphics.Drawable"/>.
            A hierarchy of <see cref="T:osu.Framework.Graphics.DrawNode"/>s is passed to the draw thread for rendering every frame.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.DrawInfo">
            <summary>
            Contains the linear transformation of this <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.DrawColourInfo">
            <summary>
            Contains the colour and blending information of this <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.InvalidationID">
            <summary>
            Identifies the state of this draw node with an invalidation state of its corresponding
            <see cref="T:osu.Framework.Graphics.Drawable"/>. An update is required when the invalidation state of this draw node disagrees
            with the invalidation state of its <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.Source">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> which this <see cref="T:osu.Framework.Graphics.DrawNode"/> draws.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.DrawNode.drawDepth">
            <summary>
            The depth at which this <see cref="T:osu.Framework.Graphics.DrawNode"/> is to be drawn.
            Only used if front-to-back is enabled.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.#ctor(osu.Framework.Graphics.IDrawable)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            </summary>
            <param name="source">The <see cref="T:osu.Framework.Graphics.Drawable"/> to draw with this <see cref="T:osu.Framework.Graphics.DrawNode"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.ApplyState">
            <summary>
            Applies the state of <see cref="P:osu.Framework.Graphics.DrawNode.Source"/> to this <see cref="T:osu.Framework.Graphics.DrawNode"/> for use in rendering.
            The applied state must remain immutable.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.Draw(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Draws this <see cref="T:osu.Framework.Graphics.DrawNode"/> to the screen.
            </summary>
            <remarks>
            Subclasses must invoke <code>base.Draw()</code> prior to drawing vertices.
            </remarks>
            <param name="renderer">The renderer to draw with.</param>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.DrawOpaqueInterior(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Draws the opaque interior of this <see cref="T:osu.Framework.Graphics.DrawNode"/> to the screen, if <see cref="P:osu.Framework.Graphics.DrawNode.CanDrawOpaqueInterior"/> indicates that an opaque interior can be drawn.
            The opaque interior must be a fully-opaque, non-blended area of this <see cref="T:osu.Framework.Graphics.DrawNode"/>, clipped to the current masking area via <code>DrawClipped()</code>.
            See <see cref="T:osu.Framework.Graphics.Sprites.SpriteDrawNode"/> for an example implementation.
            </summary>
            <remarks>
            Subclasses must invoke <code>base.DrawOpaqueInterior()</code> prior to drawing vertices.
            </remarks>
            <param name="renderer">The renderer to draw with.</param>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.DrawOtherOpaqueInterior(osu.Framework.Graphics.DrawNode,osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Draws the opaque interior of a <see cref="T:osu.Framework.Graphics.DrawNode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.CanDrawOpaqueInterior">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.DrawNode"/> can draw a opaque interior. <see cref="M:osu.Framework.Graphics.DrawNode.DrawOpaqueInterior(osu.Framework.Graphics.Rendering.IRenderer)"/> will only be invoked if this value is <code>true</code>.
            Should not return <code>true</code> if <see cref="M:osu.Framework.Graphics.DrawNode.DrawOpaqueInterior(osu.Framework.Graphics.Rendering.IRenderer)"/> will result in a no-op.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.DrawNode.HasOwnOpaqueInterior">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.DrawNode"/> has its own opaque interior.
            If <c>false</c>, a child of the <see cref="T:osu.Framework.Graphics.DrawNode"/> may be the source of the opaque interior.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.DrawNode.Reference">
            <summary>
            Increments the reference count of this <see cref="T:osu.Framework.Graphics.DrawNode"/>, blocking <see cref="M:osu.Framework.Graphics.DrawNode.Dispose"/> until the count reaches 0.
            Invoke <see cref="M:osu.Framework.Graphics.DrawNode.Dispose"/> to remove the reference.
            </summary>
            <remarks>
            All <see cref="T:osu.Framework.Graphics.DrawNode"/>s start with a reference count of 1.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Easing">
            <summary>
            See http://easings.net/ for more samples.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.BlurEffect">
            <summary>
            A blur effect that wraps a drawable in a <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer"/> which applies a blur effect to it.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Strength">
            <summary>
            The strength of the blur. Default is 1.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Sigma">
            <summary>
            The sigma of the blur. Default is (2, 2).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Rotation">
            <summary>
            The rotation of the blur. Default is 0.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Colour">
            <summary>
            The colour of the blur. Default is <see cref="P:osuTK.Graphics.Color4.White"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Blending">
            <summary>
            The blending mode of the blur. Default is inheriting from the target drawable.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.Placement">
            <summary>
            Whether to draw the blur in front or behind the original. Default is behind.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.DrawOriginal">
            <summary>
            Whether to draw the original target in addition to its blurred version.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.BlurEffect.PadExtent">
            <summary>
            Whether to automatically pad by the blur extent such that no clipping occurs at the sides of the effect. Default is false.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.EdgeEffect">
            <summary>
            An effect applied around the edge of the target drawable.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffect.Parameters">
            <summary>
            The parameters of the edge effect.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffect.CornerRadius">
            <summary>
            Determines how large a radius is masked away around the corners. Default is 0.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.EdgeEffectParameters">
            <summary>
            Parametrizes the appearance of an edge effect.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Colour">
            <summary>
            Colour of the edge effect.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Offset">
            <summary>
            Positional offset applied to the edge effect.
            Useful for off-center shadows.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Type">
            <summary>
            The type of the edge effect.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Roundness">
            <summary>
            How round the edge effect should appear. Adds to the <see cref="P:osu.Framework.Graphics.Containers.CompositeDrawable.CornerRadius"/>
            of the corresponding <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>. Not to confuse with the <see cref="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Radius"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Radius">
            <summary>
            How "thick" the edge effect is around the <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>. In other words: At what distance
            from the <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>'s border the edge effect becomes fully invisible.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.EdgeEffectParameters.Hollow">
            <summary>
            Whether the inside of the EdgeEffect rectangle should be empty.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.EdgeEffectType">
            <summary>
            Types of edge effects that can be applied to <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>s.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.EffectExtensions">
            <summary>
            This class holds extension methods for effects.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Effects.EffectExtensions.ApplyTo``1(osu.Framework.Graphics.Effects.IEffect{``0},osu.Framework.Graphics.Drawable,System.Action{``0})">
            <summary>
            Applies the given effect to the given drawable and optionally initializes the created drawable with the given initializationAction.
            </summary>
            <typeparam name="T">The type of the drawable that results from applying the given effect.</typeparam>
            <param name="effect">The effect to apply to the drawable.</param>
            <param name="drawable">The drawable to apply the effect to.</param>
            <param name="initializationAction">The action that should get called to initialize the created drawable before it is returned.</param>
            <returns>The drawable created by applying the given effect to this drawable.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.GlowEffect">
            <summary>
            Creates a glow around the drawable this effect gets applied to.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.Strength">
            <summary>
            The strength of the glow. A higher strength means that the glow fades outward slower. Default is 1.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.BlurSigma">
            <summary>
            The sigma value for the blur of the glow. This controls how spread out the glow is. Default is 5 in both X and Y.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.Colour">
            <summary>
            The color of the outline. Default is <see cref="P:osuTK.Graphics.Color4.White"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.Blending">
            <summary>
            The blending mode of the glow. Default is additive.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.Placement">
            <summary>
            Whether to draw the glow <see cref="F:osu.Framework.Graphics.Containers.EffectPlacement.InFront"/> or <see cref="F:osu.Framework.Graphics.Containers.EffectPlacement.Behind"/> the glowing
            <see cref="T:osu.Framework.Graphics.Drawable"/>. Default is <see cref="F:osu.Framework.Graphics.Containers.EffectPlacement.InFront"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.GlowEffect.PadExtent">
            <summary>
            Whether to automatically pad by the glow extent such that no clipping occurs at the sides of the effect. Default is false.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.IEffect`1">
            <summary>
            Represents an effect that can be applied to a drawable.
            </summary>
            <typeparam name="T">The type of the drawable that is created as a result of applying the effect to a drawable.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Effects.IEffect`1.ApplyTo(osu.Framework.Graphics.Drawable)">
            <summary>
            Applies this effect to the given drawable.
            </summary>
            <param name="drawable">The drawable to apply this effect to.</param>
            <returns>A new drawable derived from the given drawable with the effect applied.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Effects.OutlineEffect">
            <summary>
            Creates an outline around the drawable this effect gets applied to.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.OutlineEffect.Strength">
            <summary>
            The strength of the outline. A higher strength means that the blur effect used to draw the outline fades slower.
            Default is 1.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.OutlineEffect.BlurSigma">
            <summary>
            The sigma value for the blur effect used to draw the outline. This controls over how many pixels the outline gets spread.
            Default is <see cref="F:osuTK.Vector2.One"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.OutlineEffect.Colour">
            <summary>
            The color of the outline. Default is <see cref="P:osuTK.Graphics.Color4.Black"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Effects.OutlineEffect.PadExtent">
            <summary>
            Whether to automatically pad by the blur extent such that no clipping occurs at the sides of the effect. Default is false.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.IBufferedDrawable">
            <summary>
            Interface for <see cref="T:osu.Framework.Graphics.Drawable"/>s which can be drawn by a <see cref="T:osu.Framework.Graphics.BufferedDrawNode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IBufferedDrawable.BackgroundColour">
            <summary>
            The background colour of the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s.
            Visually changes the colour which rendered alpha is blended against.
            </summary>
            <remarks>
            This should generally be transparent-black or transparent-white, but can also be used to
            colourise the background colour of the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> with non-transparent colours.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.IBufferedDrawable.FrameBufferDrawColour">
            <summary>
            The colour with which the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s are rendered to the screen.
            A null value implies the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s should be drawn as they are.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IBufferedDrawable.FrameBufferScale">
            <summary>
            The scale of the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s drawn relative to the size of this <see cref="T:osu.Framework.Graphics.IBufferedDrawable"/>.
            </summary>
            <remarks>
            The contents of the <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>s are populated at this scale, however the scale of <see cref="T:osu.Framework.Graphics.Drawable"/>s remains unaffected.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.ICompositeDrawNode">
            <summary>
            Interface for <see cref="T:osu.Framework.Graphics.DrawNode"/>s which compose child <see cref="T:osu.Framework.Graphics.DrawNode"/>s.
            <see cref="T:osu.Framework.Graphics.DrawNode"/>s implementing this interface can be used in <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.ICompositeDrawNode.Children">
            <summary>
            The child <see cref="T:osu.Framework.Graphics.DrawNode"/>s to draw.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.ICompositeDrawNode.AddChildDrawNodes">
            <summary>
            Whether <see cref="P:osu.Framework.Graphics.ICompositeDrawNode.Children"/> should be updated by the parenting <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.IDrawable">
            <summary>
            Exposes various properties that are part of the public interface of <see cref="T:osu.Framework.Graphics.Drawable"/>.
            This interface should generally NOT be implemented by other classes than <see cref="T:osu.Framework.Graphics.Drawable"/>, but only used to
            specify that an object is of type <see cref="T:osu.Framework.Graphics.Drawable"/>.
            It is mostly useful in cases where you need to specify additional constraints on a <see cref="T:osu.Framework.Graphics.Drawable"/>, but also do not want to force inheriting from
            any particular subclass of <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.DrawSize">
            <summary>
            Absolute size of this Drawable in the <see cref="P:osu.Framework.Graphics.IDrawable.Parent"/>'s coordinate system.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.DrawRectangle">
            <summary>
            Absolutely sized rectangle for drawing in the <see cref="P:osu.Framework.Graphics.IDrawable.Parent"/>'s coordinate system.
            Based on <see cref="P:osu.Framework.Graphics.IDrawable.DrawSize"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.DrawInfo">
            <summary>
            Contains a linear transformation, colour information, and blending information
            of this drawable.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.DrawColourInfo">
            <summary>
            Contains the colour and blending information of this <see cref="T:osu.Framework.Graphics.Drawable"/> that are used during draw.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.ScreenSpaceDrawQuad">
            <summary>
            The screen-space quad this drawable occupies.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.Parent">
            <summary>
            The parent of this drawable in the scene graph.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.IsPresent">
            <summary>
            Whether this drawable is present for any sort of user-interaction.
            If this is false, then this drawable will not be drawn, it will not handle input,
            and it will not affect layouting (e.g. autosizing and flow).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.Clock">
            <summary>
            The clock of this drawable. Used for keeping track of time across frames.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.IDrawable.ToSpaceOfOtherDrawable(osuTK.Vector2,osu.Framework.Graphics.IDrawable)">
            <summary>
            Accepts a vector in local coordinates and converts it to coordinates in another Drawable's space.
            </summary>
            <param name="input">A vector in local coordinates.</param>
            <param name="other">The drawable in which space we want to transform the vector to.</param>
            <returns>The vector in other's coordinates.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.IDrawable.ToLocalSpace(osuTK.Vector2)">
            <summary>
            Convert a position to the local coordinate system from either native or local to another drawable.
            This is *not* the same space as the Position member variable (use Parent.GetLocalPosition() in this case).
            </summary>
            <param name="screenSpacePos">The input position.</param>
            <returns>The output position.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.Blending">
            <summary>
            Determines how this Drawable is blended with other already drawn Drawables.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.IsHovered">
            <summary>
            Whether this Drawable is currently hovered over.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.IsDragged">
            <summary>
            Whether this Drawable is currently dragged.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.Alpha">
            <summary>
            Multiplicative alpha factor applied on top of <see cref="T:osu.Framework.Graphics.Colour.ColourInfo"/> and its existing
            alpha channel(s).
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.IDrawable.Show">
            <summary>
            Show sprite instantly.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.IDrawable.Hide">
            <summary>
            Hide sprite instantly.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.IDrawable.InvalidationID">
            <summary>
            The current invalidation ID of this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            Incremented every time the <see cref="T:osu.Framework.Graphics.DrawNode"/> should be re-validated.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.InvalidationList">
            <summary>
            Contains the internal logic for the state management of <see cref="M:osu.Framework.Graphics.Drawable.Invalidate(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.InvalidationList.#ctor(osu.Framework.Graphics.Invalidation)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.InvalidationList"/>.
            </summary>
            <param name="initialState">The initial invalidation state.</param>
        </member>
        <member name="M:osu.Framework.Graphics.InvalidationList.Invalidate(osu.Framework.Layout.InvalidationSource,osu.Framework.Graphics.Invalidation)">
            <summary>
            Invalidates a <see cref="T:osu.Framework.Layout.InvalidationSource"/> with given <see cref="T:osu.Framework.Graphics.Invalidation"/> flags.
            </summary>
            <remarks>
            Call sites must ensure that on a <see cref="F:osu.Framework.Layout.InvalidationSource.Self"/>, <see cref="F:osu.Framework.Layout.InvalidationSource.Parent"/> or <see cref="F:osu.Framework.Layout.InvalidationSource.Child"/> source is provided.
            </remarks>
            <param name="source">The <see cref="T:osu.Framework.Layout.InvalidationSource"/> to invalidate.</param>
            <param name="flags">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags to invalidate with.</param>
            <returns>Whether an invalidation was performed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.InvalidationList.Validate(osu.Framework.Graphics.Invalidation)">
            <summary>
            Validates all <see cref="T:osu.Framework.Layout.InvalidationSource"/>s with given <see cref="T:osu.Framework.Graphics.Invalidation"/> flags.
            </summary>
            <param name="validation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags to validate with.</param>
            <returns>Whether any <see cref="T:osu.Framework.Layout.InvalidationSource"/> was validated.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.ITexturedShaderDrawable">
            <summary>
            Interface for <see cref="T:osu.Framework.Graphics.Drawable"/>s which can be drawn by <see cref="T:osu.Framework.Graphics.TexturedShaderDrawNode"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.ITexturedShaderDrawable.TextureShader">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> to be used for rendering.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Lines.Path.PathRadius">
            <summary>
            How wide this path is on each side of the line.
            </summary>
            <remarks>
            The actual width of the path is twice the PathRadius.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Lines.Path.AutoSizeAxes">
            <summary>
            Controls which <see cref="T:osu.Framework.Graphics.Axes"/> are automatically sized w.r.t. the bounds of the vertices.
            It is not allowed to manually set <see cref="P:osu.Framework.Graphics.Lines.Path.Size"/> (or <see cref="P:osu.Framework.Graphics.Lines.Path.Width"/> / <see cref="P:osu.Framework.Graphics.Lines.Path.Height"/>)
            on any <see cref="T:osu.Framework.Graphics.Axes"/> which are automatically sized.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Lines.Path.BackgroundColour">
            <summary>
            The background colour to be used for the frame buffer this path is rendered to.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Lines.SmoothPath.BackgroundColour">
            <summary>
            The background colour to be used for the frame buffer this path is rendered to.
            For <see cref="T:osu.Framework.Graphics.Lines.SmoothPath"/>, this automatically defaults to the colour at 0 (the outermost colour of the path) to avoid aliasing issues.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Lines.SmoothPath.ColourAt(System.Single)">
            <summary>
            Retrieves the colour from a position in the texture of the <see cref="T:osu.Framework.Graphics.Lines.Path"/>.
            </summary>
            <param name="position">The position within the texture. 0 indicates the outermost-point of the path, 1 indicates the centre of the path.</param>
        </member>
        <member name="T:osu.Framework.Graphics.MarginPadding">
            <summary>
            Holds data about the margin or padding of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            The margin describes the size of an empty area around its <see cref="T:osu.Framework.Graphics.Drawable"/>, while the padding describes the size of an empty area inside its container.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.MarginPadding.Top">
            <summary>
            The absolute size of the space that should be left empty above the <see cref="T:osu.Framework.Graphics.Drawable"/> if used as margin, or
            the absolute size of the space that should be left empty from the top of the container if used as padding.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.MarginPadding.Left">
            <summary>
            The absolute size of the space that should be left empty to the left of the <see cref="T:osu.Framework.Graphics.Drawable"/> if used as margin, or
            the absolute size of the space that should be left empty from the left of the container if used as padding.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.MarginPadding.Bottom">
            <summary>
            The absolute size of the space that should be left empty below the <see cref="T:osu.Framework.Graphics.Drawable"/> if used as margin, or
            the absolute size of the space that should be left empty from the bottom of the container if used as padding.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.MarginPadding.Right">
            <summary>
            The absolute size of the space that should be left empty to the right of the <see cref="T:osu.Framework.Graphics.Drawable"/> if used as margin, or
            the absolute size of the space that should be left empty from the right of the container if used as padding.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.MarginPadding.TotalHorizontal">
            <summary>
            Gets the total absolute size of the empty space horizontally around the <see cref="T:osu.Framework.Graphics.Drawable"/> if used as margin, or
            the absolute size of the space left empty from the right and left of the container if used as padding.
            Effectively <see cref="F:osu.Framework.Graphics.MarginPadding.Right"/> + <see cref="F:osu.Framework.Graphics.MarginPadding.Left"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.MarginPadding.Horizontal">
            <summary>
            Sets the values of both <see cref="F:osu.Framework.Graphics.MarginPadding.Left"/> and <see cref="F:osu.Framework.Graphics.MarginPadding.Right"/> to the assigned value.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.MarginPadding.TotalVertical">
            <summary>
            Gets the total absolute size of the empty space vertically around the <see cref="T:osu.Framework.Graphics.Drawable"/> or
            the absolute size of the space left empty from the top and bottom of the container if used as padding.
            Effectively <see cref="F:osu.Framework.Graphics.MarginPadding.Top"/> + <see cref="F:osu.Framework.Graphics.MarginPadding.Bottom"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.MarginPadding.Vertical">
            <summary>
            Sets the values of both <see cref="F:osu.Framework.Graphics.MarginPadding.Top"/> and <see cref="F:osu.Framework.Graphics.MarginPadding.Bottom"/> to the assigned value.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.MarginPadding.Total">
            <summary>
            Gets the total absolute size of the empty space horizontally (x coordinate) and vertically (y coordinate) around the <see cref="T:osu.Framework.Graphics.Drawable"/> or inside the container if used as padding.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.MarginPadding.#ctor(System.Single)">
            <summary>
            Initializes all four sides (<see cref="F:osu.Framework.Graphics.MarginPadding.Left"/>, <see cref="F:osu.Framework.Graphics.MarginPadding.Right"/>, <see cref="F:osu.Framework.Graphics.MarginPadding.Top"/> and <see cref="F:osu.Framework.Graphics.MarginPadding.Bottom"/>) to the given value.
            </summary>
            <param name="allSides">The absolute size of the space that should be left around every side of the <see cref="T:osu.Framework.Graphics.Drawable"/>.</param>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1.Size">
            <summary>
            The number of vertices in each VertexBuffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1.Add(`0)">
            <summary>
            Adds a vertex to this <see cref="T:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1"/>.
            </summary>
            <param name="v">The vertex to add.</param>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1.AddAction">
            <summary>
            Adds a vertex to this <see cref="T:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1"/>.
            This is a cached delegate of <see cref="M:osu.Framework.Graphics.OpenGL.Batches.GLVertexBatch`1.Add(`0)"/> that should be used in memory-critical locations such as <see cref="T:osu.Framework.Graphics.DrawNode"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.Buffers.GLFrameBuffer.Size">
            <summary>
            Sets the size of the texture of this frame buffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Buffers.GLFrameBuffer.Bind">
            <summary>
            Binds the framebuffer.
            <para>Does not clear the buffer or reset the viewport/ortho.</para>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Buffers.GLFrameBuffer.Unbind">
            <summary>
            Unbinds the framebuffer.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.OpenGL.Buffers.GLLinearBuffer`1">
            <summary>
            This type of vertex buffer lets the ith vertex be referenced by the ith index.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1.SetVertex(System.Int32,`0)">
            <summary>
            Sets the vertex at a specific index of this <see cref="T:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1"/>.
            </summary>
            <param name="vertexIndex">The index of the vertex.</param>
            <param name="vertex">The vertex.</param>
            <returns>Whether the vertex changed.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1.Size">
            <summary>
            Gets the number of vertices in this <see cref="T:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1.Initialise">
            <summary>
            Initialises this <see cref="T:osu.Framework.Graphics.OpenGL.Buffers.GLVertexBuffer`1"/>. Guaranteed to be run on the draw thread.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.OpenGL.Buffers.GLVertexUtils`1">
            <summary>
            Helper method that provides functionality to enable and bind GL vertex attributes.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.OpenGL.Buffers.GLVertexUtils`1.STRIDE">
            <summary>
            The stride of the vertex of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.GLRenderer.MaxRenderBufferSize">
            <summary>
            The maximum allowed render buffer size.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.GLRenderer.IsEmbedded">
            <summary>
            Whether the current platform is embedded.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.OpenGL.Shaders.GLUniformBlock">
            <summary>
            A uniform block of an OpenGL shader.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Shaders.GLUniformBlock.#ctor(osu.Framework.Graphics.OpenGL.Shaders.GLShader,System.Int32,System.Int32)">
            <summary>
            Creates a new uniform block.
            </summary>
            <param name="shader">The shader.</param>
            <param name="index">The index (location) of this block in the GL shader.</param>
            <param name="binding">A unique index for this block to bound to in the GL program.</param>
        </member>
        <member name="M:osu.Framework.Graphics.OpenGL.Textures.GLTexture.#ctor(osu.Framework.Graphics.OpenGL.GLRenderer,System.Int32,System.Int32,System.Boolean,osuTK.Graphics.ES30.All,System.Nullable{osuTK.Graphics.Color4})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.OpenGL.Textures.GLTexture"/>.
            </summary>
            <param name="renderer"></param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="manualMipmaps">Whether manual mipmaps will be uploaded to the texture. If false, the texture will compute mipmaps automatically.</param>
            <param name="filteringMode">The filtering mode.</param>
            <param name="initialisationColour">The colour to initialise texture levels with (in the case of sub region initial uploads). If null, no initialisation is provided out-of-the-box.</param>
        </member>
        <member name="P:osu.Framework.Graphics.OpenGL.Textures.GLTexture.IsQueuedForUpload">
            <summary>
            Whether the texture is currently queued for upload.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.GlobalStatisticsDisplay">
            <summary>
            Tracks global game statistics.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeBoundaryCrossingDirection">
            <summary>
            Represents a direction of lifetime boundary crossing.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeBoundaryCrossingDirection.Forward">
            <summary>
            A crossing from past to future.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeBoundaryCrossingDirection.Backward">
            <summary>
            A crossing from future to past.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeBoundaryKind">
            <summary>
            Represents one of boundaries of lifetime interval.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeBoundaryKind.Start">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.LifetimeStart"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeBoundaryKind.End">
            <summary>
            <see cref="P:osu.Framework.Graphics.Drawable.LifetimeEnd"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeEntry">
            <summary>
            An object for a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/> to consume, which provides a <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/> and <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/>.
            </summary>
            <remarks>
            Management of the object which the <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> refers to is left up to the consumer.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart">
            <summary>
            The time at which this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> becomes alive in a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd">
            <summary>
            The time at which this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> becomes dead in a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/>.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Performance.LifetimeEntry.RequestLifetimeUpdate">
            <summary>
            Invoked before <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/> or <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/> changes.
            It is used because <see cref="E:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeChanged"/> cannot be used to ensure comparator stability.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeChanged">
            <summary>
            Invoked after <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/> or <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/> changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntry.SetLifetimeStart(System.Double)">
            <summary>
            Update <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/> of this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntry.SetLifetimeEnd(System.Double)">
            <summary>
            Update <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/> of this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntry.SetLifetime(System.Double,System.Double)">
            <summary>
            Updates the stored lifetimes of this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
            <param name="start">The new <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/> value.</param>
            <param name="end">The new <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/> value.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Performance.LifetimeEntry.State">
            <summary>
            The current state of this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Performance.LifetimeEntry.ChildId">
            <summary>
            Uniquely identifies this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> in a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeEntryManager">
            <summary>
            Provides time-optimised updates for lifetime change notifications.
            This is used in specialised <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>s to optimise lifetime changes (see: <see cref="T:osu.Framework.Graphics.Containers.LifetimeManagementContainer"/>).
            </summary>
            <remarks>
            The time complexity of updating lifetimes is O(number of alive items).
            </remarks>
        </member>
        <member name="E:osu.Framework.Graphics.Performance.LifetimeEntryManager.EntryBecameAlive">
            <summary>
            Invoked immediately when a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> becomes alive.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Performance.LifetimeEntryManager.EntryBecameDead">
            <summary>
            Invoked immediately when a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> becomes dead.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Performance.LifetimeEntryManager.EntryCrossedBoundary">
            <summary>
            Invoked when a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> crosses a lifetime boundary.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.newEntries">
            <summary>
            Contains all the newly-added (but not yet processed) entries.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.activeEntries">
            <summary>
            Contains all the currently-alive entries.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.futureEntries">
            <summary>
            Contains all entries that should come alive in the future.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.pastEntries">
            <summary>
            Contains all entries that were alive in the past.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.currentChildId">
            <summary>
            Used to ensure a stable sort if multiple entries with the same lifetime are added.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.AddEntry(osu.Framework.Graphics.Performance.LifetimeEntry)">
            <summary>
            Adds an entry.
            </summary>
            <param name="entry">The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.RemoveEntry(osu.Framework.Graphics.Performance.LifetimeEntry)">
            <summary>
            Removes an entry.
            </summary>
            <param name="entry">The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> to remove.</param>
            <returns>Whether <paramref name="entry"/> was contained by this <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.ClearEntries">
            <summary>
            Removes all entries.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.requestLifetimeUpdate(osu.Framework.Graphics.Performance.LifetimeEntry)">
            <summary>
            Invoked when the lifetime of an entry is going to changed.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.futureOrPastEntries(osu.Framework.Graphics.Performance.LifetimeEntryState)">
            <summary>
            Retrieves the sorted set for a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryState"/>.
            </summary>
            <param name="state">The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryState"/>.</param>
            <returns>Either <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.futureEntries"/>, <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.pastEntries"/>, or null.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.Update(System.Double)">
            <summary>
            Updates the lifetime of entries at a single time value.
            </summary>
            <param name="time">The time to update at.</param>
            <returns>Whether the state of any entries changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.Update(System.Double,System.Double)">
            <summary>
            Updates the lifetime of entries within a given time range.
            </summary>
            <param name="startTime">The start of the time range.</param>
            <param name="endTime">The end of the time range.</param>
            <returns>Whether the state of any entries changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.updateChildEntry(osu.Framework.Graphics.Performance.LifetimeEntry,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Updates the state of a single <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
            <param name="entry">The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> to update.</param>
            <param name="startTime">The start of the time range.</param>
            <param name="endTime">The end of the time range.</param>
            <param name="isNewEntry">Whether <paramref name="entry"/> is part of the new entries set.
            The state may be "new" or "past"/"future", in which case it will undergo further processing to return it to the correct set.</param>
            <param name="mutateActiveEntries">Whether <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.activeEntries"/> should be mutated by this invocation.
            If <c>false</c>, the caller is expected to handle mutation of <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryManager.activeEntries"/> based on any changes to the entry's state.</param>
            <returns>Whether the state of <paramref name="entry"/> has changed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Performance.LifetimeEntryManager.getState(osu.Framework.Graphics.Performance.LifetimeEntry,System.Double,System.Double)">
            <summary>
            Retrieves the new state for an entry.
            </summary>
            <param name="entry">The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.</param>
            <param name="startTime">The start of the time range.</param>
            <param name="endTime">The end of the time range.</param>
            <returns>The state of <paramref name="entry"/>. Can be either <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Past"/>, <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Current"/>, or <see cref="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Future"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeEntryManager.LifetimeStartComparator">
            <summary>
            Compares by <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeEntryManager.LifetimeEndComparator">
            <summary>
            Compares by <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Performance.LifetimeEntryState">
            <summary>
            The state of a <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryState.New">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> hasn't been processed within the <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntryManager"/> yet.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Future">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> is currently dead and becomes alive when current time &gt;= <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeStart"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Current">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> is currently alive.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Performance.LifetimeEntryState.Past">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Performance.LifetimeEntry"/> is currently dead and becomes alive when current time &lt; <see cref="P:osu.Framework.Graphics.Performance.LifetimeEntry.LifetimeEnd"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Pooling.DrawablePool`1">
            <summary>
            A component which provides a pool of reusable drawables.
            Should be used to reduce allocation and construction overhead of individual drawables.
            </summary>
            <remarks>
            The <see cref="F:osu.Framework.Graphics.Pooling.DrawablePool`1.initialSize"/> drawables will be prepared ahead-of-time during this pool's asynchronous load procedure.
            Drawables exceeding the pool's available size will not be asynchronously loaded as it is assumed they are immediately required for consumption.
            </remarks>
            <typeparam name="T">The type of drawable to be pooled.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.DrawablePool`1.#ctor(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Create a new pool instance.
            </summary>
            <param name="initialSize">The number of drawables to be prepared for initial consumption.</param>
            <param name="maximumSize">An optional maximum size after which the pool will no longer be expanded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.DrawablePool`1.Return(osu.Framework.Graphics.Pooling.PoolableDrawable)">
            <summary>
            Return a drawable after use.
            </summary>
            <param name="pooledDrawable">The drawable to return. Should have originally come from this pool.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.DrawablePool`1.Get(System.Action{`0})">
            <summary>
            Get a drawable from this pool.
            </summary>
            <param name="setupAction">An optional action to be performed on this drawable immediately after retrieval. Should generally be used to prepare the drawable into a usable state.</param>
            <returns>The drawable.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.DrawablePool`1.CreateNewDrawable">
            <summary>
            Create a new drawable to be consumed or added to the pool.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.DrawablePool`1.CurrentPoolSize">
            <summary>
            The current size of the pool.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.DrawablePool`1.CountInUse">
            <summary>
            The number of drawables currently in use.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.DrawablePool`1.CountExcessConstructed">
            <summary>
            The total number of drawables constructed that were not pooled.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.DrawablePool`1.CountAvailable">
            <summary>
            The number of drawables currently available for consumption.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Pooling.DrawablePool`1.DrawablePoolUsageStatistic.CurrentPoolSize">
            <summary>
            Total number of drawables available for use (in the pool).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Pooling.DrawablePool`1.DrawablePoolUsageStatistic.CountInUse">
            <summary>
            Total number of drawables currently in use.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Pooling.DrawablePool`1.DrawablePoolUsageStatistic.CountExcessConstructed">
            <summary>
            Total number of drawables constructed that were not pooled.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.IDrawablePool.Get(System.Action{osu.Framework.Graphics.Pooling.PoolableDrawable})">
            <summary>
            Get a drawable from this pool.
            </summary>
            <param name="setupAction">An optional action to be performed on this drawable immediately after retrieval. Should generally be used to prepare the drawable into a usable state.</param>
            <returns>The drawable.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.IDrawablePool.Return(osu.Framework.Graphics.Pooling.PoolableDrawable)">
            <summary>
            Return a drawable after use.
            </summary>
            <param name="pooledDrawable">The drwable to return. Should have originally come from this pool.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.PoolableDrawable.IsInUse">
            <summary>
            Whether this pooled drawable is currently in use.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Pooling.PoolableDrawable.IsInPool">
            <summary>
            Whether this drawable is currently managed by a pool.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Pooling.PoolableDrawable.waitingForPrepare">
            <summary>
            A flag to keep the drawable present to guarantee the prepare call can be performed as a scheduled call.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.PoolableDrawable.Return">
            <summary>
            Return this drawable to its pool manually. Note that this is not required if the drawable is using lifetime cleanup.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.PoolableDrawable.PrepareForUse">
            <summary>
            Perform any initialisation on new usage of this drawable.
            This is scheduled to the first update frame and may not be run if this is never reached.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.PoolableDrawable.FreeAfterUse">
            <summary>
            Perform any clean-up required before returning this drawable to a pool.
            This is called regardless of whether <see cref="M:osu.Framework.Graphics.Pooling.PoolableDrawable.PrepareForUse"/> was executed.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.PoolableDrawable.SetPool(osu.Framework.Graphics.Pooling.IDrawablePool)">
            <summary>
            Set the associated pool this drawable is currently associated with.
            </summary>
            <param name="pool">The target pool, or null to disassociate from all pools (and cause the drawable to be disposed as if it was not pooled). </param>
            <exception cref="T:System.InvalidOperationException">Thrown if this drawable is still in use, or is already in another pool.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Pooling.PoolableDrawable.Assign">
            <summary>
            Assign this drawable to a consumer.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if this drawable is still in use.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.IPolygon.GetAxisVertices">
            <summary>
            The vertices that define the axes spanned by this polygon in screen-space counter-clockwise orientation.
            </summary>
            <remarks>
            Counter-clockwise orientation in screen-space coordinates is equivalent to a clockwise orientation in standard coordinates.
            <para>
            E.g. For the set of vertices { (0, 0), (1, 0), (0, 1), (1, 1) }, a counter-clockwise orientation is { (0, 0), (0, 1), (1, 1), (1, 0) }.
            </para>
            </remarks>
            <returns>The vertices that define the axes spanned by this polygon.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.IPolygon.GetVertices">
            <summary>
            Retrieves the vertices of this polygon in screen-space counter-clockwise orientation.
            </summary>
            <remarks>
            Counter-clockwise orientation in screen-space coordinates is equivalent to a clockwise orientation in standard coordinates.
            <para>
            E.g. For the set of vertices { (0, 0), (1, 0), (0, 1), (1, 1) }, a counter-clockwise orientation is { (0, 0), (0, 1), (1, 1), (1, 0) }.
            </para>
            </remarks>
            <returns>The vertices of this polygon.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Primitives.Line">
            <summary>
            Represents a single line segment.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Primitives.Line.StartPoint">
            <summary>
            Begin point of the line.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Primitives.Line.EndPoint">
            <summary>
            End point of the line.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.Line.Rho">
            <summary>
            The length of the line.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.Line.Theta">
            <summary>
            The direction of the second point from the first.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.Line.Direction">
            <summary>
            The direction of this <see cref="T:osu.Framework.Graphics.Primitives.Line"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.Line.DirectionNormalized">
            <summary>
            The normalized direction of this <see cref="T:osu.Framework.Graphics.Primitives.Line"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.At(System.Single)">
            <summary>
            Computes a position along this line.
            </summary>
            <param name="t">A parameter representing the position along the line to compute. 0 yields the start point and 1 yields the end point.</param>
            <returns>The position along the line.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.IntersectWith(osu.Framework.Graphics.Primitives.Line@)">
            <summary>
            Intersects this line with another.
            </summary>
            <param name="other">The line to intersect with.</param>
            <returns>Whether the two lines intersect and, if so, the distance along this line at which the intersection occurs.
            An intersection may occur even if the two lines don't touch, at which point the parameter will be outside the [0, 1] range.
            To compute the point of intersection, <see cref="M:osu.Framework.Graphics.Primitives.Line.At(System.Single)"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.TryIntersectWith(osu.Framework.Graphics.Primitives.Line@,System.Single@)">
            <summary>
            Intersects this line with another.
            </summary>
            <param name="other">The line to intersect with.</param>
            <param name="distance">The distance along this line at which the intersection occurs. To compute the point of intersection, <see cref="M:osu.Framework.Graphics.Primitives.Line.At(System.Single)"/>.</param>
            <returns>Whether the two lines intersect. An intersection may occur even if the two lines don't touch, at which point the parameter will be outside the [0, 1] range.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.TryIntersectWith(osuTK.Vector2@,osuTK.Vector2@,System.Single@)">
            <summary>
            Intersects this line with another.
            </summary>
            <param name="otherStart">The start point of the other line to intersect with.</param>
            <param name="otherEnd">The end point of the other line to intersect with.</param>
            <param name="distance">The distance along this line at which the intersection occurs. To compute the point of intersection, <see cref="M:osu.Framework.Graphics.Primitives.Line.At(System.Single)"/>.</param>
            <returns>Whether the two lines intersect. An intersection may occur even if the two lines don't touch, at which point the parameter will be outside the [0, 1] range.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.DistanceSquaredToPoint(osuTK.Vector2)">
            <summary>
            Distance squared from an arbitrary point p to this line.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.DistanceToPoint(osuTK.Vector2)">
            <summary>
            Distance from an arbitrary point to this line.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.ClosestPointTo(osuTK.Vector2)">
            <summary>
            Finds the point closest to the given point on this line.
            </summary>
            <remarks>
            See http://geometryalgorithms.com/Archive/algorithm_0102/algorithm_0102.htm, near the bottom.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Line.EndWorldMatrix">
            <summary>
            It's the end of the world as we know it
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Primitives.ProjectionRange">
            <summary>
            A structure that tells how "far" along an axis
            the projection of vertices onto the axis would be.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.ProjectionRange.Min">
            <summary>
            The minimum projected value.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.ProjectionRange.Max">
            <summary>
            The maximum projected value.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.ProjectionRange.Overlaps(osu.Framework.Graphics.Primitives.ProjectionRange)">
            <summary>
            Checks whether this range overlaps another range.
            </summary>
            <param name="other">The other range to test against.</param>
            <returns>Whether the two ranges overlap.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Quad.Contains(osuTK.Vector2)">
            <summary>
            Checks whether <paramref name="pos"/> is inside of this quad.
            </summary>
            <remarks>
            <para>
            This method assumes a convex quad. The convexity of the quad is not checked.
            Vertices of the quad as returned by <see cref="M:osu.Framework.Graphics.Primitives.Quad.GetVertices"/> must be arranged either in clockwise or counter-clockwise order.
            </para>
            <para>
            The method works by checking whether the point lies on the same side of all four sides of the quad.
            Note that the quad vertices are *not* using the standard Cartesian coordinates, but rather a Y-inverted version of them
            (as in higher Y is *down*),
            which is why the sign of the perpendicular dot product is opposite to what would be normally expected on the Cartesian plane.
            </para>
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.Quad.Area">
            <summary>
            Computes the area of this <see cref="T:osu.Framework.Graphics.Primitives.Quad"/>.
            </summary>
            <remarks>
            If the quad is self-intersecting the area is interpreted as the sum of all positive and negative areas and not the "visible area" enclosed by the <see cref="T:osu.Framework.Graphics.Primitives.Quad"/>.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Primitives.RectangleF">
            <summary>Stores a set of four floating-point numbers that represent the location and size of a rectangle. The code was duplicated from <see cref="T:System.Drawing.RectangleF"/>.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Empty">
            <summary>Represents an instance of the <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> class with its members uninitialized.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Initializes a new instance of the <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> class with the specified location and size.</summary>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.#ctor(osuTK.Vector2,osuTK.Vector2)">
            <summary>Initializes a new instance of the <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> class with the specified location and size.</summary>
            <param name="size">A <see cref="T:osuTK.Vector2"/> that represents the width and height of the rectangular region. </param>
            <param name="location">A <see cref="T:osuTK.Vector2"/> that represents the upper-left corner of the rectangular region. </param>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Location">
            <summary>Gets or sets the coordinates of the upper-left corner of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>A <see cref="T:osuTK.Vector2"/> that represents the upper-left corner of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Size">
            <summary>Gets or sets the size of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</summary>
            <returns>A <see cref="T:osuTK.Vector2"/> that represents the width and height of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Left">
            <summary>Gets the y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>The y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Top">
            <summary>Gets the y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>The y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Right">
            <summary>Gets the x-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.X"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>The x-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.X"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Bottom">
            <summary>Gets the y-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Y"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>The y-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Y"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.TopLeft">
            <summary>Gets the top left corner of the rectangle.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.TopRight">
            <summary>Gets the top right corner of the rectangle.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.BottomLeft">
            <summary>Gets the bottom left corner of the rectangle.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.BottomRight">
            <summary>Gets the bottom right corner of the rectangle.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Centre">
            <summary>Gets the center of the rectangle.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.IsEmpty">
            <summary>Tests whether the <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> or <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> property of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> has a value of zero.</summary>
            <returns>This property returns true if the <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> or <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> property of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> has a value of zero; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Equals(System.Object)">
            <summary>Tests whether obj is a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with the same location and size of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</summary>
            <returns>This method returns true if obj is a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> and its X, Y, Width, and Height properties are equal to the corresponding properties of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>; otherwise, false.</returns>
            <param name="obj">The <see cref="T:System.Object"/> to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.op_Equality(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Tests whether two <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structures have equal location and size.</summary>
            <returns>This operator returns true if the two specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structures have equal <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.X"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Y"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/>, and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> properties.</returns>
            <param name="right">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that is to the right of the equality operator. </param>
            <param name="left">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that is to the left of the equality operator. </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.op_Inequality(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Tests whether two <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structures differ in location or size.</summary>
            <returns>This operator returns true if any of the <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.X"/> , <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Y"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/>, or <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> properties of the two <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structures are unequal; otherwise false.</returns>
            <param name="right">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that is to the right of the inequality operator.</param>
            <param name="left">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that is to the left of the inequality operator.</param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Contains(System.Single,System.Single)">
            <summary>Determines if the specified point is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>This method returns true if the point defined by x and y is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure; otherwise false.</returns>
            <param name="y">The y-coordinate of the point to test.</param>
            <param name="x">The x-coordinate of the point to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Contains(osuTK.Vector2)">
            <summary>Determines if the specified point is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>This method returns true if the point defined by x and y is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure; otherwise false.</returns>
            <param name="pt">The point to test against this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Contains(osu.Framework.Graphics.Primitives.Vector2I)">
            <summary>Determines if the specified point is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>This method returns true if the point represented by the pt parameter is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure; otherwise false.</returns>
            <param name="pt">The <see cref="T:osu.Framework.Graphics.Primitives.Vector2I"/> to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Contains(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Determines if the rectangular region represented by rect is entirely contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>; otherwise false.</returns>
            <param name="rect">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.GetHashCode">
            <summary>Gets the hash code for this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure. For information about the use of hash codes, see Object.GetHashCode.</summary>
            <returns>The hash code for this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.Area">
            <summary>Gets the Area of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleF.WithPositiveExtent">
             <summary>
             Gets this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with positive width and height.
             This is useful if you have a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with negative <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> or <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/>.
             </summary>
             <example>
             var rect = new <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> { <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> = -200, <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> = -300 }
            
             rect.<see cref="P:osu.Framework.Graphics.Primitives.RectangleF.WithPositiveExtent"/> will result in
             Width = 200
             Height = 300
             X = -200
             Y = -300
             </example>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Inflate(System.Single)">
            <summary>
            Gets a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> increased.
            The center of that <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> will stay at that location.
            </summary>
            <param name="amount">The amount both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> will be increased in the returned <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <returns>This method returns a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> inflated by the given <paramref name="amount"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Inflate(osuTK.Vector2)">
            <summary>
            Gets a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> increased.
            The center of that <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> will stay at that location.
            </summary>
            <param name="amount">The amount both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> will be increased in the returned <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <returns>This method returns a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> inflated by the given <paramref name="amount"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Inflate(osu.Framework.Graphics.MarginPadding)">
            <summary>
            Gets a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> increased.
            The center of that <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> will stay at that location.
            </summary>
            <param name="amount">The amount both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> will be increased in the returned <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <returns>This method returns a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> with both <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/> inflated by the given <paramref name="amount"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Intersect(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Replaces this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure with the intersection of itself and the specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>This method does not return a value.</returns>
            <param name="rect">The rectangle to intersect.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Intersect(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Returns a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that represents the intersection of two rectangles. If there is no intersection, and empty <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> is returned.</summary>
            <returns>A third <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure the size of which represents the overlapped area of the two specified rectangles.</returns>
            <param name="a">A rectangle to intersect.</param>
            <param name="b">A rectangle to intersect.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.IntersectsWith(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Determines if this rectangle intersects with rect.</summary>
            <returns>This method returns true if there is any intersection.</returns>
            <param name="rect">The rectangle to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.IntersectsWith(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Determines if this rectangle intersects with rect.</summary>
            <returns>This method returns true if there is any intersection.</returns>
            <param name="rect">The rectangle to test.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Union(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.</summary>
            <returns>A third <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that contains both of the two rectangles that form the union.</returns>
            <param name="a">The first rectangle to union.</param>
            <param name="b">The second rectangle to union.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Offset(osuTK.Vector2)">
            <summary>Adjusts the location of this rectangle by the specified amount.</summary>
            <returns>This method does not return a value.</returns>
            <param name="pos">The amount to offset the location.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Offset(System.Single,System.Single)">
            <summary>Adjusts the location of this rectangle by the specified amount.</summary>
            <returns>This method does not return a value.</returns>
            <param name="y">The amount to offset the location vertically.</param>
            <param name="x">The amount to offset the location horizontally.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> from left, top, right, and bottom coordinates.
            </summary>
            <param name="left">The left coordinate.</param>
            <param name="top">The top coordinate.</param>
            <param name="right">The right coordinate.</param>
            <param name="bottom">The bottom coordinate.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.RelativeIn(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> in relative coordinate space to another <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.
            </summary>
            <param name="other">The other <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <returns>The relative coordinate space representation of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> in <paramref name="other"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.Normalize">
            <summary>
            Create a new <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> congruent to this rectangle but with non-negative <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Width"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleF.Height"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.op_Implicit(osu.Framework.Graphics.Primitives.RectangleI)~osu.Framework.Graphics.Primitives.RectangleF">
            <summary>Converts the specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure to a <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure.</summary>
            <returns>The <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure that is converted from the specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <param name="r">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure to convert.</param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleF.ToString">
            <summary>Converts the Location and <see cref="P:osu.Framework.Graphics.Primitives.RectangleF.Size"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> to a human-readable string.</summary>
            <returns>A string that contains the position, width, and height of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/> structure¾for example, "{X=20, Y=20, Width=100, Height=50}".</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:osu.Framework.Graphics.Primitives.RectangleI">
            <summary>Stores a set of four integer numbers that represent the location and size of a rectangle. The code was duplicated from <see cref="T:System.Drawing.Rectangle"/>.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Empty">
            <summary>Represents an instance of the <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> class with its members uninitialized.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> class with the specified location and size.</summary>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Location">
            <summary>Gets or sets the coordinates of the upper-left corner of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>A <see cref="T:osuTK.Vector2"/> that represents the upper-left corner of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Size">
            <summary>Gets or sets the size of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/>.</summary>
            <returns>A <see cref="T:osuTK.Vector2"/> that represents the width and height of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Left">
            <summary>Gets the y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>The y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Top">
            <summary>Gets the y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>The y-coordinate of the top edge of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Right">
            <summary>Gets the x-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.X"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>The x-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.X"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.Bottom">
            <summary>Gets the y-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Y"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>The y-coordinate that is the sum of <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Y"/> and <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:osu.Framework.Graphics.Primitives.RectangleI.IsEmpty">
            <summary>Tests whether the <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/> or <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> property of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> has a value of zero.</summary>
            <returns>This property returns true if the <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/> or <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> property of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> has a value of zero; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Equals(System.Object)">
            <summary>Tests whether obj is a <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> with the same location and size of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/>.</summary>
            <returns>This method returns true if obj is a <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> and its X, Y, Width, and Height properties are equal to the corresponding properties of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/>; otherwise, false.</returns>
            <param name="obj">The <see cref="T:System.Object"/> to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.op_Equality(osu.Framework.Graphics.Primitives.RectangleI,osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Tests whether two <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structures have equal location and size.</summary>
            <returns>This operator returns true if the two specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structures have equal <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.X"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Y"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/>, and <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> properties.</returns>
            <param name="right">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that is to the right of the equality operator. </param>
            <param name="left">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that is to the left of the equality operator. </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.op_Inequality(osu.Framework.Graphics.Primitives.RectangleI,osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Tests whether two <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structures differ in location or size.</summary>
            <returns>This operator returns true if any of the <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.X"/> , <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Y"/>, <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Width"/>, or <see cref="F:osu.Framework.Graphics.Primitives.RectangleI.Height"/> properties of the two <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structures are unequal; otherwise false.</returns>
            <param name="right">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that is to the right of the inequality operator. </param>
            <param name="left">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that is to the left of the inequality operator. </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Contains(System.Single,System.Single)">
            <summary>Determines if the specified point is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>This method returns true if the point defined by x and y is contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure; otherwise false.</returns>
            <param name="y">The y-coordinate of the point to test. </param>
            <param name="x">The x-coordinate of the point to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Contains(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Determines if the rectangular region represented by rect is entirely contained within this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/>; otherwise false.</returns>
            <param name="rect">The <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.GetHashCode">
            <summary>Gets the hash code for this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure. For information about the use of hash codes, see Object.GetHashCode.</summary>
            <returns>The hash code for this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Intersect(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Intersects this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure with the specified <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure.</summary>
            <returns>The intersected rectangle.</returns>
            <param name="rect">The rectangle to intersect. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Intersect(osu.Framework.Graphics.Primitives.RectangleI,osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Returns a <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that represents the intersection of two rectangles. If there is no intersection, and empty <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> is returned.</summary>
            <returns>A third <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure the size of which represents the overlapped area of the two specified rectangles.</returns>
            <param name="a">A rectangle to intersect. </param>
            <param name="b">A rectangle to intersect. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.IntersectsWith(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Determines if this rectangle intersects with rect.</summary>
            <returns>This method returns true if there is any intersection.</returns>
            <param name="rect">The rectangle to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Union(osu.Framework.Graphics.Primitives.RectangleI,osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.</summary>
            <returns>A third <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure that contains both of the two rectangles that form the union.</returns>
            <param name="a">A rectangle to union. </param>
            <param name="b">A rectangle to union. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.Offset(System.Int32,System.Int32)">
            <summary>Adjusts the location of this rectangle by the specified amount.</summary>
            <returns>This method does not return a value.</returns>
            <param name="y">The amount to offset the location vertically. </param>
            <param name="x">The amount to offset the location horizontally. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.RectangleI.ToString">
            <summary>Converts the Location and <see cref="P:osu.Framework.Graphics.Primitives.RectangleI.Size"/> of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> to a human-readable string.</summary>
            <returns>A string that contains the position, width, and height of this <see cref="T:osu.Framework.Graphics.Primitives.RectangleI"/> structure¾for example, "{X=20, Y=20, Width=100, Height=50}".</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:osu.Framework.Graphics.Primitives.Triangle.Contains(osuTK.Vector2)">
            <summary>
            Checks whether a point lies within the triangle.
            </summary>
            <param name="pos">The point to check.</param>
            <returns>Outcome of the check.</returns>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.Never">
            <summary>
            The test always fails.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.LessThan">
            <summary>
            The test passes when the incoming value is less than the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.LessThanOrEqual">
            <summary>
            The test passes when the incoming value is less than or equal to the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.Equal">
            <summary>
            The test passes when the incoming value equals the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.GreaterThanOrEqual">
            <summary>
            The test passes when the incoming value is greater than or equal to the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.GreaterThan">
            <summary>
            The test passes when the incoming value is greater than the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.NotEqual">
            <summary>
            The test passes when the incoming value is not equal to the value in the buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.BufferTestFunction.Always">
            <summary>
            The test always passes.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.ClearInfo">
            <summary>
            Information for how the current frame buffer should be cleared.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.ClearInfo.Default">
            <summary>
            The default clear properties, as defined by OpenGL.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ClearInfo.Colour">
            <summary>
            The colour to write to the frame buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ClearInfo.Depth">
            <summary>
            The depth to write to the frame buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ClearInfo.Stencil">
            <summary>
            The stencil value to write to the frame buffer.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.DeviceBufferPool">
            <summary>
            A pool for arbitrary <see cref="T:Veldrid.DeviceBuffer"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.DeviceBufferPool.#ctor(osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline,System.UInt32,Veldrid.BufferUsage,System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.DeviceBufferPool"/>.
            </summary>
            <param name="pipeline">The graphics pipeline.</param>
            <param name="bufferSize">The size of each buffer in the pool.</param>
            <param name="usage">The buffer usage.</param>
            <param name="name">A short description.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.IPooledDeviceBuffer">
            <summary>
            A device buffer retrieved from a <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.DeviceBufferPool"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Deferred.Allocation.IPooledDeviceBuffer.Buffer">
            <summary>
            The <see cref="T:Veldrid.DeviceBuffer"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference">
            <summary>
            Represents a reference to a block of memory allocated via a <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator"/>.
            </summary>
            <param name="BufferId">The buffer which the memory exists in.</param>
            <param name="Offset">The offset into the buffer at which the block starts.</param>
            <param name="Length">The length of the block.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Represents a reference to a block of memory allocated via a <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator"/>.
            </summary>
            <param name="BufferId">The buffer which the memory exists in.</param>
            <param name="Offset">The offset into the buffer at which the block starts.</param>
            <param name="Length">The length of the block.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.BufferId">
            <summary>The buffer which the memory exists in.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.Offset">
            <summary>The offset into the buffer at which the block starts.</summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.Length">
            <summary>The length of the block.</summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.WriteTo(osu.Framework.Graphics.Rendering.Deferred.DeferredContext,Veldrid.MappedResource,System.Int32)">
            <summary>
            Writes the contents of the memory block to a mapped <see cref="T:Veldrid.DeviceBuffer"/>.
            </summary>
            <param name="context">The deferred context.</param>
            <param name="target">The mapped <see cref="T:Veldrid.DeviceBuffer"/> to write to.</param>
            <param name="offsetInTarget">The offset in <paramref name="target"/> to write at.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference.WriteTo(osu.Framework.Graphics.Rendering.Deferred.DeferredContext,Veldrid.DeviceBuffer,System.Int32)">
            <summary>
            Writes the contents of the memory block to a <see cref="T:Veldrid.DeviceBuffer"/>.
            </summary>
            <param name="context">The deferred context.</param>
            <param name="target">The target to write to.</param>
            <param name="offsetInTarget">The offset in <paramref name="target"/> to write at.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator">
            <summary>
            Handles allocation of objects in a deferred rendering context.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.NewFrame">
            <summary>
            Prepares this <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator"/> for a new frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.Reference``1(``0)">
            <summary>
            References an object.
            </summary>
            <param name="obj">The object.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>A reference to the object. May be dereferenced via <see cref="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.Dereference``1(osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference)"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.Dereference``1(osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference)">
            <summary>
            Dereferences an object.
            </summary>
            <param name="reference">The reference.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>The object.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.AllocateObject``1(``0)">
            <summary>
            Allocates a region of memory containing an object.
            </summary>
            <param name="data">The object.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>A reference to the memory region containing the object.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.AllocateRegion``1(System.ReadOnlySpan{``0})">
            <summary>
            Allocates a region of memory containing some data.
            </summary>
            <param name="data">The data.</param>
            <typeparam name="T">The data type.</typeparam>
            <returns>A reference to the memory region containing the data.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.AllocateRegion(System.Int32)">
            <summary>
            Allocates an empty memory region of the specified length.
            </summary>
            <param name="length">The length.</param>
            <returns>A reference to the memory region.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator.GetRegion(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference)">
            <summary>
            Retrieves a <see cref="T:System.Span`1"/> over a referenced memory region.
            </summary>
            <param name="reference">The memory reference.</param>
            <returns>The <see cref="T:System.Span`1"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference">
            <summary>
            An object referenced via <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator"/>.
            </summary>
            <param name="Id">The object identifier.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference.#ctor(System.Int32)">
            <summary>
            An object referenced via <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceAllocator"/>.
            </summary>
            <param name="Id">The object identifier.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference.Id">
            <summary>The object identifier.</summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager">
            <summary>
            Handles contiguous allocation of all uniform buffer memory.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.buffer_chunk_size">
            <summary>
            For renderers which support binding buffer ranges, the buffer is split and bound in 64KiB chunks.
            This is a sane value which is supported by all renderers:
            - D3D11: https://learn.microsoft.com/en-us/windows/win32/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-vssetconstantbuffers1
              Supports 4096 constants, where a "constant" is a float4.
            - Metal: https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf
              Supports 65536 constants, where a "constant" is a type. We'll assume float.
            - OpenGL: Does not explicitly define a limit.
              The minimum block size defined by the standard is 16KiB, but this is based on the shader's definition rather than bind size.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.max_buffer_size">
            <summary>
            The size of a single buffer, if the renderer supports binding buffer ranges.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.bufferSize">
            <summary>
            The maximum size of a single buffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.Write(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference@)">
            <summary>
            Writes data to the uniform buffer.
            </summary>
            <param name="memory">The data to write.</param>
            <returns>A reference to the written data.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.Commit">
            <summary>
            Commits all written data.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager.NewFrame">
            <summary>
            Prepares this <see cref="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferManager"/> for a new frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.Allocation.VertexManager">
            <summary>
            Handles contiguous allocation of all vertex memory.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.VertexManager.Write``1(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference@)">
            <summary>
            Writes a primitive to the vertex buffer.
            </summary>
            <param name="primitive">The primitive to write. This should be exactly the full size of a primitive (triangle or quad).</param>
            <typeparam name="T">The type of primitive.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.VertexManager.Commit">
            <summary>
            Commits all written data.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.Allocation.VertexManager.Draw``1(System.Int32,osu.Framework.Graphics.Rendering.PrimitiveTopology,osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexLayout,System.Int32)">
            <summary>
            Draws vertices from the vertex buffer.
            </summary>
            <param name="vertexCount">The number of vertices to draw.</param>
            <param name="topology">The vertex topology.</param>
            <param name="indexLayout">The index buffer layout.</param>
            <param name="primitiveSize">The number of vertices in a primitive.</param>
            <typeparam name="T">The vertex type.</typeparam>
            <exception cref="T:System.ArgumentOutOfRangeException">If the <paramref name="indexLayout"/> is not supported.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.Reference``1(``0)">
            <summary>
            References an object.
            </summary>
            <param name="obj">The object.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>A reference to the object. May be dereferenced via <see cref="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.Dereference``1(osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference)"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.Dereference``1(osu.Framework.Graphics.Rendering.Deferred.Allocation.ResourceReference)">
            <summary>
            Dereferences an object.
            </summary>
            <param name="reference">The reference.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>The object.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.AllocateObject``1(``0)">
            <summary>
            Allocates a region of memory containing an object.
            </summary>
            <param name="data">The object.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>A reference to the memory region containing the object.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.AllocateRegion``1(System.ReadOnlySpan{``0})">
            <summary>
            Allocates a region of memory containing some data.
            </summary>
            <param name="data">The data.</param>
            <typeparam name="T">The data type.</typeparam>
            <returns>A reference to the memory region containing the data.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.AllocateRegion(System.Int32)">
            <summary>
            Allocates an empty memory region of the specified length.
            </summary>
            <param name="length">The length.</param>
            <returns>A reference to the memory region.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.GetRegion(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference)">
            <summary>
            Retrieves a <see cref="T:System.Span`1"/> over a referenced memory region.
            </summary>
            <param name="reference">The memory reference.</param>
            <returns>The <see cref="T:System.Span`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.DeferredContext.EnqueueEvent(osu.Framework.Graphics.Rendering.Deferred.Events.RenderEvent@)">
            <summary>
            Enqueues a render event.
            </summary>
            <param name="renderEvent">The render event.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Deferred.EventProcessor">
            <summary>
            Processes the render events for a single frame.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Deferred.Events.RenderEvent.Type">
            <summary>
            The type of render event.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.IDeferredShaderStorageBufferObject.Write(System.Int32,osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference)">
            <summary>
            Writes data to the buffer at the given index.
            </summary>
            <param name="index">The element index in the buffer at which to begin writing.</param>
            <param name="memory">The data to write.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.IDeferredUniformBuffer.Write(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference@)">
            <summary>
            Writes data to the buffer.
            </summary>
            <param name="memory">The data to write.</param>
            <returns>A reference to the written data.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.IDeferredUniformBuffer.Activate(osu.Framework.Graphics.Rendering.Deferred.Allocation.UniformBufferChunk)">
            <summary>
            Activates the given uniform buffer in the graphics pipeline.
            </summary>
            <param name="chunk">The uniform buffer, represented as a chunk of the full buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.IDeferredVertexBatch.Write(osu.Framework.Graphics.Rendering.Deferred.Allocation.MemoryReference@)">
            <summary>
            Writes a primitive to the buffer.
            </summary>
            <param name="primitive">The primitive to write. This should be exactly the full size of a primitive (triangle or quad).</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Deferred.IDeferredVertexBatch.Draw(System.Int32)">
            <summary>
            Draws a number of vertices from this batch.
            </summary>
            <param name="count">The number of vertices to draw.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.DepthInfo">
            <summary>
            Information for how depth should be handled.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.DepthInfo.Default">
            <summary>
            The default depth properties, as defined by OpenGL.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.DepthInfo.DepthTest">
            <summary>
            Whether depth testing should occur.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.DepthInfo.WriteDepth">
            <summary>
            Whether to write to the depth buffer if the depth test passed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.DepthInfo.Function">
            <summary>
            The depth test function.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.DepthValue">
            <summary>
            The depth value used to draw 2D objects to the screen.
            Starts at -1f and increments to 1f for each <see cref="T:osu.Framework.Graphics.Drawable"/> which draws a opaque interior through <see cref="M:osu.Framework.Graphics.DrawNode.DrawOpaqueInterior(osu.Framework.Graphics.Rendering.IRenderer)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.DepthValue.increment">
            <summary>
            A safe value, such that rounding issues don't occur within 16-bit float precision.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.DepthValue.max_count">
            <summary>
            Calculated as (1 - (-1)) / increment - 1.
            -1 is subtracted since a depth of 1.0f conflicts with the default backbuffer clear value.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.DepthValue.Increment">
            <summary>
            Increments the depth value.
            </summary>
            <returns>The post-incremented depth value.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.DepthValue.Reset">
            <summary>
            Reset to a pristine state.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.DepthValue.Set(System.Single)">
            <summary>
            Sets the depth to a given value. After this, the depth value can no longer be incremented.
            </summary>
            <param name="value">The new depth value.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.DepthValue.CanIncrement">
            <summary>
            Whether the depth value can be incremented.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Dummy.DummyFrameBuffer">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> that does nothing. May be used for tests that don't have a visual output.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Dummy.DummyNativeTexture">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/> that does nothing. May be used for tests that don't have a visual output.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Dummy.DummyRenderer">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Rendering.IRenderer"/> that does nothing. May be used for tests that don't have a visual output.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Dummy.DummyShader">
            <summary>
            An <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> that does nothing. May be used for tests that don't have a visual output.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IFrameBuffer.Texture">
            <summary>
            The framebuffer's backing texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IFrameBuffer.Size">
            <summary>
            The framebuffer's texture size.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IFrameBuffer.Bind">
            <summary>
            Binds the framebuffer.
            <para>Does not clear the buffer or reset the viewport/ortho.</para>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IFrameBuffer.Unbind">
            <summary>
            Unbinds the framebuffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.Renderer">
            <summary>
            The renderer that created this texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.Identifier">
            <summary>
            An identifier for this texture, to show up in the <see cref="T:osu.Framework.Graphics.Visualisation.TextureVisualiser"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.MaxSize">
            <summary>
            Maximum texture size in any direction.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.Width">
            <summary>
            The width of the texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.Height">
            <summary>
            The height of the texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.MipLevel">
            <summary>
            The level of the texture to display, or null to display all levels automatically.
            This is used by the texture visualiser tool for viewing textures on a specific mipmap level.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.Available">
            <summary>
            Whether the texture is in a usable state.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.TotalBindCount">
            <summary>
            The total number of times this texture has been bound, ever.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.BypassTextureUploadQueueing">
            <summary>
            By default, texture uploads are queued for upload at the beginning of each frame, allowing loading them ahead of time.
            When this is true, this will be bypassed and textures will only be uploaded on use. Should be set for every-frame texture uploads
            to avoid overloading the global queue.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.INativeTexture.UploadComplete">
            <summary>
            Whether the latest data has been uploaded.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.INativeTexture.FlushUploads">
            <summary>
            Flush any unprocessed uploads without actually uploading.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.INativeTexture.SetData(osu.Framework.Graphics.Textures.ITextureUpload)">
            <summary>
            Sets the pixel data of the texture.
            </summary>
            <param name="upload">The <see cref="T:osu.Framework.Graphics.Textures.ITextureUpload"/> containing the data.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.INativeTexture.Upload">
            <summary>
            Uploads this texture.
            </summary>
            <returns>Whether any uploads occurred.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.INativeTexture.GetByteSize">
            <summary>
            The size of this texture in bytes.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.IRenderer">
            <summary>
            Draws to the screen.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.IRenderer.MAX_DRAW_NODES">
            <summary>
            Maximum number of <see cref="T:osu.Framework.Graphics.DrawNode"/>s a <see cref="T:osu.Framework.Graphics.Drawable"/> can draw with.
            This is a carefully-chosen number to enable the update and draw threads to work concurrently without causing unnecessary load.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.IRenderer.MAX_VERTICES">
            <summary>
            Maximum number of vertices in a linear vertex buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.IRenderer.MAX_QUADS">
            <summary>
            Maximum number of quads in a quad vertex buffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.VerticalSync">
            <summary>
            Enables or disables vertical sync.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CacheStorage">
            <summary>
            A <see cref="T:osu.Framework.Platform.Storage"/> that can be used to cache objects.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.FrameIndex">
            <summary>
            The current frame index.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.MaxTextureSize">
            <summary>
            The maximum allowed texture size.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.MaxTexturesUploadedPerFrame">
            <summary>
            The maximum number of texture uploads to dequeue and upload per frame.
            Defaults to 32.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.MaxPixelsUploadedPerFrame">
            <summary>
            The maximum number of pixels to upload per frame.
            Defaults to 2 megapixels (8mb alloc).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.IsDepthRangeZeroToOne">
            <summary>
            Whether the depth is in the range [0, 1] (i.e. Reversed-Z). If <c>false</c>, depth is in the range [-1, 1].
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.IsUvOriginTopLeft">
            <summary>
            Whether the texture coordinates begin in the top-left of the texture. If <c>false</c>, (0, 0) corresponds to the bottom-left texel of the texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.IsClipSpaceYInverted">
            <summary>
            Whether the y-coordinate ranges from -1 (top) to 1 (bottom). If <c>false</c>, the y-coordinate ranges from -1 (bottom) to 1 (top).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CurrentMaskingInfo">
            <summary>
            The current masking parameters.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.Viewport">
            <summary>
            The current viewport.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.Scissor">
            <summary>
            The current scissor rectangle.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.ScissorOffset">
            <summary>
            The current scissor offset.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.ProjectionMatrix">
            <summary>
            The current projection matrix.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CurrentDepthInfo">
            <summary>
            The current depth parameters.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CurrentStencilInfo">
            <summary>
            The current stencil parameters.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CurrentWrapModeS">
            <summary>
            The current horizontal texture wrap mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.CurrentWrapModeT">
            <summary>
            The current vertical texture wrap mode.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.IsMaskingActive">
            <summary>
            Whether any masking parameters are currently applied.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.UsingBackbuffer">
            <summary>
            Whether the currently bound framebuffer is the backbuffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.WhitePixel">
            <summary>
            The texture for a white pixel.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.BackbufferDepth">
            <summary>
            The current depth of <see cref="T:osu.Framework.Graphics.Rendering.Vertices.TexturedVertex2D"/> vertices when drawn to the backbuffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IRenderer.IsInitialised">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Rendering.IRenderer"/> has been initialised using <see cref="M:osu.Framework.Graphics.Rendering.IRenderer.Initialise(osu.Framework.Platform.IGraphicsSurface)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.Initialise(osu.Framework.Platform.IGraphicsSurface)">
            <summary>
            Performs a once-off initialisation of this <see cref="T:osu.Framework.Graphics.Rendering.IRenderer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.BeginFrame(osuTK.Vector2)">
            <summary>
            Resets any states to prepare for drawing a new frame.
            </summary>
            <param name="windowSize">The full window size.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.FinishFrame">
            <summary>
            Performs any last actions before a frame ends.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.SwapBuffers">
            <summary>
            Swaps the back buffer with the front buffer to display the new frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.WaitUntilIdle">
            <summary>
            Waits until all renderer commands have been fully executed GPU-side, as signaled by the graphics backend.
            </summary>
            <remarks>
            This is equivalent to a <c>glFinish</c> call.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.WaitUntilNextFrameReady">
            <summary>
            Waits until the GPU signals that the next frame is ready to be rendered.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.MakeCurrent">
            <summary>
            Invoked when the rendering thread is active and commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.ClearCurrent">
            <summary>
            Invoked when the rendering thread is suspended and no more commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.FlushCurrentBatch(System.Nullable{osu.Framework.Graphics.Rendering.FlushBatchSource})">
            <summary>
            Flushes the currently active vertex batch.
            </summary>
            <param name="source">The source performing the flush, for profiling purposes.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.BindTexture(osu.Framework.Graphics.Textures.Texture,System.Int32,System.Nullable{osu.Framework.Graphics.Textures.WrapMode},System.Nullable{osu.Framework.Graphics.Textures.WrapMode})">
            <summary>
            Binds a texture.
            </summary>
            <param name="texture">The texture to bind.</param>
            <param name="unit">The sampling unit in which the texture is to be bound.</param>
            <param name="wrapModeS">The texture's horizontal wrap mode.</param>
            <param name="wrapModeT">The texture's vertex wrap mode.</param>
            <returns>Whether the texture was successfully bound.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.Clear(osu.Framework.Graphics.Rendering.ClearInfo)">
            <summary>
            Clears the currently bound frame buffer.
            </summary>
            <param name="clearInfo">The clearing parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushScissorState(System.Boolean)">
            <summary>
            Applies a new scissor test enablement state.
            </summary>
            <param name="enabled">Whether the scissor test is enabled.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopScissorState">
            <summary>
            Restores the last scissor test enablement state.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.SetBlend(osu.Framework.Graphics.BlendingParameters)">
            <summary>
            Sets the current blending state.
            </summary>
            <param name="blendingParameters">The blending parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.SetBlendMask(osu.Framework.Graphics.BlendingMask)">
            <summary>
            Sets a mask deciding which colour components are affected during blending.
            </summary>
            <param name="blendingMask">The blending mask.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushViewport(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Applies a new viewport rectangle.
            </summary>
            <param name="viewport">The viewport rectangle.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopViewport">
            <summary>
            Restores the last viewport rectangle.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushScissor(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Applies a new scissor rectangle.
            </summary>
            <param name="scissor">The scissor rectangle.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopScissor">
            <summary>
            Restores the last scissor rectangle.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushScissorOffset(osu.Framework.Graphics.Primitives.Vector2I)">
            <summary>
            Applies a new scissor offset to the scissor rectangle.
            </summary>
            <param name="offset">The scissor offset.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopScissorOffset">
            <summary>
            Restores the last scissor offset.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushProjectionMatrix(osuTK.Matrix4)">
            <summary>
            Applies a new projection matrix.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopProjectionMatrix">
            <summary>
            Restores the last projection matrix.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushMaskingInfo(osu.Framework.Graphics.Rendering.MaskingInfo@,System.Boolean)">
            <summary>
            Applies new masking parameters.
            </summary>
            <param name="maskingInfo">The masking parameters.</param>
            <param name="overwritePreviousScissor">Whether to use the last scissor rectangle.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopMaskingInfo">
            <summary>
            Restores the last masking parameters.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushDepthInfo(osu.Framework.Graphics.Rendering.DepthInfo)">
            <summary>
            Applies new depth parameters.
            </summary>
            <param name="depthInfo">The depth parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopDepthInfo">
            <summary>
            Restores the last depth parameters.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PushStencilInfo(osu.Framework.Graphics.Rendering.StencilInfo)">
            <summary>
            Applies new stencil parameters.
            </summary>
            <param name="stencilInfo">The stencil parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.PopStencilInfo">
            <summary>
            Restores the last stencil parameters.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.ScheduleExpensiveOperation(osu.Framework.Threading.ScheduledDelegate)">
            <summary>
            Schedules an expensive operation to a queue from which a maximum of one operation is performed per frame.
            </summary>
            <param name="operation">The operation to schedule.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.ScheduleDisposal``1(System.Action{``0},``0)">
            <summary>
            Schedules a disposal action to be run on the next frame.
            </summary>
            <param name="disposalAction">The disposal action.</param>
            <param name="target">The target to be disposed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.TakeScreenshot">
            <summary>
            Returns an image containing the current content of the backbuffer, i.e. takes a screenshot.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderPart(osu.Framework.Graphics.Shaders.IShaderStore,System.String,System.Byte[],osu.Framework.Graphics.Shaders.ShaderPartType)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.IShaderPart"/>.
            </summary>
            <param name="store">The shader store to load headers with.</param>
            <param name="name">The name of the shader part.</param>
            <param name="rawData">The content of the shader part.</param>
            <param name="partType">The type of the shader part.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Rendering.IShaderPart"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShader(System.String,osu.Framework.Graphics.Rendering.IShaderPart[])">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Shaders.IShader"/>.
            </summary>
            <param name="name">The name of the shader.</param>
            <param name="parts">The <see cref="T:osu.Framework.Graphics.Rendering.IShaderPart"/>s associated with this shader.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Shaders.IShader"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateFrameBuffer(osu.Framework.Graphics.Rendering.RenderBufferFormat[],osu.Framework.Graphics.Textures.TextureFilteringMode)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>.
            </summary>
            <param name="renderBufferFormats">Any render buffer formats.</param>
            <param name="filteringMode">The texture filtering mode.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateTexture(System.Int32,System.Int32,System.Boolean,osu.Framework.Graphics.Textures.TextureFilteringMode,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode,System.Nullable{osuTK.Graphics.Color4})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="manualMipmaps">Whether manual mipmaps will be uploaded to the texture. If false, the texture will compute mipmaps automatically.</param>
            <param name="filteringMode">The filtering mode.</param>
            <param name="initialisationColour">The colour to initialise texture levels with (in the case of sub region initial uploads). If null, no initialisation is provided out-of-the-box.</param>
            <param name="wrapModeS">The texture's horizontal wrap mode.</param>
            <param name="wrapModeT">The texture's vertex wrap mode.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateVideoTexture(System.Int32,System.Int32)">
            <summary>
            Creates a new video texture.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateLinearBatch``1(System.Int32,System.Int32,osu.Framework.Graphics.Rendering.PrimitiveTopology)">
            <summary>
            Creates a new linear vertex batch, accepting vertices and drawing as a given primitive type.
            </summary>
            <param name="size">Number of quads.</param>
            <param name="maxBuffers">Maximum number of vertex buffers.</param>
            <param name="topology">The type of primitive the vertices are drawn as.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateQuadBatch``1(System.Int32,System.Int32)">
            <summary>
            Creates a new quad vertex batch, accepting vertices and drawing as quads.
            </summary>
            <param name="size">Number of quads.</param>
            <param name="maxBuffers">Maximum number of vertex buffers.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateUniformBuffer``1">
            <summary>
            Creates a buffer that stores data for a uniform block of a <see cref="T:osu.Framework.Graphics.Shaders.IShader"/>.
            </summary>
            <typeparam name="TData">The type of data in the buffer.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderStorageBufferObject``1(System.Int32,System.Int32)">
            <summary>
            Creates a buffer that can be used to store an array of data for use in a <see cref="T:osu.Framework.Graphics.Shaders.IShader"/>.
            </summary>
            <param name="uboSize">The number of elements this buffer should contain if Shader Storage Buffer Objects <b>are not</b> supported by the platform.
            A safe value is <c>16384/{data_size}</c>. The value must match the definition of the UBO implementation in the shader.</param>
            <param name="ssboSize">The number of elements this buffer should contain if Shader Storage Buffer Objects <b>are</b> supported by the platform.
            May be any value up to <c>{vram_size}/{data_size}</c>.</param>
            <remarks>
            <list type="bullet">
            <item>Internally, this buffer may be implemented as either a "Uniform Buffer Object" (UBO) or
            a "Shader Storage Buffer Object" (SSBO) depending on the capabilities of the platform.</item>
            <item>UBOs are more broadly supported but cannot hold as much data as SSBOs.</item>
            <item>Shaders must provide implementations for both types of buffers to properly support this storage.</item>
            </list>
            </remarks>
            <typeparam name="TData">The type of data to be stored in the buffer.</typeparam>
            <returns>An <see cref="T:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.SetUniform``1(osu.Framework.Graphics.Shaders.IUniformWithValue{``0})">
            <summary>
            Sets the value of a uniform.
            </summary>
            <param name="uniform">The uniform to set.</param>
        </member>
        <member name="E:osu.Framework.Graphics.Rendering.IRenderer.TextureCreated">
            <summary>
            An event which is invoked every time a <see cref="T:osu.Framework.Graphics.Textures.Texture"/> is created.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IRenderer.GetAllTextures">
            <summary>
            Retrieves all <see cref="T:osu.Framework.Graphics.Textures.Texture"/>s that have been created.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1">
            <summary>
            A buffer which stores an array of data for use in a shader.
            </summary>
            <typeparam name="TData">The type of data contained.</typeparam>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1.Size">
            <summary>
            The size of this buffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1.Item(System.Int32)">
            <summary>
            The data contained by this <see cref="T:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.IUniformBuffer">
            <summary>
            A buffer which stores data for a uniform block.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.IUniformBuffer`1">
            <inheritdoc cref="T:osu.Framework.Graphics.Rendering.IUniformBuffer"/>
            <typeparam name="TData">The type of data in the buffer.</typeparam>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IUniformBuffer`1.Data">
            <summary>
            The data contained by this <see cref="T:osu.Framework.Graphics.Rendering.IUniformBuffer`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IVertexBatch.Size">
            <summary>
            The number of vertices in each VertexBuffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IVertexBatch.Draw">
            <summary>
            Draw any newly added indices in this vertex batch.
            </summary>
            <returns>The number of indices drawn, if any.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IVertexBatch`1.AddAction">
            <summary>
            Adds a vertex to this <see cref="T:osu.Framework.Graphics.Rendering.IVertexBatch`1"/>.
            This is a cached delegate of <see cref="M:osu.Framework.Graphics.Rendering.IVertexBatch`1.Add(`0)"/> that should be used in memory-critical locations such as <see cref="T:osu.Framework.Graphics.DrawNode"/>s.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.IVertexBuffer">
            <summary>
            Internal interface for all vertex buffers for use in <see cref="T:osu.Framework.Graphics.Rendering.Renderer"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IVertexBuffer.LastUseFrameIndex">
            <summary>
            The <see cref="P:osu.Framework.Graphics.Rendering.Renderer.FrameIndex"/> when this <see cref="T:osu.Framework.Graphics.Rendering.IVertexBuffer"/> was last used.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.IVertexBuffer.InUse">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Rendering.IVertexBuffer"/> is currently in use.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.IVertexBuffer.Free">
            <summary>
            Frees all resources allocated by this <see cref="T:osu.Framework.Graphics.Rendering.IVertexBuffer"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.MaskingInfo.ToMaskingSpace">
            <summary>
            This matrix transforms screen space coordinates to masking space (likely the parent
            space of the container doing the masking).
            It is used by a shader to determine which pixels to discard.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.RenderBufferFormat.D16">
            <summary>
            16-bit depth format.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.RenderBufferFormat.D32">
            <summary>
            32-bit depth format.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.RenderBufferFormat.D24S8">
            <summary>
            24-bit depth + 8-bit stencil format.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.RenderBufferFormat.D32S8">
            <summary>
            32-bit depth + 8-bit stencil format.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.Renderer">
            <summary>
            Represents a base <see cref="T:osu.Framework.Graphics.Rendering.IRenderer"/> implementation for working renderers.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Renderer.RESOURCE_FREE_NO_USAGE_LENGTH">
            <summary>
            The length of no usage (in frames) before freeing unused resources.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Renderer.ScissorState">
            <summary>
            Whether scissor is currently enabled.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Renderer.FrameBuffer">
            <summary>
            The current framebuffer, or null if the backbuffer is used.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Renderer.Shader">
            <summary>
            The current shader, or null if no shader is currently bound.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.BeginFrame(osuTK.Vector2)">
            <summary>
            Resets any states to prepare for drawing a new frame.
            </summary>
            <param name="windowSize">The full window size.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.FinishFrame">
            <summary>
            Performs any last actions before a frame ends.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.TakeScreenshot">
            <summary>
            Returns an image containing the current content of the backbuffer, i.e. takes a screenshot.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.Initialise(osu.Framework.Platform.IGraphicsSurface)">
            <summary>
            Performs a once-off initialisation of this <see cref="T:osu.Framework.Graphics.Rendering.Renderer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SwapBuffers">
            <summary>
            Swaps the back buffer with the front buffer to display the new frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.WaitUntilIdle">
            <summary>
            Waits until all renderer commands have been fully executed GPU-side, as signaled by the graphics backend.
            </summary>
            <remarks>
            This is equivalent to a <c>glFinish</c> call.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.MakeCurrent">
            <summary>
            Invoked when the rendering thread is active and commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.ClearCurrent">
            <summary>
            Invoked when the rendering thread is suspended and no more commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.ClearImplementation(osu.Framework.Graphics.Rendering.ClearInfo)">
            <summary>
            Informs the graphics device to clear the color and depth targets of the currently bound framebuffer.
            </summary>
            <param name="clearInfo">The clear parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetBlendImplementation(osu.Framework.Graphics.BlendingParameters)">
            <summary>
            Updates the graphics device with the new blending parameters.
            </summary>
            <param name="blendingParameters">The blending parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetBlendMaskImplementation(osu.Framework.Graphics.BlendingMask)">
            <summary>
            Updates the graphics device with the new blending mask.
            </summary>
            <param name="blendingMask">The blending mask.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetViewportImplementation(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Updates the graphics device with a new viewport rectangle.
            </summary>
            <param name="viewport">The viewport to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetScissorImplementation(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Updates the graphics device with a new scissor rectangle.
            </summary>
            <param name="scissor">The scissor rectangle to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetScissorStateImplementation(System.Boolean)">
            <summary>
            Updates the graphics device with the new scissor state.
            </summary>
            <param name="enabled">Whether scissor should be enabled.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetDepthInfoImplementation(osu.Framework.Graphics.Rendering.DepthInfo)">
            <summary>
            Updates the graphics device with new depth parameters.
            </summary>
            <param name="depthInfo">The depth parameters to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetStencilInfoImplementation(osu.Framework.Graphics.Rendering.StencilInfo)">
            <summary>
            Updates the graphics device with new stencil parameters.
            </summary>
            <param name="stencilInfo">The stencil parameters to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.RegisterVertexBufferUse(osu.Framework.Graphics.Rendering.IVertexBuffer)">
            <summary>
            Notifies that a <see cref="T:osu.Framework.Graphics.Rendering.IVertexBuffer"/> has begun being used.
            </summary>
            <param name="buffer">The <see cref="T:osu.Framework.Graphics.Rendering.IVertexBuffer"/> in use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetActiveBatch(osu.Framework.Graphics.Rendering.IVertexBatch)">
            <summary>
            Sets the last vertex batch used for drawing.
            <para>
            This is done so that various methods that change renderer state can force-draw the batch
            before continuing with the state change.
            </para>
            </summary>
            <param name="batch">The batch.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.FlushCurrentBatch(System.Nullable{osu.Framework.Graphics.Rendering.FlushBatchSource})">
            <summary>
            Flushes the currently active vertex batch.
            </summary>
            <param name="source">The source performing the flush, for profiling purposes.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.BindTexture(osu.Framework.Graphics.Rendering.INativeTexture,System.Int32,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Binds a native texture. Generally used by internal components of renderer implementations.
            </summary>
            <param name="texture">The native texture to bind.</param>
            <param name="unit">The sampling unit in which the texture is to be bound.</param>
            <param name="wrapModeS">The texture's horizontal wrap mode.</param>
            <param name="wrapModeT">The texture's vertex wrap mode.</param>
            <returns>Whether the texture was successfully bound.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.UnbindTexture(System.Int32)">
            <summary>
            Unbinds any bound texture.
            </summary>
            <param name="unit">The sampling unit in which the texture is to be unbound.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.EnqueueTextureUpload(osu.Framework.Graphics.Rendering.INativeTexture)">
            <summary>
            Enqueues a texture to be uploaded in the next frame.
            </summary>
            <param name="texture">The texture to be uploaded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetTextureImplementation(osu.Framework.Graphics.Rendering.INativeTexture,System.Int32)">
            <summary>
            Informs the graphics device to use the given texture for drawing.
            </summary>
            <param name="texture">The texture, or null to use default texture.</param>
            <param name="unit">The sampling unit in which the texture is to be bound.</param>
            <returns>Whether the texture was set successfully.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetFrameBufferImplementation(osu.Framework.Graphics.Rendering.IFrameBuffer)">
            <summary>
            Informs the graphics device to use the given framebuffer for drawing.
            </summary>
            <param name="frameBuffer">The framebuffer to use, or null to use the backbuffer (i.e. main framebuffer).</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.DeleteFrameBuffer(osu.Framework.Graphics.Rendering.IFrameBuffer)">
            <summary>
            Deletes a frame buffer.
            </summary>
            <param name="frameBuffer">The frame buffer to delete.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetShaderImplementation(osu.Framework.Graphics.Shaders.IShader)">
            <summary>
            Informs the graphics device to use the given shader for drawing.
            </summary>
            <param name="shader">The shader to use.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.SetUniformImplementation``1(osu.Framework.Graphics.Shaders.IUniformWithValue{``0})">
            <summary>
            Informs the graphics device to update the value of the given uniform.
            </summary>
            <param name="uniform">The uniform to update.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateShaderPart(osu.Framework.Graphics.Shaders.IShaderStore,System.String,System.Byte[],osu.Framework.Graphics.Shaders.ShaderPartType)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderPart(osu.Framework.Graphics.Shaders.IShaderStore,System.String,System.Byte[],osu.Framework.Graphics.Shaders.ShaderPartType)"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateShader(System.String,osu.Framework.Graphics.Rendering.IShaderPart[],osu.Framework.Graphics.Shaders.ShaderCompilationStore)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShader(System.String,osu.Framework.Graphics.Rendering.IShaderPart[])"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateLinearBatch``1(System.Int32,System.Int32,osu.Framework.Graphics.Rendering.PrimitiveTopology)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateLinearBatch``1(System.Int32,System.Int32,osu.Framework.Graphics.Rendering.PrimitiveTopology)"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateQuadBatch``1(System.Int32,System.Int32)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateQuadBatch``1(System.Int32,System.Int32)"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateUniformBuffer``1">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateUniformBuffer``1"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateShaderStorageBufferObject``1(System.Int32,System.Int32)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderStorageBufferObject``1(System.Int32,System.Int32)"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateNativeTexture(System.Int32,System.Int32,System.Boolean,osu.Framework.Graphics.Textures.TextureFilteringMode,System.Nullable{osuTK.Graphics.Color4})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/>.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="manualMipmaps">Whether manual mipmaps will be uploaded to the texture. If false, the texture will compute mipmaps automatically.</param>
            <param name="filteringMode">The filtering mode.</param>
            <param name="initialisationColour">The colour to initialise texture levels with (in the case of sub region initial uploads). If null, no initialisation is provided out-of-the-box.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateNativeVideoTexture(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/> for video sprites.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <returns>The video <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.Renderer.CreateTexture(osu.Framework.Graphics.Rendering.INativeTexture,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Textures.Texture"/> based off an <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/>.
            </summary>
            <param name="nativeTexture">The <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/> to create the texture with.</param>
            <param name="wrapModeS">The horizontal wrap mode of the texture.</param>
            <param name="wrapModeT">The vertical wrap mode of the texture.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</returns>
        </member>
        <member name="E:osu.Framework.Graphics.Rendering.Renderer.TextureCreated">
            <summary>
            An event which is invoked every time a <see cref="T:osu.Framework.Graphics.Textures.Texture"/> is created.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.RendererDisposalQueue">
            <summary>
            Helper class used to manage disposal of renderer components in a thread-safe manner.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererDisposalQueue.ScheduleDisposal``1(System.Action{``0},``0)">
            <summary>
            Schedules a new disposal action to be executed at a later point in time.
            This method can be called concurrently from multiple threads.
            By default the disposal will run <see cref="F:osu.Framework.Graphics.Rendering.IRenderer.MAX_DRAW_NODES"/> frames after enqueueing.
            </summary>
            <param name="disposalAction">The disposal action to be executed.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererDisposalQueue.CheckPendingDisposals">
            <summary>
            Checks pending disposals and executes ones whose frame delay has expired.
            This method can NOT be called concurrently from multiple threads.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.DrawTriangle(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.Graphics.Textures.Texture,osu.Framework.Graphics.Primitives.Triangle,osu.Framework.Graphics.Colour.ColourInfo,System.Nullable{osu.Framework.Graphics.Primitives.RectangleF},System.Action{osu.Framework.Graphics.Rendering.Vertices.TexturedVertex2D},System.Nullable{osuTK.Vector2},System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})">
            <summary>
            Draws a textured triangle to the screen.
            </summary>
            <param name="renderer">The renderer to draw the texture with.</param>
            <param name="texture">The texture to fill the triangle with.</param>
            <param name="vertexTriangle">The triangle to draw.</param>
            <param name="textureRect">The texture rectangle.</param>
            <param name="drawColour">The vertex colour.</param>
            <param name="vertexAction">An action that adds vertices to a <see cref="T:osu.Framework.Graphics.Rendering.IVertexBatch`1"/>.</param>
            <param name="inflationPercentage">The percentage amount that <paramref name="textureRect"/> should be inflated.</param>
            <param name="textureCoords">The texture coordinates of the triangle's vertices (translated from the corresponding quad's rectangle).</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.DrawQuad(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.Graphics.Textures.Texture,osu.Framework.Graphics.Primitives.Quad,osu.Framework.Graphics.Colour.ColourInfo,System.Nullable{osu.Framework.Graphics.Primitives.RectangleF},System.Action{osu.Framework.Graphics.Rendering.Vertices.TexturedVertex2D},System.Nullable{osuTK.Vector2},System.Nullable{osuTK.Vector2},System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})">
            <summary>
            Draws a textured quad to the screen.
            </summary>
            <param name="renderer">The renderer to draw the texture with.</param>
            <param name="texture">The texture to fill the triangle with.</param>
            <param name="vertexQuad">The quad to draw.</param>
            <param name="textureRect">The texture rectangle.</param>
            <param name="drawColour">The vertex colour.</param>
            <param name="vertexAction">An action that adds vertices to a <see cref="T:osu.Framework.Graphics.Rendering.IVertexBatch`1"/>.</param>
            <param name="inflationPercentage">The percentage amount that <paramref name="textureRect"/> should be inflated.</param>
            <param name="blendRangeOverride">The range over which the edges of the <paramref name="textureRect"/> should be blended.</param>
            <param name="textureCoords">The texture coordinates of the quad's vertices.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.DrawClipped``1(osu.Framework.Graphics.Rendering.IRenderer,``0@,osu.Framework.Graphics.Textures.Texture,osu.Framework.Graphics.Colour.ColourInfo,System.Nullable{osu.Framework.Graphics.Primitives.RectangleF},System.Action{osu.Framework.Graphics.Rendering.Vertices.TexturedVertex2D},System.Nullable{osuTK.Vector2},System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})">
            <summary>
            Clips a <see cref="T:osu.Framework.Graphics.Primitives.IConvexPolygon"/> to the current masking area and draws the resulting triangles to the screen using the specified texture.
            </summary>
            <param name="renderer">The renderer to draw the texture with.</param>
            <param name="polygon">The polygon to draw.</param>
            <param name="texture">The texture to fill the triangle with.</param>
            <param name="textureRect">The texture rectangle.</param>
            <param name="drawColour">The vertex colour.</param>
            <param name="vertexAction">An action that adds vertices to a <see cref="T:osu.Framework.Graphics.Rendering.IVertexBatch`1"/>.</param>
            <param name="inflationPercentage">The percentage amount that <paramref name="textureRect"/> should be inflated.</param>
            <param name="textureCoords">The texture coordinates of the polygon's vertices (translated from the corresponding quad's rectangle).</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.DrawFrameBuffer(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.Graphics.Rendering.IFrameBuffer,osu.Framework.Graphics.Primitives.Quad,osu.Framework.Graphics.Colour.ColourInfo,System.Action{osu.Framework.Graphics.Rendering.Vertices.TexturedVertex2D},System.Nullable{osuTK.Vector2},System.Nullable{osuTK.Vector2})">
            <summary>
            Draws a <see cref="T:osu.Framework.Graphics.OpenGL.Buffers.GLFrameBuffer"/> to the screen.
            </summary>
            <param name="renderer">The renderer to draw the framebuffer with.</param>
            <param name="frameBuffer">The <see cref="T:osu.Framework.Graphics.OpenGL.Buffers.GLFrameBuffer"/> to draw.</param>
            <param name="vertexQuad">The destination vertices.</param>
            <param name="drawColour">The colour to draw the <paramref name="frameBuffer"/> with.</param>
            <param name="vertexAction">An action that adds vertices to a <see cref="T:osu.Framework.Graphics.Rendering.IVertexBatch`1"/>.</param>
            <param name="inflationPercentage">The percentage amount that the frame buffer area  should be inflated.</param>
            <param name="blendRangeOverride">The range over which the edges of the frame buffer should be blended.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.PushOrtho(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Applies a new orthographic projection rectangle.
            </summary>
            <remarks>
            After usage, restore the last state with <see cref="M:osu.Framework.Graphics.Rendering.RendererExtensions.PopOrtho(osu.Framework.Graphics.Rendering.IRenderer)"/> or <see cref="M:osu.Framework.Graphics.Rendering.IRenderer.PopProjectionMatrix"/>.
            </remarks>
            <param name="renderer">The renderer.</param>
            <param name="ortho">The rectangle to create the orthographic projection from.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.PopOrtho(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Restores the last projection rectangle.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.PushLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer,osuTK.Matrix4)">
            <summary>
            Applies a new projection matrix so that all drawn vertices are transformed by <paramref name="matrix"/>. This also affects masking.
            </summary>
            <remarks>
            After usage, restore the last state with <see cref="M:osu.Framework.Graphics.Rendering.RendererExtensions.PopLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer)"/>.
            </remarks>
            <param name="renderer">The renderer.</param>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.PushLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer,osuTK.Matrix3)">
            <inheritdoc cref="M:osu.Framework.Graphics.Rendering.RendererExtensions.PushLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer,osuTK.Matrix4)"/>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.RendererExtensions.PopLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Restores the last projection matrix after a call to <see cref="M:osu.Framework.Graphics.Rendering.RendererExtensions.PushLocalMatrix(osu.Framework.Graphics.Rendering.IRenderer,osuTK.Matrix4)"/>.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1">
            <summary>
            A wrapper around <see cref="T:osu.Framework.Graphics.Rendering.IShaderStorageBufferObject`1"/> providing push/pop semantics for writing
            an arbitrary amount of data to an unbounded set of shader storage buffer objects.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.CurrentOffset">
            <summary>
            The index of the current item inside <see cref="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.CurrentBuffer"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.CurrentBuffer">
            <summary>
            The buffer that contains the current object.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.currentBufferOffset">
            <summary>
            The index of the item inside the buffer containing it.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.currentBufferIndex">
            <summary>
            The index of the buffer containing the current item.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.nextAdditionIndex">
            <summary>
            A monotonically increasing (during a frame) index at which items are added to the stack.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.currentIndex">
            <summary>
            The index of the current item, based on the total size of this stack.
            This is incremented and decremented during a frame through <see cref="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.Push(`0)"/> and <see cref="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.Pop"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.bufferSize">
            <summary>
            The size of an individual buffer of this stack.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.#ctor(osu.Framework.Graphics.Rendering.IRenderer,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1"/>.
            </summary>
            <param name="renderer">The <see cref="T:osu.Framework.Graphics.Rendering.IRenderer"/>.</param>
            <param name="uboSize">Must be at least 2. See <see cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderStorageBufferObject``1(System.Int32,System.Int32)"/></param>
            <param name="ssboSize">Must be at least 2. See <see cref="M:osu.Framework.Graphics.Rendering.IRenderer.CreateShaderStorageBufferObject``1(System.Int32,System.Int32)"/></param>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.Push(`0)">
            <summary>
            Pushes a new item to this stack.
            </summary>
            <param name="item">The item.</param>
            <returns>The index inside the resulting buffer at which the item is located.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.Pop">
            <summary>
            Pops the last item from the stack.
            </summary>
            <remarks>
            This does not remove the item from the stack or the underlying buffer,
            but adjusts <see cref="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.CurrentOffset"/> and <see cref="P:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.CurrentBuffer"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Rendering.ShaderStorageBufferObjectStack`1.Clear">
            <summary>
            Clears the stack. This should be called at the start of every frame to prevent runaway VRAM usage.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.StencilInfo.Default">
            <summary>
            The default stencil properties.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.StencilTest">
            <summary>
            Whether stencil testing should occur.
            If this is false, no <see cref="T:osu.Framework.Graphics.Rendering.StencilOperation"/> will occur (use <see cref="F:osu.Framework.Graphics.Rendering.BufferTestFunction.Always"/> instead).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.TestFunction">
            <summary>
            The stencil test function.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.TestValue">
            <summary>
            The stencil test value to compare against.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.Mask">
            <summary>
            The stencil mask.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.StencilTestFailOperation">
            <summary>
            The operation to perform on the stencil buffer when the stencil test fails.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.DepthTestFailOperation">
            <summary>
            The operation to perform on the stencil buffer when the depth test fails.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilInfo.TestPassedOperation">
            <summary>
            The operation to perform on the stencil buffer when both the stencil and depth tests pass.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Zero">
            <summary>
            Set the stencil buffer to 0.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Invert">
            <summary>
            Bitwise invert the stencil buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Keep">
            <summary>
            Do not change the stencil buffer.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Replace">
            <summary>
            Replce the stenciil buffer with the <see cref="F:osu.Framework.Graphics.Rendering.StencilInfo.TestValue"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Increase">
            <summary>
            Increase the stencil buffer by 1 if it's lower than the maximum value.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.Decrease">
            <summary>
            Decrease the stencil buffer by 1 it's higher than 0.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.IncreaseWrap">
            <summary>
            Increase the stencil buffer by 1 and wrap to 0 if the result is above the maximum value.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.StencilOperation.DecreaseWrap">
            <summary>
            Decrease the stencil buffer by 1 and wrap to maximum value if the result is below 0.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Vertices.VertexMemberAttribute.Count">
            <summary>
            The number of components of <see cref="P:osu.Framework.Graphics.Rendering.Vertices.VertexMemberAttribute.Type"/> represented by this vertex attribute member.
            E.g. a <see cref="T:osuTK.Vector2"/> is represented by **2** <see cref="F:osuTK.Graphics.ES30.VertexAttribPointerType.Float"/> components.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Vertices.VertexMemberAttribute.Type">
            <summary>
            The type of each component of this vertex attribute member.
            E.g. a <see cref="T:osuTK.Vector2"/> is represented by 2 **<see cref="F:osuTK.Graphics.ES30.VertexAttribPointerType.Float"/>** components.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Rendering.Vertices.VertexMemberAttribute.Normalized">
            <summary>
            Whether this vertex attribute member is normalized. If this is set to true, the member will be mapped to
            a range of [-1, 1] (signed) or [0, 1] (unsigned) when it is passed to the shader.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Rendering.Vertices.VertexMemberAttribute.Offset">
            <summary>
            The offset of this attribute member in the struct. This is computed internally by the framework.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.ComputeProgramCompilation.WasCached">
            <summary>
            Whether this compilation was retrieved from cache.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.ComputeProgramCompilation.ProgramBytes">
            <summary>
            The SpirV bytes for the program.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.ComputeProgramCompilation.ProgramText">
            <summary>
            The cross-compiled program text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.ComputeProgramCompilation.Reflection">
            <summary>
            A reflection of the shader program, describing the layout of resources.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.IShader.Uniforms">
            <summary>
            All uniforms declared by this shader.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IShader.Bind">
            <summary>
            Binds this shader to be used for rendering.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IShader.Unbind">
            <summary>
            Unbinds this shader.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.IShader.IsLoaded">
            <summary>
            Whether this shader is ready for use.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.IShader.IsBound">
            <summary>
            Whether this shader is currently bound.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IShader.GetUniform``1(System.String)">
            <summary>
            Retrieves a uniform from the shader.
            </summary>
            <param name="name">The name of the uniform.</param>
            <returns>The retrieved uniform.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IShader.BindUniformBlock(System.String,osu.Framework.Graphics.Rendering.IUniformBuffer)">
            <summary>
            Binds an <see cref="T:osu.Framework.Graphics.Rendering.IUniformBuffer"/> to a uniform block of the given name.
            </summary>
            <param name="blockName">The uniform block name.</param>
            <param name="buffer">The buffer to bind to the block.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.IUniform">
            <summary>
            Represents an updateable shader uniform.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.IUniform.Owner">
            <summary>
            The shader which this uniform was declared in.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.IUniform.Location">
            <summary>
            The location of this uniform in relation to all other uniforms in the shader.
            </summary>
            <remarks>
            Depending on the renderer used, this could either be zero-based index number or location in bytes.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IUniform.Update">
            <summary>
            Updates the renderer with the current value of this uniform.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IUniformWithValue`1.GetValueByRef">
            <summary>
            Returns a reference to the current value of this uniform.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.IUniformWithValue`1.GetValue">
            <summary>
            Returns the current value of this uniform.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Shaders.ShaderCompilationStore.cache_version">
            <summary>
            A cache-busting mechanism to be used for when the cross-compilation output changes (i.e. a change to the cross-compiler itself), but the input is not affected.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.ShaderManager.#ctor(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.IO.Stores.IResourceStore{System.Byte[]})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Graphics.Shaders.ShaderManager"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.ShaderManager.Load(System.String,System.String)">
            <summary>
            Retrieves a usable <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> given the vertex and fragment shaders.
            </summary>
            <param name="vertex">The vertex shader name.</param>
            <param name="fragment">The fragment shader name.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.ShaderManager.GetCachedShader(System.String,System.String)">
            <summary>
            Attempts to retrieve an already-cached shader.
            </summary>
            <param name="vertex">The vertex shader name.</param>
            <param name="fragment">The fragment shader name.</param>
            <returns>A cached <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> instance, if existing.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.ShaderManager.GetCachedShaderPart(System.String)">
            <summary>
            Attempts to retrieve an already-cached shader part.
            </summary>
            <param name="name">The name of the shader part.</param>
            <returns>A cached <see cref="T:osu.Framework.Graphics.Rendering.IShaderPart"/> instance, if existing.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Shaders.ShaderManager.GetRawData(System.String)">
            <summary>
            Attempts to retrieve the raw data for a shader file.
            </summary>
            <param name="fileName">The file name.</param>
            <returns></returns>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformBool">
            <summary>
            Must be aligned to a 4-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformFloat">
            <summary>
            Must be aligned to a 4-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformInt">
            <summary>
            Must be aligned to a 4-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformMatrix3">
            <summary>
            Must be aligned to a 16-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformMatrix4">
            <summary>
            Must be aligned to a 16-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformPadding12">
            <summary>
            A single 12-byte padding to be used for uniform block definitions.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformPadding4">
            <summary>
            A single 4-byte padding to be used for uniform block definitions.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformPadding8">
            <summary>
            A single 8-byte padding to be used for uniform block definitions.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformVector2">
            <summary>
            Must be aligned to an 8-byte boundary.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformVector3">
            <summary>
            Must be aligned to a 16-byte boundary. Is equivalent to a <see cref="T:osu.Framework.Graphics.Shaders.Types.UniformVector4"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shaders.Types.UniformVector4">
            <summary>
            Must be aligned to a 16-byte boundary.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.WasCached">
            <summary>
            Whether this compilation was retrieved from cache.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.VertexBytes">
            <summary>
            The SpirV bytes for the vertex shader.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.FragmentBytes">
            <summary>
            The SpirV bytes for the fragment shader.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.VertexText">
            <summary>
            The cross-compiled vertex shader text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.FragmentText">
            <summary>
            The cross-compiled fragment shader text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shaders.VertexFragmentShaderCompilation.Reflection">
            <summary>
            A reflection of the shader program, describing the layout of resources.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shapes.Box">
            <summary>
            A simple rectangular box. Can be colored using the <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> property.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shapes.Circle">
            <summary>
            A simple <see cref="T:osu.Framework.Graphics.Containers.CircularContainer"/> with a fill using a <see cref="T:osu.Framework.Graphics.Shapes.Box"/>. Can be coloured using the <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> property.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shapes.EquilateralTriangle">
            <summary>
            A triangle which has all side lengths and angles equal.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Shapes.EquilateralTriangle.sidelength_to_height_factor">
            <summary>
            For equilateral triangles, height = cos(30) * sidelength = ~0.866 * sidelength.
            This is applied to the side length of the triangle to determine the height.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shapes.EquilateralTriangle.Size">
            <summary>
            The size of this triangle.
            <para>
            When setting the size, the Y-value is ignored (use <see cref="P:osu.Framework.Graphics.Shapes.EquilateralTriangle.Height"/> if you desire a specific height instead).
            </para>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Shapes.EquilateralTriangle.Height">
            <summary>
            Sets the height of the triangle, adjusting the width as appropriate.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Shapes.Triangle">
            <summary>
            Represents a sprite that is drawn in a triangle shape, instead of a rectangle shape.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Shapes.Triangle.#ctor">
            <summary>
            Creates a new triangle with a white pixel as texture.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.BufferedContainerView`1">
            <summary>
            A view that displays the contents of a <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.BufferedContainerView`1.SynchronisedDrawQuad">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Sprites.BufferedContainerView`1"/> should be drawn using the original <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/>'s draw quad.
            </summary>
            <remarks>
            This can be useful to display the <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/> as an overlay on top of itself.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.BufferedContainerView`1.DisplayOriginalEffects">
            <summary>
            Whether the effects drawn by the <see cref="T:osu.Framework.Graphics.Containers.BufferedContainer`1"/> should also be drawn for this view.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.BufferedContainerView`1.BufferSpriteDrawNode.shouldDrawEffectBuffer">
            <summary>
            Whether the source's current effect buffer should be drawn.
            This is true if we explicitly want to draw it or if no effects were drawn by the source. In the case that no effects were drawn by the source,
            the current effect buffer will be the main buffer, and what will be drawn is the main buffer with the effect blending applied.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Icon500Px">
            <summary>
            500px
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.AccessibleIcon">
            <summary>
            Accessible Icon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Accusoft">
            <summary>
            Accusoft
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.AcquisitionsIncorporated">
            <summary>
            Acquisitions Incorporated
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Adn">
            <summary>
            App.net
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Adobe">
            <summary>
            Adobe
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Adversal">
            <summary>
            Adversal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Affiliatetheme">
            <summary>
            affiliatetheme
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Airbnb">
            <summary>
            Airbnb
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Algolia">
            <summary>
            Algolia
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Alipay">
            <summary>
            Alipay
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Amazon">
            <summary>
            Amazon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.AmazonPay">
            <summary>
            Amazon Pay
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Amilia">
            <summary>
            Amilia
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Angellist">
            <summary>
            AngelList
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Angrycreative">
            <summary>
            Angry Creative
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Angular">
            <summary>
            Angular
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.AppStore">
            <summary>
            App Store
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.AppStoreIos">
            <summary>
            iOS App Store
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Apper">
            <summary>
            Apper Systems AB
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Apple">
            <summary>
            Apple
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ApplePay">
            <summary>
            Apple Pay
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Artstation">
            <summary>
            Artstation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Asymmetrik">
            <summary>
            Asymmetrik, Ltd.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Atlassian">
            <summary>
            Atlassian
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Audible">
            <summary>
            Audible
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Autoprefixer">
            <summary>
            Autoprefixer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Avianex">
            <summary>
            avianex
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Aviato">
            <summary>
            Aviato
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Aws">
            <summary>
            Amazon Web Services (AWS)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bandcamp">
            <summary>
            Bandcamp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.BattleNet">
            <summary>
            Battle.net
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Behance">
            <summary>
            Behance
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.BehanceSquare">
            <summary>
            Behance Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bimobject">
            <summary>
            BIMobject
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bitbucket">
            <summary>
            Bitbucket
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bitcoin">
            <summary>
            Bitcoin
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bity">
            <summary>
            Bity
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.BlackTie">
            <summary>
            Font Awesome Black Tie
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Blackberry">
            <summary>
            BlackBerry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Blogger">
            <summary>
            Blogger
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.BloggerB">
            <summary>
            Blogger B
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bluetooth">
            <summary>
            Bluetooth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.BluetoothB">
            <summary>
            Bluetooth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Bootstrap">
            <summary>
            Bootstrap
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Btc">
            <summary>
            BTC
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Buffer">
            <summary>
            Buffer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Buromobelexperte">
            <summary>
            Büromöbel-Experte GmbH &amp; Co. KG.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Buysellads">
            <summary>
            BuySellAds
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CanadianMapleLeaf">
            <summary>
            Canadian Maple Leaf
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcAmazonPay">
            <summary>
            Amazon Pay Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcAmex">
            <summary>
            American Express Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcApplePay">
            <summary>
            Apple Pay Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcDinersClub">
            <summary>
            Diner's Club Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcDiscover">
            <summary>
            Discover Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcJcb">
            <summary>
            JCB Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcMastercard">
            <summary>
            MasterCard Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcPaypal">
            <summary>
            Paypal Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcStripe">
            <summary>
            Stripe Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CcVisa">
            <summary>
            Visa Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Centercode">
            <summary>
            Centercode
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Centos">
            <summary>
            Centos
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Chrome">
            <summary>
            Chrome
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Chromecast">
            <summary>
            Chromecast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Cloudscale">
            <summary>
            cloudscale.ch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Cloudsmith">
            <summary>
            Cloudsmith
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Cloudversify">
            <summary>
            cloudversify
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Codepen">
            <summary>
            Codepen
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Codiepie">
            <summary>
            Codie Pie
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Confluence">
            <summary>
            Confluence
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Connectdevelop">
            <summary>
            Connect Develop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Contao">
            <summary>
            Contao
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Cpanel">
            <summary>
            cPanel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommons">
            <summary>
            Creative Commons
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsBy">
            <summary>
            Creative Commons Attribution
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsNc">
            <summary>
            Creative Commons Noncommercial
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsNcEu">
            <summary>
            Creative Commons Noncommercial (Euro Sign)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsNcJp">
            <summary>
            Creative Commons Noncommercial (Yen Sign)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsNd">
            <summary>
            Creative Commons No Derivative Works
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsPd">
            <summary>
            Creative Commons Public Domain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsPdAlt">
            <summary>
            Alternate Creative Commons Public Domain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsRemix">
            <summary>
            Creative Commons Remix
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsSa">
            <summary>
            Creative Commons Share Alike
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsSampling">
            <summary>
            Creative Commons Sampling
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsSamplingPlus">
            <summary>
            Creative Commons Sampling +
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsShare">
            <summary>
            Creative Commons Share
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CreativeCommonsZero">
            <summary>
            Creative Commons CC0
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.CriticalRole">
            <summary>
            Critical Role
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Css3">
            <summary>
            CSS 3 Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Css3Alt">
            <summary>
            Alternate CSS3 Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Cuttlefish">
            <summary>
            Cuttlefish
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.DAndD">
            <summary>
            Dungeons &amp; Dragons
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.DAndDBeyond">
            <summary>
            D&amp;D Beyond
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dashcube">
            <summary>
            DashCube
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Delicious">
            <summary>
            Delicious
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Deploydog">
            <summary>
            deploy.dog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Deskpro">
            <summary>
            Deskpro
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dev">
            <summary>
            DEV
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Deviantart">
            <summary>
            deviantART
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dhl">
            <summary>
            DHL
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Diaspora">
            <summary>
            Diaspora
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Digg">
            <summary>
            Digg Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.DigitalOcean">
            <summary>
            Digital Ocean
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Discord">
            <summary>
            Discord
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Discourse">
            <summary>
            Discourse
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dochub">
            <summary>
            DocHub
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Docker">
            <summary>
            Docker
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Draft2digital">
            <summary>
            Draft2digital
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dribbble">
            <summary>
            Dribbble
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.DribbbleSquare">
            <summary>
            Dribbble Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dropbox">
            <summary>
            Dropbox
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Drupal">
            <summary>
            Drupal Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Dyalog">
            <summary>
            Dyalog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Earlybirds">
            <summary>
            Earlybirds
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ebay">
            <summary>
            eBay
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Edge">
            <summary>
            Edge Browser
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Elementor">
            <summary>
            Elementor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ello">
            <summary>
            Ello
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ember">
            <summary>
            Ember
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Empire">
            <summary>
            Galactic Empire
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Envira">
            <summary>
            Envira Gallery
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Erlang">
            <summary>
            Erlang
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ethereum">
            <summary>
            Ethereum
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Etsy">
            <summary>
            Etsy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Evernote">
            <summary>
            Evernote
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Expeditedssl">
            <summary>
            ExpeditedSSL
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Facebook">
            <summary>
            Facebook
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FacebookF">
            <summary>
            Facebook F
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FacebookMessenger">
            <summary>
            Facebook Messenger
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FacebookSquare">
            <summary>
            Facebook Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FantasyFlightGames">
            <summary>
            Fantasy Flight-games
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Fedex">
            <summary>
            FedEx
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Fedora">
            <summary>
            Fedora
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Figma">
            <summary>
            Figma
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Firefox">
            <summary>
            Firefox
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FirstOrder">
            <summary>
            First Order
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FirstOrderAlt">
            <summary>
            Alternate First Order
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Firstdraft">
            <summary>
            firstdraft
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Flickr">
            <summary>
            Flickr
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Flipboard">
            <summary>
            Flipboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Fly">
            <summary>
            Fly
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.IconFontAwesome">
            <summary>
            Font Awesome
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FontAwesomeAlt">
            <summary>
            Alternate Font Awesome
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FontAwesomeFlag">
            <summary>
            Font Awesome Flag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FontAwesomeLogoFull">
            <summary>
            Font Awesome Full Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Fonticons">
            <summary>
            Fonticons
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FonticonsFi">
            <summary>
            Fonticons Fi
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FortAwesome">
            <summary>
            Fort Awesome
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FortAwesomeAlt">
            <summary>
            Alternate Fort Awesome
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Forumbee">
            <summary>
            Forumbee
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Foursquare">
            <summary>
            Foursquare
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.FreeCodeCamp">
            <summary>
            Free Code Camp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Freebsd">
            <summary>
            FreeBSD
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Fulcrum">
            <summary>
            Fulcrum
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GalacticRepublic">
            <summary>
            Galactic Republic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GalacticSenate">
            <summary>
            Galactic Senate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GetPocket">
            <summary>
            Get Pocket
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gg">
            <summary>
            GG Currency
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GgCircle">
            <summary>
            GG Currency Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Git">
            <summary>
            Git
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GitSquare">
            <summary>
            Git Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Github">
            <summary>
            GitHub
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GithubAlt">
            <summary>
            Alternate GitHub
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GithubSquare">
            <summary>
            GitHub Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gitkraken">
            <summary>
            GitKraken
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gitlab">
            <summary>
            GitLab
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gitter">
            <summary>
            Gitter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Glide">
            <summary>
            Glide
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GlideG">
            <summary>
            Glide G
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gofore">
            <summary>
            Gofore
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Goodreads">
            <summary>
            Goodreads
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GoodreadsG">
            <summary>
            Goodreads G
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Google">
            <summary>
            Google Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GoogleDrive">
            <summary>
            Google Drive
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GooglePlay">
            <summary>
            Google Play
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GooglePlus">
            <summary>
            Google Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GooglePlusG">
            <summary>
            Google Plus G
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GooglePlusSquare">
            <summary>
            Google Plus Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.GoogleWallet">
            <summary>
            Google Wallet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gratipay">
            <summary>
            Gratipay (Gittip)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Grav">
            <summary>
            Grav
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gripfire">
            <summary>
            Gripfire, Inc.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Grunt">
            <summary>
            Grunt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Gulp">
            <summary>
            Gulp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.HackerNews">
            <summary>
            Hacker News
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.HackerNewsSquare">
            <summary>
            Hacker News Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hackerrank">
            <summary>
            Hackerrank
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hips">
            <summary>
            Hips
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.HireAHelper">
            <summary>
            HireAHelper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hooli">
            <summary>
            Hooli
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hornbill">
            <summary>
            Hornbill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hotjar">
            <summary>
            Hotjar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Houzz">
            <summary>
            Houzz
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Html5">
            <summary>
            HTML 5 Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Hubspot">
            <summary>
            HubSpot
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Imdb">
            <summary>
            IMDB
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Instagram">
            <summary>
            Instagram
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Intercom">
            <summary>
            Intercom
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.InternetExplorer">
            <summary>
            Internet-explorer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Invision">
            <summary>
            InVision
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ioxhost">
            <summary>
            ioxhost
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ItchIo">
            <summary>
            itch.io
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Itunes">
            <summary>
            iTunes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ItunesNote">
            <summary>
            Itunes Note
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Java">
            <summary>
            Java
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.JediOrder">
            <summary>
            Jedi Order
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Jenkins">
            <summary>
            Jenkis
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Jira">
            <summary>
            Jira
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Joget">
            <summary>
            Joget
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Joomla">
            <summary>
            Joomla Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Js">
            <summary>
            JavaScript (JS)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.JsSquare">
            <summary>
            JavaScript (JS) Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Jsfiddle">
            <summary>
            jsFiddle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Kaggle">
            <summary>
            Kaggle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Keybase">
            <summary>
            Keybase
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Keycdn">
            <summary>
            KeyCDN
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Kickstarter">
            <summary>
            Kickstarter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.KickstarterK">
            <summary>
            Kickstarter K
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Korvue">
            <summary>
            KORVUE
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Laravel">
            <summary>
            Laravel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Lastfm">
            <summary>
            last.fm
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.LastfmSquare">
            <summary>
            last.fm Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Leanpub">
            <summary>
            Leanpub
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Less">
            <summary>
            Less
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Linkedin">
            <summary>
            LinkedIn
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.LinkedinIn">
            <summary>
            LinkedIn In
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Linode">
            <summary>
            Linode
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Linux">
            <summary>
            Linux
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Lyft">
            <summary>
            lyft
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Magento">
            <summary>
            Magento
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mailchimp">
            <summary>
            Mailchimp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mandalorian">
            <summary>
            Mandalorian
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Markdown">
            <summary>
            Markdown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mastodon">
            <summary>
            Mastodon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Maxcdn">
            <summary>
            MaxCDN
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Medapps">
            <summary>
            MedApps
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.MediumM">
            <summary>
            Medium M
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Medrt">
            <summary>
            MRT
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Meetup">
            <summary>
            Meetup
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Megaport">
            <summary>
            Megaport
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mendeley">
            <summary>
            Mendeley
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Microsoft">
            <summary>
            Microsoft
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mix">
            <summary>
            Mix
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mixcloud">
            <summary>
            Mixcloud
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Mizuni">
            <summary>
            Mizuni
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Modx">
            <summary>
            MODX
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Monero">
            <summary>
            Monero
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Napster">
            <summary>
            Napster
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Neos">
            <summary>
            Neos
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Nimblr">
            <summary>
            Nimblr
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.NintendoSwitch">
            <summary>
            Nintendo Switch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Node">
            <summary>
            Node.js
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.NodeJs">
            <summary>
            Node.js JS
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Npm">
            <summary>
            npm
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ns8">
            <summary>
            NS8
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Nutritionix">
            <summary>
            Nutritionix
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Odnoklassniki">
            <summary>
            Odnoklassniki
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.OdnoklassnikiSquare">
            <summary>
            Odnoklassniki Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.OldRepublic">
            <summary>
            Old Republic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Opencart">
            <summary>
            OpenCart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Openid">
            <summary>
            OpenID
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Opera">
            <summary>
            Opera
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.OptinMonster">
            <summary>
            Optin Monster
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Osi">
            <summary>
            Open Source Initiative
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Page4">
            <summary>
            page4 Corporation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Pagelines">
            <summary>
            Pagelines
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Palfed">
            <summary>
            Palfed
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Patreon">
            <summary>
            Patreon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Paypal">
            <summary>
            Paypal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PennyArcade">
            <summary>
            Penny Arcade
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Periscope">
            <summary>
            Periscope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Phabricator">
            <summary>
            Phabricator
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PhoenixFramework">
            <summary>
            Phoenix Framework
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PhoenixSquadron">
            <summary>
            Phoenix Squadron
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Php">
            <summary>
            PHP
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PiedPiper">
            <summary>
            Pied Piper Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PiedPiperAlt">
            <summary>
            Alternate Pied Piper Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PiedPiperHat">
            <summary>
            Pied Piper-hat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PiedPiperPp">
            <summary>
            Pied Piper PP Logo (Old)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Pinterest">
            <summary>
            Pinterest
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PinterestP">
            <summary>
            Pinterest P
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.PinterestSquare">
            <summary>
            Pinterest Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Playstation">
            <summary>
            PlayStation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ProductHunt">
            <summary>
            Product Hunt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Pushed">
            <summary>
            Pushed
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Python">
            <summary>
            Python
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Qq">
            <summary>
            QQ
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Quinscape">
            <summary>
            QuinScape
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Quora">
            <summary>
            Quora
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.RProject">
            <summary>
            R Project
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.RaspberryPi">
            <summary>
            Raspberry Pi
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ravelry">
            <summary>
            Ravelry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.React">
            <summary>
            React
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Reacteurope">
            <summary>
            ReactEurope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Readme">
            <summary>
            ReadMe
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Rebel">
            <summary>
            Rebel Alliance
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.RedRiver">
            <summary>
            red river
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Reddit">
            <summary>
            reddit Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.RedditAlien">
            <summary>
            reddit Alien
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.RedditSquare">
            <summary>
            reddit Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Redhat">
            <summary>
            Redhat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Renren">
            <summary>
            Renren
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Replyd">
            <summary>
            replyd
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Researchgate">
            <summary>
            Researchgate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Resolving">
            <summary>
            Resolving
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Rev">
            <summary>
            Rev.io
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Rocketchat">
            <summary>
            Rocket.Chat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Rockrms">
            <summary>
            Rockrms
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Safari">
            <summary>
            Safari
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Salesforce">
            <summary>
            Salesforce
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sass">
            <summary>
            Sass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Schlix">
            <summary>
            SCHLIX
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Scribd">
            <summary>
            Scribd
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Searchengin">
            <summary>
            Searchengin
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sellcast">
            <summary>
            Sellcast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sellsy">
            <summary>
            Sellsy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Servicestack">
            <summary>
            Servicestack
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Shirtsinbulk">
            <summary>
            Shirts in Bulk
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Shopware">
            <summary>
            Shopware
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Simplybuilt">
            <summary>
            SimplyBuilt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sistrix">
            <summary>
            SISTRIX
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sith">
            <summary>
            Sith
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sketch">
            <summary>
            Sketch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Skyatlas">
            <summary>
            skyatlas
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Skype">
            <summary>
            Skype
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Slack">
            <summary>
            Slack Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SlackHash">
            <summary>
            Slack Hashtag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Slideshare">
            <summary>
            Slideshare
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Snapchat">
            <summary>
            Snapchat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SnapchatGhost">
            <summary>
            Snapchat Ghost
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SnapchatSquare">
            <summary>
            Snapchat Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Soundcloud">
            <summary>
            SoundCloud
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Sourcetree">
            <summary>
            Sourcetree
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Speakap">
            <summary>
            Speakap
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SpeakerDeck">
            <summary>
            Speaker Deck
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Spotify">
            <summary>
            Spotify
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Squarespace">
            <summary>
            Squarespace
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.StackExchange">
            <summary>
            Stack Exchange
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.StackOverflow">
            <summary>
            Stack Overflow
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Staylinked">
            <summary>
            StayLinked
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Steam">
            <summary>
            Steam
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SteamSquare">
            <summary>
            Steam Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.SteamSymbol">
            <summary>
            Steam Symbol
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.StickerMule">
            <summary>
            Sticker Mule
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Strava">
            <summary>
            Strava
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Stripe">
            <summary>
            Stripe
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.StripeS">
            <summary>
            Stripe S
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Studiovinari">
            <summary>
            Studio Vinari
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Stumbleupon">
            <summary>
            StumbleUpon Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.StumbleuponCircle">
            <summary>
            StumbleUpon Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Superpowers">
            <summary>
            Superpowers
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Supple">
            <summary>
            Supple
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Suse">
            <summary>
            Suse
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Symfony">
            <summary>
            Symfony
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Teamspeak">
            <summary>
            TeamSpeak
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Telegram">
            <summary>
            Telegram
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TelegramPlane">
            <summary>
            Telegram Plane
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TencentWeibo">
            <summary>
            Tencent Weibo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TheRedYeti">
            <summary>
            The Red Yeti
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Themeco">
            <summary>
            Themeco
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Themeisle">
            <summary>
            ThemeIsle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ThinkPeaks">
            <summary>
            Think Peaks
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TradeFederation">
            <summary>
            Trade Federation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Trello">
            <summary>
            Trello
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Tripadvisor">
            <summary>
            TripAdvisor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Tumblr">
            <summary>
            Tumblr
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TumblrSquare">
            <summary>
            Tumblr Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Twitch">
            <summary>
            Twitch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Twitter">
            <summary>
            Twitter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.TwitterSquare">
            <summary>
            Twitter Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Typo3">
            <summary>
            Typo3
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Uber">
            <summary>
            Uber
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ubuntu">
            <summary>
            Ubuntu
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Uikit">
            <summary>
            UIkit
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Uniregistry">
            <summary>
            Uniregistry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Untappd">
            <summary>
            Untappd
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ups">
            <summary>
            UPS
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Usb">
            <summary>
            USB
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Usps">
            <summary>
            United States Postal Service
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Ussunnah">
            <summary>
            us-Sunnah Foundation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vaadin">
            <summary>
            Vaadin
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Viacoin">
            <summary>
            Viacoin
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Viadeo">
            <summary>
            Video
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.ViadeoSquare">
            <summary>
            Video Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Viber">
            <summary>
            Viber
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vimeo">
            <summary>
            Vimeo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.VimeoSquare">
            <summary>
            Vimeo Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.VimeoV">
            <summary>
            Vimeo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vine">
            <summary>
            Vine
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vk">
            <summary>
            VK
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vnv">
            <summary>
            VNV
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Vuejs">
            <summary>
            Vue.js
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Waze">
            <summary>
            Waze
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Weebly">
            <summary>
            Weebly
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Weibo">
            <summary>
            Weibo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Weixin">
            <summary>
            Weixin (WeChat)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Whatsapp">
            <summary>
            What's App
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.WhatsappSquare">
            <summary>
            What's App Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Whmcs">
            <summary>
            WHMCS
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.WikipediaW">
            <summary>
            Wikipedia W
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wix">
            <summary>
            Wix
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.WizardsOfTheCoast">
            <summary>
            Wizards of the Coast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.WolfPackBattalion">
            <summary>
            Wolf Pack Battalion
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wordpress">
            <summary>
            WordPress Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.WordpressSimple">
            <summary>
            Wordpress Simple
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wpbeginner">
            <summary>
            WPBeginner
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wpexplorer">
            <summary>
            WPExplorer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wpforms">
            <summary>
            WPForms
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Wpressr">
            <summary>
            wpressr
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Xbox">
            <summary>
            Xbox
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Xing">
            <summary>
            Xing
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.XingSquare">
            <summary>
            Xing Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.YCombinator">
            <summary>
            Y Combinator
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yahoo">
            <summary>
            Yahoo Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yammer">
            <summary>
            Yammer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yandex">
            <summary>
            Yandex
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.YandexInternational">
            <summary>
            Yandex International
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yarn">
            <summary>
            Yarn
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yelp">
            <summary>
            Yelp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Yoast">
            <summary>
            Yoast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Youtube">
            <summary>
            YouTube
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.YoutubeSquare">
            <summary>
            YouTube Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Brands.Zhihu">
            <summary>
            Zhihu
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.AddressBook">
            <summary>
            Address Book
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.AddressCard">
            <summary>
            Address Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Angry">
            <summary>
            Angry Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ArrowAltCircleDown">
            <summary>
            Alternate Arrow Circle Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ArrowAltCircleLeft">
            <summary>
            Alternate Arrow Circle Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ArrowAltCircleRight">
            <summary>
            Alternate Arrow Circle Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ArrowAltCircleUp">
            <summary>
            Alternate Arrow Circle Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Bell">
            <summary>
            bell
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.BellSlash">
            <summary>
            Bell Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Bookmark">
            <summary>
            bookmark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Building">
            <summary>
            Building
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Calendar">
            <summary>
            Calendar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CalendarAlt">
            <summary>
            Alternate Calendar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CalendarCheck">
            <summary>
            Calendar Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CalendarMinus">
            <summary>
            Calendar Minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CalendarPlus">
            <summary>
            Calendar Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CalendarTimes">
            <summary>
            Calendar Times
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CaretSquareDown">
            <summary>
            Caret Square Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CaretSquareLeft">
            <summary>
            Caret Square Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CaretSquareRight">
            <summary>
            Caret Square Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CaretSquareUp">
            <summary>
            Caret Square Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ChartBar">
            <summary>
            Bar Chart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CheckCircle">
            <summary>
            Check Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CheckSquare">
            <summary>
            Check Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Clipboard">
            <summary>
            Clipboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Clock">
            <summary>
            Clock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Clone">
            <summary>
            Clone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ClosedCaptioning">
            <summary>
            Closed Captioning
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CommentAlt">
            <summary>
            Alternate Comment
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CommentDots">
            <summary>
            Comment Dots
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Comments">
            <summary>
            comments
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Compass">
            <summary>
            Compass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.CreditCard">
            <summary>
            Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Dizzy">
            <summary>
            Dizzy Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.DotCircle">
            <summary>
            Dot Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Edit">
            <summary>
            Edit
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Envelope">
            <summary>
            Envelope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.EnvelopeOpen">
            <summary>
            Envelope Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Eye">
            <summary>
            Eye
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.EyeSlash">
            <summary>
            Eye Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.File">
            <summary>
            File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileAlt">
            <summary>
            Alternate File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileArchive">
            <summary>
            Archive File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileAudio">
            <summary>
            Audio File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileCode">
            <summary>
            Code File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileExcel">
            <summary>
            Excel File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileImage">
            <summary>
            Image File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FilePdf">
            <summary>
            PDF File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FilePowerpoint">
            <summary>
            Powerpoint File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileVideo">
            <summary>
            Video File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FileWord">
            <summary>
            Word File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Flag">
            <summary>
            flag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Flushed">
            <summary>
            Flushed Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Folder">
            <summary>
            Folder
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FolderOpen">
            <summary>
            Folder Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FontAwesomeLogoFull">
            <summary>
            Font Awesome Full Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Frown">
            <summary>
            Frowning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.FrownOpen">
            <summary>
            Frowning Face With Open Mouth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Futbol">
            <summary>
            Futbol
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Gem">
            <summary>
            Gem
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Grimace">
            <summary>
            Grimacing Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Grin">
            <summary>
            Grinning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinAlt">
            <summary>
            Alternate Grinning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinBeam">
            <summary>
            Grinning Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinBeamSweat">
            <summary>
            Grinning Face With Sweat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinHearts">
            <summary>
            Smiling Face With Heart-Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinSquint">
            <summary>
            Grinning Squinting Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinSquintTears">
            <summary>
            Rolling on the Floor Laughing
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinStars">
            <summary>
            Star-Struck
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinTears">
            <summary>
            Face With Tears of Joy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinTongue">
            <summary>
            Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinTongueSquint">
            <summary>
            Squinting Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinTongueWink">
            <summary>
            Winking Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.GrinWink">
            <summary>
            Grinning Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandLizard">
            <summary>
            Lizard (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPaper">
            <summary>
            Paper (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPeace">
            <summary>
            Peace (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPointDown">
            <summary>
            Hand Pointing Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPointLeft">
            <summary>
            Hand Pointing Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPointRight">
            <summary>
            Hand Pointing Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPointUp">
            <summary>
            Hand Pointing Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandPointer">
            <summary>
            Pointer (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandRock">
            <summary>
            Rock (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandScissors">
            <summary>
            Scissors (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.HandSpock">
            <summary>
            Spock (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Handshake">
            <summary>
            Handshake
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Hdd">
            <summary>
            HDD
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Heart">
            <summary>
            Heart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Hospital">
            <summary>
            hospital
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Hourglass">
            <summary>
            Hourglass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.IdBadge">
            <summary>
            Identification Badge
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.IdCard">
            <summary>
            Identification Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Images">
            <summary>
            Images
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Keyboard">
            <summary>
            Keyboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Kiss">
            <summary>
            Kissing Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.KissBeam">
            <summary>
            Kissing Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.KissWinkHeart">
            <summary>
            Face Blowing a Kiss
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Laugh">
            <summary>
            Grinning Face With Big Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.LaughBeam">
            <summary>
            Laugh Face with Beaming Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.LaughSquint">
            <summary>
            Laughing Squinting Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.LaughWink">
            <summary>
            Laughing Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Lemon">
            <summary>
            Lemon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.LifeRing">
            <summary>
            Life Ring
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Lightbulb">
            <summary>
            Lightbulb
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ListAlt">
            <summary>
            Alternate List
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Map">
            <summary>
            Map
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Meh">
            <summary>
            Neutral Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.MehBlank">
            <summary>
            Face Without Mouth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.MehRollingEyes">
            <summary>
            Face With Rolling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.MinusSquare">
            <summary>
            Minus Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.MoneyBillAlt">
            <summary>
            Alternate Money Bill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Moon">
            <summary>
            Moon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Newspaper">
            <summary>
            Newspaper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ObjectGroup">
            <summary>
            Object Group
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ObjectUngroup">
            <summary>
            Object Ungroup
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.PaperPlane">
            <summary>
            Paper Plane
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.PauseCircle">
            <summary>
            Pause Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.PlayCircle">
            <summary>
            Play Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.PlusSquare">
            <summary>
            Plus Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.QuestionCircle">
            <summary>
            Question Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Registered">
            <summary>
            Registered Trademark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.SadCry">
            <summary>
            Crying Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.SadTear">
            <summary>
            Loudly Crying Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ShareSquare">
            <summary>
            Share Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Smile">
            <summary>
            Smiling Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.SmileBeam">
            <summary>
            Beaming Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.SmileWink">
            <summary>
            Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Snowflake">
            <summary>
            Snowflake
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.StarHalf">
            <summary>
            star-half
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.StickyNote">
            <summary>
            Sticky Note
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.StopCircle">
            <summary>
            Stop Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Sun">
            <summary>
            Sun
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Surprise">
            <summary>
            Hushed Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ThumbsDown">
            <summary>
            thumbs-down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.ThumbsUp">
            <summary>
            thumbs-up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.TimesCircle">
            <summary>
            Times Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.Tired">
            <summary>
            Tired Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.TrashAlt">
            <summary>
            Alternate Trash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.UserCircle">
            <summary>
            User Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.WindowClose">
            <summary>
            Window Close
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.WindowMaximize">
            <summary>
            Window Maximize
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.WindowMinimize">
            <summary>
            Window Minimize
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Regular.WindowRestore">
            <summary>
            Window Restore
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ad">
            <summary>
            Ad
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AddressBook">
            <summary>
            Address Book
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AddressCard">
            <summary>
            Address Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Adjust">
            <summary>
            adjust
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AirFreshener">
            <summary>
            Air Freshener
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AlignCenter">
            <summary>
            align-center
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AlignJustify">
            <summary>
            align-justify
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AlignLeft">
            <summary>
            align-left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AlignRight">
            <summary>
            align-right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Allergies">
            <summary>
            Allergies
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ambulance">
            <summary>
            ambulance
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AmericanSignLanguageInterpreting">
            <summary>
            American Sign Language Interpreting
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Anchor">
            <summary>
            Anchor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleDoubleDown">
            <summary>
            Angle Double Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleDoubleLeft">
            <summary>
            Angle Double Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleDoubleRight">
            <summary>
            Angle Double Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleDoubleUp">
            <summary>
            Angle Double Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleDown">
            <summary>
            angle-down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleLeft">
            <summary>
            angle-left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleRight">
            <summary>
            angle-right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AngleUp">
            <summary>
            angle-up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Angry">
            <summary>
            Angry Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ankh">
            <summary>
            Ankh
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AppleAlt">
            <summary>
            Fruit Apple
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Archive">
            <summary>
            Archive
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Archway">
            <summary>
            Archway
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowAltCircleDown">
            <summary>
            Alternate Arrow Circle Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowAltCircleLeft">
            <summary>
            Alternate Arrow Circle Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowAltCircleRight">
            <summary>
            Alternate Arrow Circle Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowAltCircleUp">
            <summary>
            Alternate Arrow Circle Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowCircleDown">
            <summary>
            Arrow Circle Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowCircleLeft">
            <summary>
            Arrow Circle Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowCircleRight">
            <summary>
            Arrow Circle Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowCircleUp">
            <summary>
            Arrow Circle Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowDown">
            <summary>
            arrow-down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowLeft">
            <summary>
            arrow-left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowRight">
            <summary>
            arrow-right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowUp">
            <summary>
            arrow-up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowsAlt">
            <summary>
            Alternate Arrows
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowsAltH">
            <summary>
            Alternate Arrows Horizontal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ArrowsAltV">
            <summary>
            Alternate Arrows Vertical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AssistiveListeningSystems">
            <summary>
            Assistive Listening Systems
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Asterisk">
            <summary>
            asterisk
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.At">
            <summary>
            At
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Atlas">
            <summary>
            Atlas
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Atom">
            <summary>
            Atom
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.AudioDescription">
            <summary>
            Audio Description
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Award">
            <summary>
            Award
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Baby">
            <summary>
            Baby
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BabyCarriage">
            <summary>
            Baby Carriage
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Backspace">
            <summary>
            Backspace
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Backward">
            <summary>
            backward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bacon">
            <summary>
            Bacon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BalanceScale">
            <summary>
            Balance Scale
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ban">
            <summary>
            ban
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BandAid">
            <summary>
            Band-Aid
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Barcode">
            <summary>
            barcode
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bars">
            <summary>
            Bars
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BaseballBall">
            <summary>
            Baseball Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BasketballBall">
            <summary>
            Basketball Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bath">
            <summary>
            Bath
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BatteryEmpty">
            <summary>
            Battery Empty
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BatteryFull">
            <summary>
            Battery Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BatteryHalf">
            <summary>
            Battery 1/2 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BatteryQuarter">
            <summary>
            Battery 1/4 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BatteryThreeQuarters">
            <summary>
            Battery 3/4 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bed">
            <summary>
            Bed
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Beer">
            <summary>
            beer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bell">
            <summary>
            bell
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BellSlash">
            <summary>
            Bell Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BezierCurve">
            <summary>
            Bezier Curve
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bible">
            <summary>
            Bible
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bicycle">
            <summary>
            Bicycle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Binoculars">
            <summary>
            Binoculars
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Biohazard">
            <summary>
            Biohazard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BirthdayCake">
            <summary>
            Birthday Cake
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Blender">
            <summary>
            Blender
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BlenderPhone">
            <summary>
            Blender Phone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Blind">
            <summary>
            Blind
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Blog">
            <summary>
            Blog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bold">
            <summary>
            bold
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bolt">
            <summary>
            Lightning Bolt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bomb">
            <summary>
            Bomb
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bone">
            <summary>
            Bone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bong">
            <summary>
            Bong
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Book">
            <summary>
            book
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BookDead">
            <summary>
            Book of the Dead
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BookMedical">
            <summary>
            Medical Book
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BookOpen">
            <summary>
            Book Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BookReader">
            <summary>
            Book Reader
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bookmark">
            <summary>
            bookmark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BowlingBall">
            <summary>
            Bowling Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Box">
            <summary>
            Box
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BoxOpen">
            <summary>
            Box Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Boxes">
            <summary>
            Boxes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Braille">
            <summary>
            Braille
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Brain">
            <summary>
            Brain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BreadSlice">
            <summary>
            Bread Slice
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Briefcase">
            <summary>
            Briefcase
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BriefcaseMedical">
            <summary>
            Medical Briefcase
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BroadcastTower">
            <summary>
            Broadcast Tower
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Broom">
            <summary>
            Broom
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Brush">
            <summary>
            Brush
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bug">
            <summary>
            Bug
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Building">
            <summary>
            Building
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bullhorn">
            <summary>
            bullhorn
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bullseye">
            <summary>
            Bullseye
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Burn">
            <summary>
            Burn
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Bus">
            <summary>
            Bus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BusAlt">
            <summary>
            Bus Alt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.BusinessTime">
            <summary>
            Business Time
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Calculator">
            <summary>
            Calculator
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Calendar">
            <summary>
            Calendar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarAlt">
            <summary>
            Alternate Calendar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarCheck">
            <summary>
            Calendar Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarDay">
            <summary>
            Calendar with Day Focus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarMinus">
            <summary>
            Calendar Minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarPlus">
            <summary>
            Calendar Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarTimes">
            <summary>
            Calendar Times
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CalendarWeek">
            <summary>
            Calendar with Week Focus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Camera">
            <summary>
            camera
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CameraRetro">
            <summary>
            Retro Camera
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Campground">
            <summary>
            Campground
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CandyCane">
            <summary>
            Candy Cane
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cannabis">
            <summary>
            Cannabis
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Capsules">
            <summary>
            Capsules
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Car">
            <summary>
            Car
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CarAlt">
            <summary>
            Alternate Car
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CarBattery">
            <summary>
            Car Battery
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CarCrash">
            <summary>
            Car Crash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CarSide">
            <summary>
            Car Side
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretDown">
            <summary>
            Caret Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretLeft">
            <summary>
            Caret Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretRight">
            <summary>
            Caret Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretSquareDown">
            <summary>
            Caret Square Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretSquareLeft">
            <summary>
            Caret Square Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretSquareRight">
            <summary>
            Caret Square Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretSquareUp">
            <summary>
            Caret Square Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CaretUp">
            <summary>
            Caret Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Carrot">
            <summary>
            Carrot
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CartArrowDown">
            <summary>
            Shopping Cart Arrow Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CartPlus">
            <summary>
            Add to Shopping Cart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CashRegister">
            <summary>
            Cash Register
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cat">
            <summary>
            Cat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Certificate">
            <summary>
            certificate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Chair">
            <summary>
            Chair
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Chalkboard">
            <summary>
            Chalkboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChalkboardTeacher">
            <summary>
            Chalkboard Teacher
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChargingStation">
            <summary>
            Charging Station
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChartArea">
            <summary>
            Area Chart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChartBar">
            <summary>
            Bar Chart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChartLine">
            <summary>
            Line Chart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChartPie">
            <summary>
            Pie Chart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Check">
            <summary>
            Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CheckCircle">
            <summary>
            Check Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CheckDouble">
            <summary>
            Check Double
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CheckSquare">
            <summary>
            Check Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cheese">
            <summary>
            Cheese
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Chess">
            <summary>
            Chess
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessBishop">
            <summary>
            Chess Bishop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessBoard">
            <summary>
            Chess Board
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessKing">
            <summary>
            Chess King
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessKnight">
            <summary>
            Chess Knight
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessPawn">
            <summary>
            Chess Pawn
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessQueen">
            <summary>
            Chess Queen
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChessRook">
            <summary>
            Chess Rook
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronCircleDown">
            <summary>
            Chevron Circle Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronCircleLeft">
            <summary>
            Chevron Circle Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronCircleRight">
            <summary>
            Chevron Circle Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronCircleUp">
            <summary>
            Chevron Circle Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronDown">
            <summary>
            chevron-down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronLeft">
            <summary>
            chevron-left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronRight">
            <summary>
            chevron-right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ChevronUp">
            <summary>
            chevron-up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Child">
            <summary>
            Child
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Church">
            <summary>
            Church
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CircleNotch">
            <summary>
            Circle Notched
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ClinicMedical">
            <summary>
            Medical Clinic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Clipboard">
            <summary>
            Clipboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ClipboardCheck">
            <summary>
            Clipboard with Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ClipboardList">
            <summary>
            Clipboard List
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Clock">
            <summary>
            Clock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Clone">
            <summary>
            Clone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ClosedCaptioning">
            <summary>
            Closed Captioning
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cloud">
            <summary>
            Cloud
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudDownloadAlt">
            <summary>
            Alternate Cloud Download
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudMeatball">
            <summary>
            Cloud with (a chance of) Meatball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudMoon">
            <summary>
            Cloud with Moon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudMoonRain">
            <summary>
            Cloud with Moon and Rain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudRain">
            <summary>
            Cloud with Rain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudShowersHeavy">
            <summary>
            Cloud with Heavy Showers
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudSun">
            <summary>
            Cloud with Sun
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudSunRain">
            <summary>
            Cloud with Sun and Rain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CloudUploadAlt">
            <summary>
            Alternate Cloud Upload
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cocktail">
            <summary>
            Cocktail
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CodeBranch">
            <summary>
            Code Branch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Coffee">
            <summary>
            Coffee
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cog">
            <summary>
            cog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cogs">
            <summary>
            cogs
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Coins">
            <summary>
            Coins
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Columns">
            <summary>
            Columns
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentAlt">
            <summary>
            Alternate Comment
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentDollar">
            <summary>
            Comment Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentDots">
            <summary>
            Comment Dots
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentMedical">
            <summary>
            Alternate Medical Chat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentSlash">
            <summary>
            Comment Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Comments">
            <summary>
            comments
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CommentsDollar">
            <summary>
            Comments Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CompactDisc">
            <summary>
            Compact Disc
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Compass">
            <summary>
            Compass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Compress">
            <summary>
            Compress
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CompressArrowsAlt">
            <summary>
            Alternate Compress Arrows
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ConciergeBell">
            <summary>
            Concierge Bell
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CookieBite">
            <summary>
            Cookie Bite
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Couch">
            <summary>
            Couch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CreditCard">
            <summary>
            Credit Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Crop">
            <summary>
            crop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.CropAlt">
            <summary>
            Alternate Crop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Crosshairs">
            <summary>
            Crosshairs
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Crow">
            <summary>
            Crow
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Crown">
            <summary>
            Crown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Crutch">
            <summary>
            Crutch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cube">
            <summary>
            Cube
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cubes">
            <summary>
            Cubes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Cut">
            <summary>
            Cut
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Deaf">
            <summary>
            Deaf
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Democrat">
            <summary>
            Democrat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Desktop">
            <summary>
            Desktop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dharmachakra">
            <summary>
            Dharmachakra
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Diagnoses">
            <summary>
            Diagnoses
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dice">
            <summary>
            Dice
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceD20">
            <summary>
            Dice D20
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceD6">
            <summary>
            Dice D6
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceFive">
            <summary>
            Dice Five
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceFour">
            <summary>
            Dice Four
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceOne">
            <summary>
            Dice One
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceSix">
            <summary>
            Dice Six
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceThree">
            <summary>
            Dice Three
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DiceTwo">
            <summary>
            Dice Two
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DigitalTachograph">
            <summary>
            Digital Tachograph
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Directions">
            <summary>
            Directions
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Divide">
            <summary>
            Divide
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dizzy">
            <summary>
            Dizzy Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dna">
            <summary>
            DNA
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dog">
            <summary>
            Dog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DollarSign">
            <summary>
            Dollar Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dolly">
            <summary>
            Dolly
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DollyFlatbed">
            <summary>
            Dolly Flatbed
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Donate">
            <summary>
            Donate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DoorClosed">
            <summary>
            Door Closed
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DoorOpen">
            <summary>
            Door Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DotCircle">
            <summary>
            Dot Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dove">
            <summary>
            Dove
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Download">
            <summary>
            Download
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DraftingCompass">
            <summary>
            Drafting Compass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dragon">
            <summary>
            Dragon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DrawPolygon">
            <summary>
            Draw Polygon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Drum">
            <summary>
            Drum
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DrumSteelpan">
            <summary>
            Drum Steelpan
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DrumstickBite">
            <summary>
            Drumstick with Bite Taken Out
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dumbbell">
            <summary>
            Dumbbell
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dumpster">
            <summary>
            Dumpster
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.DumpsterFire">
            <summary>
            Dumpster Fire
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Dungeon">
            <summary>
            Dungeon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Edit">
            <summary>
            Edit
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Egg">
            <summary>
            Egg
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Eject">
            <summary>
            eject
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EllipsisH">
            <summary>
            Horizontal Ellipsis
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EllipsisV">
            <summary>
            Vertical Ellipsis
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Envelope">
            <summary>
            Envelope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EnvelopeOpen">
            <summary>
            Envelope Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EnvelopeOpenText">
            <summary>
            Envelope Open-text
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EnvelopeSquare">
            <summary>
            Envelope Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Equals">
            <summary>
            Equals
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Eraser">
            <summary>
            eraser
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ethernet">
            <summary>
            Ethernet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EuroSign">
            <summary>
            Euro Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExchangeAlt">
            <summary>
            Alternate Exchange
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Exclamation">
            <summary>
            exclamation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExclamationCircle">
            <summary>
            Exclamation Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExclamationTriangle">
            <summary>
            Exclamation Triangle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Expand">
            <summary>
            Expand
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExpandArrowsAlt">
            <summary>
            Alternate Expand Arrows
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExternalLinkAlt">
            <summary>
            Alternate External Link
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ExternalLinkSquareAlt">
            <summary>
            Alternate External Link Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Eye">
            <summary>
            Eye
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EyeDropper">
            <summary>
            Eye Dropper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.EyeSlash">
            <summary>
            Eye Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FastBackward">
            <summary>
            fast-backward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FastForward">
            <summary>
            fast-forward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Fax">
            <summary>
            Fax
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Feather">
            <summary>
            Feather
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FeatherAlt">
            <summary>
            Alternate Feather
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Female">
            <summary>
            Female
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FighterJet">
            <summary>
            fighter-jet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.File">
            <summary>
            File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileAlt">
            <summary>
            Alternate File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileArchive">
            <summary>
            Archive File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileAudio">
            <summary>
            Audio File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileCode">
            <summary>
            Code File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileContract">
            <summary>
            File Contract
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileCsv">
            <summary>
            File CSV
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileDownload">
            <summary>
            File Download
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileExcel">
            <summary>
            Excel File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileExport">
            <summary>
            File Export
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileImage">
            <summary>
            Image File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileImport">
            <summary>
            File Import
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileInvoice">
            <summary>
            File Invoice
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileInvoiceDollar">
            <summary>
            File Invoice with US Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileMedical">
            <summary>
            Medical File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileMedicalAlt">
            <summary>
            Alternate Medical File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FilePdf">
            <summary>
            PDF File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FilePowerpoint">
            <summary>
            Powerpoint File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FilePrescription">
            <summary>
            File Prescription
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileSignature">
            <summary>
            File Signature
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileUpload">
            <summary>
            File Upload
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileVideo">
            <summary>
            Video File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FileWord">
            <summary>
            Word File
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Fill">
            <summary>
            Fill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FillDrip">
            <summary>
            Fill Drip
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Film">
            <summary>
            Film
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Fingerprint">
            <summary>
            Fingerprint
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Fire">
            <summary>
            fire
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FireAlt">
            <summary>
            Alternate Fire
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FireExtinguisher">
            <summary>
            fire-extinguisher
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FirstAid">
            <summary>
            First Aid
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Fish">
            <summary>
            Fish
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FistRaised">
            <summary>
            Raised Fist
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Flag">
            <summary>
            flag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FlagCheckered">
            <summary>
            flag-checkered
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FlagUsa">
            <summary>
            United States of America Flag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Flask">
            <summary>
            Flask
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Flushed">
            <summary>
            Flushed Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Folder">
            <summary>
            Folder
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FolderMinus">
            <summary>
            Folder Minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FolderOpen">
            <summary>
            Folder Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FolderPlus">
            <summary>
            Folder Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Font">
            <summary>
            font
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FontAwesomeLogoFull">
            <summary>
            Font Awesome Full Logo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FootballBall">
            <summary>
            Football Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Forward">
            <summary>
            forward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Frog">
            <summary>
            Frog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Frown">
            <summary>
            Frowning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FrownOpen">
            <summary>
            Frowning Face With Open Mouth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.FunnelDollar">
            <summary>
            Funnel Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Futbol">
            <summary>
            Futbol
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gamepad">
            <summary>
            Gamepad
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GasPump">
            <summary>
            Gas Pump
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gavel">
            <summary>
            Gavel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gem">
            <summary>
            Gem
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Genderless">
            <summary>
            Genderless
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ghost">
            <summary>
            Ghost
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gift">
            <summary>
            gift
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gifts">
            <summary>
            Gifts
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlassCheers">
            <summary>
            Glass Cheers
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlassMartini">
            <summary>
            Martini Glass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlassMartiniAlt">
            <summary>
            Alternate Glass Martini
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlassWhiskey">
            <summary>
            Glass Whiskey
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Glasses">
            <summary>
            Glasses
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Globe">
            <summary>
            Globe
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlobeAfrica">
            <summary>
            Globe with Africa shown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlobeAmericas">
            <summary>
            Globe with Americas shown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlobeAsia">
            <summary>
            Globe with Asia shown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GlobeEurope">
            <summary>
            Globe with Europe shown
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GolfBall">
            <summary>
            Golf Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Gopuram">
            <summary>
            Gopuram
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GraduationCap">
            <summary>
            Graduation Cap
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GreaterThan">
            <summary>
            Greater Than
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GreaterThanEqual">
            <summary>
            Greater Than Equal To
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Grimace">
            <summary>
            Grimacing Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Grin">
            <summary>
            Grinning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinAlt">
            <summary>
            Alternate Grinning Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinBeam">
            <summary>
            Grinning Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinBeamSweat">
            <summary>
            Grinning Face With Sweat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinHearts">
            <summary>
            Smiling Face With Heart-Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinSquint">
            <summary>
            Grinning Squinting Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinSquintTears">
            <summary>
            Rolling on the Floor Laughing
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinStars">
            <summary>
            Star-Struck
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinTears">
            <summary>
            Face With Tears of Joy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinTongue">
            <summary>
            Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinTongueSquint">
            <summary>
            Squinting Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinTongueWink">
            <summary>
            Winking Face With Tongue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GrinWink">
            <summary>
            Grinning Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GripHorizontal">
            <summary>
            Grip Horizontal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GripLines">
            <summary>
            Grip Lines
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GripLinesVertical">
            <summary>
            Grip Lines Vertical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.GripVertical">
            <summary>
            Grip Vertical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Guitar">
            <summary>
            Guitar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HSquare">
            <summary>
            H Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hamburger">
            <summary>
            Hamburger
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hammer">
            <summary>
            Hammer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hamsa">
            <summary>
            Hamsa
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandHolding">
            <summary>
            Hand Holding
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandHoldingHeart">
            <summary>
            Hand Holding Heart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandHoldingUsd">
            <summary>
            Hand Holding US Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandLizard">
            <summary>
            Lizard (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandMiddleFinger">
            <summary>
            Hand with Middle Finger Raised
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPaper">
            <summary>
            Paper (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPeace">
            <summary>
            Peace (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPointDown">
            <summary>
            Hand Pointing Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPointLeft">
            <summary>
            Hand Pointing Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPointRight">
            <summary>
            Hand Pointing Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPointUp">
            <summary>
            Hand Pointing Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandPointer">
            <summary>
            Pointer (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandRock">
            <summary>
            Rock (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandScissors">
            <summary>
            Scissors (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandSpock">
            <summary>
            Spock (Hand)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hands">
            <summary>
            Hands
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HandsHelping">
            <summary>
            Helping Hands
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Handshake">
            <summary>
            Handshake
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hanukiah">
            <summary>
            Hanukiah
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HardHat">
            <summary>
            Hard Hat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hashtag">
            <summary>
            Hashtag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HatWizard">
            <summary>
            Wizard's Hat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Haykal">
            <summary>
            Haykal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hdd">
            <summary>
            HDD
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Heading">
            <summary>
            heading
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Headphones">
            <summary>
            headphones
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HeadphonesAlt">
            <summary>
            Alternate Headphones
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Headset">
            <summary>
            Headset
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Heart">
            <summary>
            Heart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HeartBroken">
            <summary>
            Heart Broken
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Heartbeat">
            <summary>
            Heartbeat
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Helicopter">
            <summary>
            Helicopter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Highlighter">
            <summary>
            Highlighter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hiking">
            <summary>
            Hiking
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hippo">
            <summary>
            Hippo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.History">
            <summary>
            History
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HockeyPuck">
            <summary>
            Hockey Puck
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HollyBerry">
            <summary>
            Holly Berry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Home">
            <summary>
            home
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Horse">
            <summary>
            Horse
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HorseHead">
            <summary>
            Horse Head
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hospital">
            <summary>
            hospital
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HospitalAlt">
            <summary>
            Alternate Hospital
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HospitalSymbol">
            <summary>
            Hospital Symbol
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HotTub">
            <summary>
            Hot Tub
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hotdog">
            <summary>
            Hot Dog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hotel">
            <summary>
            Hotel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hourglass">
            <summary>
            Hourglass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HourglassEnd">
            <summary>
            Hourglass End
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HourglassHalf">
            <summary>
            Hourglass Half
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HourglassStart">
            <summary>
            Hourglass Start
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.HouseDamage">
            <summary>
            Damaged House
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Hryvnia">
            <summary>
            Hryvnia
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ICursor">
            <summary>
            I Beam Cursor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.IceCream">
            <summary>
            Ice Cream
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Icicles">
            <summary>
            Icicles
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.IdBadge">
            <summary>
            Identification Badge
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.IdCard">
            <summary>
            Identification Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.IdCardAlt">
            <summary>
            Alternate Identification Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Igloo">
            <summary>
            Igloo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Images">
            <summary>
            Images
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Inbox">
            <summary>
            inbox
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Indent">
            <summary>
            Indent
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Industry">
            <summary>
            Industry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Infinity">
            <summary>
            Infinity
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.InfoCircle">
            <summary>
            Info Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Italic">
            <summary>
            italic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Jedi">
            <summary>
            Jedi
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Joint">
            <summary>
            Joint
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.JournalWhills">
            <summary>
            Journal of the Whills
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Kaaba">
            <summary>
            Kaaba
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Key">
            <summary>
            key
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Keyboard">
            <summary>
            Keyboard
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Khanda">
            <summary>
            Khanda
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Kiss">
            <summary>
            Kissing Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.KissBeam">
            <summary>
            Kissing Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.KissWinkHeart">
            <summary>
            Face Blowing a Kiss
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.KiwiBird">
            <summary>
            Kiwi Bird
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Landmark">
            <summary>
            Landmark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Laptop">
            <summary>
            Laptop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LaptopCode">
            <summary>
            Laptop Code
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LaptopMedical">
            <summary>
            Laptop Medical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Laugh">
            <summary>
            Grinning Face With Big Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LaughBeam">
            <summary>
            Laugh Face with Beaming Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LaughSquint">
            <summary>
            Laughing Squinting Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LaughWink">
            <summary>
            Laughing Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LayerGroup">
            <summary>
            Layer Group
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Leaf">
            <summary>
            leaf
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Lemon">
            <summary>
            Lemon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LessThan">
            <summary>
            Less Than
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LessThanEqual">
            <summary>
            Less Than Equal To
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LevelDownAlt">
            <summary>
            Alternate Level Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LevelUpAlt">
            <summary>
            Alternate Level Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LifeRing">
            <summary>
            Life Ring
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Lightbulb">
            <summary>
            Lightbulb
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LiraSign">
            <summary>
            Turkish Lira Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.List">
            <summary>
            List
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ListAlt">
            <summary>
            Alternate List
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ListOl">
            <summary>
            list-ol
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ListUl">
            <summary>
            list-ul
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LocationArrow">
            <summary>
            location-arrow
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Lock">
            <summary>
            lock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LockOpen">
            <summary>
            Lock Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LongArrowAltDown">
            <summary>
            Alternate Long Arrow Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LongArrowAltLeft">
            <summary>
            Alternate Long Arrow Left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LongArrowAltRight">
            <summary>
            Alternate Long Arrow Right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LongArrowAltUp">
            <summary>
            Alternate Long Arrow Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LowVision">
            <summary>
            Low Vision
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.LuggageCart">
            <summary>
            Luggage Cart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Magic">
            <summary>
            magic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Magnet">
            <summary>
            magnet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MailBulk">
            <summary>
            Mail Bulk
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Male">
            <summary>
            Male
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Map">
            <summary>
            Map
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapMarked">
            <summary>
            Map Marked
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapMarkedAlt">
            <summary>
            Alternate Map Marked
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapMarker">
            <summary>
            map-marker
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapMarkerAlt">
            <summary>
            Alternate Map Marker
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapPin">
            <summary>
            Map Pin
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MapSigns">
            <summary>
            Map Signs
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mars">
            <summary>
            Mars
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MarsDouble">
            <summary>
            Mars Double
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MarsStroke">
            <summary>
            Mars Stroke
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MarsStrokeH">
            <summary>
            Mars Stroke Horizontal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MarsStrokeV">
            <summary>
            Mars Stroke Vertical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mask">
            <summary>
            Mask
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Medal">
            <summary>
            Medal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Medkit">
            <summary>
            medkit
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Meh">
            <summary>
            Neutral Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MehBlank">
            <summary>
            Face Without Mouth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MehRollingEyes">
            <summary>
            Face With Rolling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Memory">
            <summary>
            Memory
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Menorah">
            <summary>
            Menorah
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mercury">
            <summary>
            Mercury
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Meteor">
            <summary>
            Meteor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Microchip">
            <summary>
            Microchip
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Microphone">
            <summary>
            microphone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MicrophoneAlt">
            <summary>
            Alternate Microphone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MicrophoneAltSlash">
            <summary>
            Alternate Microphone Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MicrophoneSlash">
            <summary>
            Microphone Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Microscope">
            <summary>
            Microscope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Minus">
            <summary>
            minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MinusCircle">
            <summary>
            Minus Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MinusSquare">
            <summary>
            Minus Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mitten">
            <summary>
            Mitten
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mobile">
            <summary>
            Mobile Phone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MobileAlt">
            <summary>
            Alternate Mobile
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyBill">
            <summary>
            Money Bill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyBillAlt">
            <summary>
            Alternate Money Bill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyBillWave">
            <summary>
            Wavy Money Bill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyBillWaveAlt">
            <summary>
            Alternate Wavy Money Bill
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyCheck">
            <summary>
            Money Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MoneyCheckAlt">
            <summary>
            Alternate Money Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Monument">
            <summary>
            Monument
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Moon">
            <summary>
            Moon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MortarPestle">
            <summary>
            Mortar Pestle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mosque">
            <summary>
            Mosque
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Motorcycle">
            <summary>
            Motorcycle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Mountain">
            <summary>
            Mountain
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MousePointer">
            <summary>
            Mouse Pointer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.MugHot">
            <summary>
            Mug Hot
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Music">
            <summary>
            Music
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.NetworkWired">
            <summary>
            Wired Network
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Neuter">
            <summary>
            Neuter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Newspaper">
            <summary>
            Newspaper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.NotEqual">
            <summary>
            Not Equal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.NotesMedical">
            <summary>
            Medical Notes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ObjectGroup">
            <summary>
            Object Group
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ObjectUngroup">
            <summary>
            Object Ungroup
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.OilCan">
            <summary>
            Oil Can
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Om">
            <summary>
            Om
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Otter">
            <summary>
            Otter
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Outdent">
            <summary>
            Outdent
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pager">
            <summary>
            Pager
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PaintBrush">
            <summary>
            Paint Brush
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PaintRoller">
            <summary>
            Paint Roller
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Palette">
            <summary>
            Palette
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pallet">
            <summary>
            Pallet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PaperPlane">
            <summary>
            Paper Plane
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Paperclip">
            <summary>
            Paperclip
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ParachuteBox">
            <summary>
            Parachute Box
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Paragraph">
            <summary>
            paragraph
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Parking">
            <summary>
            Parking
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Passport">
            <summary>
            Passport
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pastafarianism">
            <summary>
            Pastafarianism
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Paste">
            <summary>
            Paste
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pause">
            <summary>
            pause
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PauseCircle">
            <summary>
            Pause Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Paw">
            <summary>
            Paw
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Peace">
            <summary>
            Peace
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pen">
            <summary>
            Pen
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PenAlt">
            <summary>
            Alternate Pen
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PenFancy">
            <summary>
            Pen Fancy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PenNib">
            <summary>
            Pen Nib
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PenSquare">
            <summary>
            Pen Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PencilAlt">
            <summary>
            Alternate Pencil
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PencilRuler">
            <summary>
            Pencil Ruler
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PeopleCarry">
            <summary>
            People Carry
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PepperHot">
            <summary>
            Hot Pepper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Percent">
            <summary>
            Percent
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PersonBooth">
            <summary>
            Person Entering Booth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PhoneSlash">
            <summary>
            Phone Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PhoneSquare">
            <summary>
            Phone Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PhoneVolume">
            <summary>
            Phone Volume
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PiggyBank">
            <summary>
            Piggy Bank
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pills">
            <summary>
            Pills
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PizzaSlice">
            <summary>
            Pizza Slice
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlaceOfWorship">
            <summary>
            Place of Worship
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Plane">
            <summary>
            plane
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlaneArrival">
            <summary>
            Plane Arrival
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlaneDeparture">
            <summary>
            Plane Departure
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Play">
            <summary>
            play
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlayCircle">
            <summary>
            Play Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Plug">
            <summary>
            Plug
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Plus">
            <summary>
            plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlusCircle">
            <summary>
            Plus Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PlusSquare">
            <summary>
            Plus Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Podcast">
            <summary>
            Podcast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Poll">
            <summary>
            Poll
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PollH">
            <summary>
            Poll H
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Poo">
            <summary>
            Poo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PooStorm">
            <summary>
            Poo Storm
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Poop">
            <summary>
            Poop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Portrait">
            <summary>
            Portrait
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PoundSign">
            <summary>
            Pound Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PowerOff">
            <summary>
            Power Off
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Pray">
            <summary>
            Pray
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PrayingHands">
            <summary>
            Praying Hands
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Prescription">
            <summary>
            Prescription
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PrescriptionBottle">
            <summary>
            Prescription Bottle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PrescriptionBottleAlt">
            <summary>
            Alternate Prescription Bottle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Print">
            <summary>
            print
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Procedures">
            <summary>
            Procedures
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ProjectDiagram">
            <summary>
            Project Diagram
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.PuzzlePiece">
            <summary>
            Puzzle Piece
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Qrcode">
            <summary>
            qrcode
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.QuestionCircle">
            <summary>
            Question Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Quidditch">
            <summary>
            Quidditch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.QuoteLeft">
            <summary>
            quote-left
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.QuoteRight">
            <summary>
            quote-right
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Quran">
            <summary>
            Quran
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Radiation">
            <summary>
            Radiation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RadiationAlt">
            <summary>
            Alternate Radiation
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Rainbow">
            <summary>
            Rainbow
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Random">
            <summary>
            random
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Receipt">
            <summary>
            Receipt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Recycle">
            <summary>
            Recycle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RedoAlt">
            <summary>
            Alternate Redo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Registered">
            <summary>
            Registered Trademark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Reply">
            <summary>
            Reply
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ReplyAll">
            <summary>
            reply-all
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Republican">
            <summary>
            Republican
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Restroom">
            <summary>
            Restroom
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Retweet">
            <summary>
            Retweet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ribbon">
            <summary>
            Ribbon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ring">
            <summary>
            Ring
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Road">
            <summary>
            road
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Robot">
            <summary>
            Robot
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Rocket">
            <summary>
            rocket
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Route">
            <summary>
            Route
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Rss">
            <summary>
            rss
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RssSquare">
            <summary>
            RSS Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RubleSign">
            <summary>
            Ruble Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ruler">
            <summary>
            Ruler
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RulerCombined">
            <summary>
            Ruler Combined
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RulerHorizontal">
            <summary>
            Ruler Horizontal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RulerVertical">
            <summary>
            Ruler Vertical
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Running">
            <summary>
            Running
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.RupeeSign">
            <summary>
            Indian Rupee Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SadCry">
            <summary>
            Crying Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SadTear">
            <summary>
            Loudly Crying Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Satellite">
            <summary>
            Satellite
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SatelliteDish">
            <summary>
            Satellite Dish
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.School">
            <summary>
            School
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Screwdriver">
            <summary>
            Screwdriver
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Scroll">
            <summary>
            Scroll
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SdCard">
            <summary>
            Sd Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Search">
            <summary>
            Search
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SearchDollar">
            <summary>
            Search Dollar
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SearchLocation">
            <summary>
            Search Location
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SearchMinus">
            <summary>
            Search Minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SearchPlus">
            <summary>
            Search Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Seedling">
            <summary>
            Seedling
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Shapes">
            <summary>
            Shapes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Share">
            <summary>
            Share
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShareAlt">
            <summary>
            Alternate Share
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShareAltSquare">
            <summary>
            Alternate Share Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShareSquare">
            <summary>
            Share Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShekelSign">
            <summary>
            Shekel Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShieldAlt">
            <summary>
            Alternate Shield
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Ship">
            <summary>
            Ship
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShippingFast">
            <summary>
            Shipping Fast
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShoePrints">
            <summary>
            Shoe Prints
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShoppingBag">
            <summary>
            Shopping Bag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShoppingBasket">
            <summary>
            Shopping Basket
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShoppingCart">
            <summary>
            shopping-cart
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Shower">
            <summary>
            Shower
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ShuttleVan">
            <summary>
            Shuttle Van
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sign">
            <summary>
            Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SignInAlt">
            <summary>
            Alternate Sign In
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SignLanguage">
            <summary>
            Sign Language
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SignOutAlt">
            <summary>
            Alternate Sign Out
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Signal">
            <summary>
            signal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Signature">
            <summary>
            Signature
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SimCard">
            <summary>
            SIM Card
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sitemap">
            <summary>
            Sitemap
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Skating">
            <summary>
            Skating
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Skiing">
            <summary>
            Skiing
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SkiingNordic">
            <summary>
            Skiing Nordic
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Skull">
            <summary>
            Skull
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SkullCrossbones">
            <summary>
            Skull &amp; Crossbones
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Slash">
            <summary>
            Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sleigh">
            <summary>
            Sleigh
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SlidersH">
            <summary>
            Horizontal Sliders
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Smile">
            <summary>
            Smiling Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SmileBeam">
            <summary>
            Beaming Face With Smiling Eyes
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SmileWink">
            <summary>
            Winking Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Smog">
            <summary>
            Smog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Smoking">
            <summary>
            Smoking
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SmokingBan">
            <summary>
            Smoking Ban
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sms">
            <summary>
            SMS
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Snowboarding">
            <summary>
            Snowboarding
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Snowflake">
            <summary>
            Snowflake
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Snowman">
            <summary>
            Snowman
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Snowplow">
            <summary>
            Snowplow
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Socks">
            <summary>
            Socks
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SolarPanel">
            <summary>
            Solar Panel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sort">
            <summary>
            Sort
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortAlphaDown">
            <summary>
            Sort Alpha Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortAlphaUp">
            <summary>
            Sort Alpha Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortAmountDown">
            <summary>
            Sort Amount Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortAmountUp">
            <summary>
            Sort Amount Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortDown">
            <summary>
            Sort Down (Descending)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortNumericDown">
            <summary>
            Sort Numeric Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortNumericUp">
            <summary>
            Sort Numeric Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SortUp">
            <summary>
            Sort Up (Ascending)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Spa">
            <summary>
            Spa
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SpaceShuttle">
            <summary>
            Space Shuttle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Spider">
            <summary>
            Spider
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Spinner">
            <summary>
            Spinner
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Splotch">
            <summary>
            Splotch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SprayCan">
            <summary>
            Spray Can
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SquareFull">
            <summary>
            Square Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SquareRootAlt">
            <summary>
            Alternate Square Root
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stamp">
            <summary>
            Stamp
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StarAndCrescent">
            <summary>
            Star and Crescent
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StarHalf">
            <summary>
            star-half
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StarHalfAlt">
            <summary>
            Alternate Star Half
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StarOfDavid">
            <summary>
            Star of David
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StarOfLife">
            <summary>
            Star of Life
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StepBackward">
            <summary>
            step-backward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StepForward">
            <summary>
            step-forward
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stethoscope">
            <summary>
            Stethoscope
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StickyNote">
            <summary>
            Sticky Note
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stop">
            <summary>
            stop
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StopCircle">
            <summary>
            Stop Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stopwatch">
            <summary>
            Stopwatch
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Store">
            <summary>
            Store
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StoreAlt">
            <summary>
            Alternate Store
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stream">
            <summary>
            Stream
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.StreetView">
            <summary>
            Street View
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Strikethrough">
            <summary>
            Strikethrough
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Stroopwafel">
            <summary>
            Stroopwafel
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Subscript">
            <summary>
            subscript
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Subway">
            <summary>
            Subway
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Suitcase">
            <summary>
            Suitcase
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SuitcaseRolling">
            <summary>
            Suitcase Rolling
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sun">
            <summary>
            Sun
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Superscript">
            <summary>
            superscript
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Surprise">
            <summary>
            Hushed Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Swatchbook">
            <summary>
            Swatchbook
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Swimmer">
            <summary>
            Swimmer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SwimmingPool">
            <summary>
            Swimming Pool
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Synagogue">
            <summary>
            Synagogue
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Sync">
            <summary>
            Sync
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.SyncAlt">
            <summary>
            Alternate Sync
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Syringe">
            <summary>
            Syringe
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Table">
            <summary>
            table
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TableTennis">
            <summary>
            Table Tennis
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tablet">
            <summary>
            tablet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TabletAlt">
            <summary>
            Alternate Tablet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tablets">
            <summary>
            Tablets
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TachometerAlt">
            <summary>
            Alternate Tachometer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tag">
            <summary>
            tag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tags">
            <summary>
            tags
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tape">
            <summary>
            Tape
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tasks">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Taxi">
            <summary>
            Taxi
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Teeth">
            <summary>
            Teeth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TeethOpen">
            <summary>
            Teeth Open
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TemperatureHigh">
            <summary>
            High Temperature
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TemperatureLow">
            <summary>
            Low Temperature
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tenge">
            <summary>
            Tenge
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Terminal">
            <summary>
            Terminal
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TextHeight">
            <summary>
            text-height
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TextWidth">
            <summary>
            text-width
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Th">
            <summary>
            th
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThLarge">
            <summary>
            th-large
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThList">
            <summary>
            th-list
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TheaterMasks">
            <summary>
            Theater Masks
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Thermometer">
            <summary>
            Thermometer
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThermometerEmpty">
            <summary>
            Thermometer Empty
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThermometerFull">
            <summary>
            Thermometer Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThermometerHalf">
            <summary>
            Thermometer 1/2 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThermometerQuarter">
            <summary>
            Thermometer 1/4 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThermometerThreeQuarters">
            <summary>
            Thermometer 3/4 Full
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThumbsDown">
            <summary>
            thumbs-down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ThumbsUp">
            <summary>
            thumbs-up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Thumbtack">
            <summary>
            Thumbtack
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TicketAlt">
            <summary>
            Alternate Ticket
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Times">
            <summary>
            Times
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TimesCircle">
            <summary>
            Times Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tint">
            <summary>
            tint
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TintSlash">
            <summary>
            Tint Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tired">
            <summary>
            Tired Face
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ToggleOff">
            <summary>
            Toggle Off
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ToggleOn">
            <summary>
            Toggle On
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Toilet">
            <summary>
            Toilet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ToiletPaper">
            <summary>
            Toilet Paper
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Toolbox">
            <summary>
            Toolbox
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tools">
            <summary>
            Tools
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tooth">
            <summary>
            Tooth
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Torah">
            <summary>
            Torah
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.ToriiGate">
            <summary>
            Torii Gate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tractor">
            <summary>
            Tractor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Trademark">
            <summary>
            Trademark
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TrafficLight">
            <summary>
            Traffic Light
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Train">
            <summary>
            Train
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tram">
            <summary>
            Tram
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Transgender">
            <summary>
            Transgender
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TransgenderAlt">
            <summary>
            Alternate Transgender
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Trash">
            <summary>
            Trash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TrashAlt">
            <summary>
            Alternate Trash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TrashRestore">
            <summary>
            Trash Restore
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TrashRestoreAlt">
            <summary>
            Alternative Trash Restore
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tree">
            <summary>
            Tree
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Trophy">
            <summary>
            trophy
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Truck">
            <summary>
            truck
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TruckLoading">
            <summary>
            Truck Loading
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TruckMonster">
            <summary>
            Truck Monster
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TruckMoving">
            <summary>
            Truck Moving
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.TruckPickup">
            <summary>
            Truck Side
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tshirt">
            <summary>
            T-Shirt
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tty">
            <summary>
            TTY
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Tv">
            <summary>
            Television
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Umbrella">
            <summary>
            Umbrella
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UmbrellaBeach">
            <summary>
            Umbrella Beach
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Underline">
            <summary>
            Underline
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Undo">
            <summary>
            Undo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UndoAlt">
            <summary>
            Alternate Undo
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UniversalAccess">
            <summary>
            Universal Access
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.University">
            <summary>
            University
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Unlink">
            <summary>
            unlink
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Unlock">
            <summary>
            unlock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UnlockAlt">
            <summary>
            Alternate Unlock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Upload">
            <summary>
            Upload
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserAlt">
            <summary>
            Alternate User
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserAltSlash">
            <summary>
            Alternate User Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserAstronaut">
            <summary>
            User Astronaut
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserCheck">
            <summary>
            User Check
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserCircle">
            <summary>
            User Circle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserClock">
            <summary>
            User Clock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserCog">
            <summary>
            User Cog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserEdit">
            <summary>
            User Edit
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserFriends">
            <summary>
            User Friends
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserGraduate">
            <summary>
            User Graduate
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserInjured">
            <summary>
            User Injured
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserLock">
            <summary>
            User Lock
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserMd">
            <summary>
            Doctor
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserMinus">
            <summary>
            User Minus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserNinja">
            <summary>
            User Ninja
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserNurse">
            <summary>
            Nurse
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserPlus">
            <summary>
            User Plus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserSecret">
            <summary>
            User Secret
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserShield">
            <summary>
            User Shield
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserSlash">
            <summary>
            User Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserTag">
            <summary>
            User Tag
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserTie">
            <summary>
            User Tie
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UserTimes">
            <summary>
            Remove User
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Users">
            <summary>
            Users
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UsersCog">
            <summary>
            Users Cog
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.UtensilSpoon">
            <summary>
            Utensil Spoon
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Utensils">
            <summary>
            Utensils
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VectorSquare">
            <summary>
            Vector Square
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Venus">
            <summary>
            Venus
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VenusDouble">
            <summary>
            Venus Double
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VenusMars">
            <summary>
            Venus Mars
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Vial">
            <summary>
            Vial
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Vials">
            <summary>
            Vials
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Video">
            <summary>
            Video
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VideoSlash">
            <summary>
            Video Slash
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Vihara">
            <summary>
            Vihara
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VolleyballBall">
            <summary>
            Volleyball Ball
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VolumeDown">
            <summary>
            Volume Down
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VolumeMute">
            <summary>
            Volume Mute
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VolumeOff">
            <summary>
            Volume Off
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VolumeUp">
            <summary>
            Volume Up
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VoteYea">
            <summary>
            Vote Yea
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.VrCardboard">
            <summary>
            Cardboard VR
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Walking">
            <summary>
            Walking
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Wallet">
            <summary>
            Wallet
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Warehouse">
            <summary>
            Warehouse
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Water">
            <summary>
            Water
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WaveSquare">
            <summary>
            Square Wave
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WeightHanging">
            <summary>
            Hanging Weight
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Wheelchair">
            <summary>
            Wheelchair
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Wifi">
            <summary>
            WiFi
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Wind">
            <summary>
            Wind
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WindowClose">
            <summary>
            Window Close
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WindowMaximize">
            <summary>
            Window Maximize
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WindowMinimize">
            <summary>
            Window Minimize
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WindowRestore">
            <summary>
            Window Restore
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WineBottle">
            <summary>
            Wine Bottle
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WineGlass">
            <summary>
            Wine Glass
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WineGlassAlt">
            <summary>
            Alternate Wine Glas
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.WonSign">
            <summary>
            Won Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.Wrench">
            <summary>
            Wrench
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.XRay">
            <summary>
            X-Ray
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.YenSign">
            <summary>
            Yen Sign
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontAwesome.Solid.YinYang">
            <summary>
            Yin Yang
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.FontUsage">
            <summary>
            Represents a specific usage of a font.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.Default">
            <summary>
            Gets the default <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>, using the fallback font family.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.Family">
            <summary>
            The font family name.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.Weight">
            <summary>
            The font weight.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.Italics">
            <summary>
            Whether the font is italic.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.Size">
            <summary>
            The size of the text in local space. For a value of 16, a single line will have a height of 16px.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.FixedWidth">
            <summary>
            Whether all characters should be spaced the same distance apart.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.FontUsage.FontName">
            <summary>
            The font's full name to be used for lookups. This is an aggregate of all other properties of <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.
            <remarks>
            The format is of the form: <br />
            {Family} <br />
            {Family}-Italic <br />
            {Family}-{Weight}Italic
            </remarks>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.FontUsage.#ctor(System.String,System.Single,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/> using the specified font <paramref name="family"/>, font <paramref name="weight"/> and a value indicating whether the used font is italic or not.
            </summary>
            <param name="family">The font family name.</param>
            <param name="size">The size of the text in local space. For a value of 16, a single line will have a height of 16px.</param>
            <param name="weight">The font weight.</param>
            <param name="italics">Whether the font is italic.</param>
            <param name="fixedWidth">Whether all characters should be spaced the same distance apart.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.FontUsage.With(System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/> by applying adjustments to this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.
            </summary>
            <param name="family">The font family. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</param>
            <param name="size">The text size. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</param>
            <param name="weight">The font weight. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</param>
            <param name="italics">Whether the font is italic. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</param>
            <param name="fixedWidth">Whether all characters should be spaced apart the same distance. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</param>
            <returns>The resulting <see cref="T:osu.Framework.Graphics.Sprites.FontUsage"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.IconUsage">
            <summary>
            Represents a specific usage of an icon.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.IconUsage.Family">
            <summary>
            The font family name.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.IconUsage.Weight">
            <summary>
            The font weight.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.IconUsage.FontName">
            <summary>
            The font's full name to be used for lookups. This is an aggregate of all other properties of <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/>.
            <remarks>
            The format is of the form: <br />
            {Family} <br />
            {Family}-Italic <br />
            {Family}-{Weight}Italic
            </remarks>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.IconUsage.Icon">
            <summary>
            The icon character.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.IconUsage.#ctor(System.Char,System.String,System.String)">
            <summary>
            Creates an instance of <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/> using the specified font <paramref name="family"/>, font <paramref name="weight"/> and a value indicating whether the used font is italic or not.
            </summary>
            /// <param name="icon">The icon.</param>
            <param name="family">The font family name.</param>
            <param name="weight">The font weight.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.IconUsage.With(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/> by applying adjustments to this <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/>.
            </summary>
            <param name="family">The font family. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/>.</param>
            <param name="weight">The font weight. If null, the value is copied from this <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/>.</param>
            <returns>The resulting <see cref="T:osu.Framework.Graphics.Sprites.IconUsage"/>.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.IHasLineBaseHeight">
            <summary>
            Objects implementing this interface have a line base height when used in a CustomizableTextContainer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.IHasLineBaseHeight.LineBaseHeight">
            <summary>
            The line base height this object has.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.IHasText">
            <summary>
            Interface for <see cref="T:osu.Framework.Graphics.IDrawable"/> components that support reading and writing text.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.Sprite">
            <summary>
            A sprite that displays its texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.TextureShader">
            <summary>
            The shader which should be used for rendering this sprite.
            </summary>
            <remarks>
            This is automatically populated, but may be overridden if required for special cases.
            If overriding, set in a <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/> method or later.</remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.TextureRectangle">
            <summary>
            Sub-rectangle of the sprite in which the texture is positioned.
            Can be either relative coordinates (0 to 1) or absolute coordinates,
            depending on <see cref="P:osu.Framework.Graphics.Sprites.Sprite.TextureRelativeSizeAxes"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.TextureRelativeSizeAxes">
            <summary>
            Whether or not the <see cref="P:osu.Framework.Graphics.Sprites.Sprite.TextureRectangle"/> is in relative coordinates
            (0 to 1) or in absolute coordinates.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.DrawTextureRectangle">
            <summary>
            Absolutely sized sub-rectangle in which the texture is positioned in the coordinate space of this <see cref="T:osu.Framework.Graphics.Sprites.Sprite"/>.
            Based on <see cref="P:osu.Framework.Graphics.Sprites.Sprite.TextureRectangle"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.Sprite.MAX_EDGE_SMOOTHNESS">
            <summary>
            Maximum value that can be set for <see cref="P:osu.Framework.Graphics.Sprites.Sprite.EdgeSmoothness"/> on either axis.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.EdgeSmoothness">
            <summary>
            Determines over how many pixels of width the border of the sprite is smoothed
            in X and Y direction respectively.
            IMPORTANT: When masking an edge-smoothed sprite some of the smooth transition
            may be masked away. This should be counteracted by setting the MaskingSmoothness
            of the masking container to a slightly larger value than EdgeSmoothness.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.Sprite.Texture">
            <summary>
            The texture that this sprite should draw. Any previous texture will be disposed.
            If this sprite's <see cref="P:osu.Framework.Graphics.Drawable.Size"/> is <see cref="F:osuTK.Vector2.Zero"/> (eg if it has not been set previously), the <see cref="P:osu.Framework.Graphics.Drawable.Size"/>
            of this sprite will be set to the size of the texture.
            <see cref="P:osu.Framework.Graphics.Drawable.FillAspectRatio"/> is automatically set to the aspect ratio of the given texture or 1 if the texture is null.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.SpriteDrawNode">
            <summary>
            Draw node containing all necessary information to draw a <see cref="T:osu.Framework.Graphics.Sprites.Sprite"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.SpriteIcon">
            <summary>
            A drawable representing an icon.
            Uses <see cref="T:osu.Framework.IO.Stores.FontStore"/> to perform character lookups.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteIcon.ShadowColour">
            <summary>
            The colour of the shadow displayed around the icon. A shadow will only be displayed if the <see cref="P:osu.Framework.Graphics.Sprites.SpriteIcon.Shadow"/> property is set to true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteIcon.ShadowOffset">
            <summary>
            The offset of the shadow displayed around the icon. A shadow will only be displayed if the <see cref="P:osu.Framework.Graphics.Sprites.SpriteIcon.Shadow"/> property is set to true.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.SpriteText">
            <summary>
            A container for simple text rendering purposes. If more complex text rendering is required, use <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/> instead.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.SpriteText.default_never_fixed_width_characters">
            <remarks>
            <c>U+00A0</c> is the Unicode NON-BREAKING SPACE character (distinct from the standard ASCII space).
            <c>U+202F</c> is the Unicode NARROW NO-BREAK SPACE character.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.TextureShader">
            <summary>
            The shader which should be used for rendering this sprite text.
            </summary>
            <remarks>
            This is automatically populated, but may be overridden if required for special cases.
            If overriding, set in a <see cref="T:osu.Framework.Allocation.BackgroundDependencyLoaderAttribute"/> method or later.</remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Text">
            <summary>
            Gets or sets the text to be displayed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Font">
            <summary>
            Contains information on the font used to display the text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.AllowMultiline">
            <summary>
            True if the text should be wrapped if it gets too wide. Note that \n does NOT cause a line break. If you need explicit line breaks, use <see cref="T:osu.Framework.Graphics.Containers.TextFlowContainer"/> instead.
            </summary>
            <remarks>
            If enabled, <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Truncate"/> will be disabled.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Shadow">
            <summary>
            True if a shadow should be displayed around the text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.ShadowColour">
            <summary>
            The colour of the shadow displayed around the text. A shadow will only be displayed if the <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Shadow"/> property is set to true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.ShadowOffset">
            <summary>
            The offset of the shadow displayed around the text. A shadow will only be displayed if the <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Shadow"/> property is set to true.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.UseFullGlyphHeight">
            <summary>
            True if the <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>'s vertical size should be equal to <see cref="P:osu.Framework.Graphics.Sprites.FontUsage.Size"/>  (the full height) or precisely the size of used characters.
            Set to false to allow better centering of individual characters/numerals/etc.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Truncate">
            <summary>
            If true, text should be truncated when it exceeds the <see cref="P:osu.Framework.Graphics.Drawable.DrawWidth"/> of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>.
            </summary>
            <remarks>
            Has no effect if no <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Width"/> or custom sizing is set.
            If enabled, <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.AllowMultiline"/> will be disabled.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.EllipsisString">
            <summary>
            When <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Truncate"/> is enabled, this decides what string is used to signify that truncation has occured.
            Defaults to "…".
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.IsTruncated">
            <summary>
            When <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Truncate"/> is enabled, this indicates whether <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Text"/> has been visually truncated.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Width">
            <summary>
            Gets or sets the width of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>. The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> will maintain this width when set.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.MaxWidth">
            <summary>
            The maximum width of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>. Affects both auto and fixed sizing modes.
            </summary>
            <remarks>
            This becomes a relative value if this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> is relatively-sized on the X-axis.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Height">
            <summary>
            Gets or sets the height of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>. The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> will maintain this height when set.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Size">
            <summary>
            Gets or sets the size of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>. The <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> will maintain this size when set.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Spacing">
            <summary>
            Gets or sets the spacing between characters of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.Padding">
            <summary>
            Shrinks the space which may be occupied by characters of this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> by the specified amount on each side.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.SpriteText.charactersBacking">
            <summary>
            Glyph list to be passed to <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.characters">
            <summary>
            The characters in local space.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.SpriteText.computeCharacters">
            <summary>
            Compute character textures and positions.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.FixedWidthExcludeCharacters">
            <summary>
            The characters that should be excluded from fixed-width application. Defaults to (".", ",", ":", " ") if null.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.FixedWidthReferenceCharacter">
            <summary>
            The character to use to calculate the fixed width width. Defaults to 'm'.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Sprites.SpriteText.FallbackCharacter">
            <summary>
            The character to fallback to use if a character glyph lookup failed.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.SpriteText.InvalidateTextBuilder">
            <summary>
            Invalidates the current <see cref="T:osu.Framework.Text.TextBuilder"/>, causing a new one to be created next time it's required via <see cref="M:osu.Framework.Graphics.Sprites.SpriteText.CreateTextBuilder(osu.Framework.Text.ITexturedGlyphLookupStore)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.SpriteText.CreateTextBuilder(osu.Framework.Text.ITexturedGlyphLookupStore)">
            <summary>
            Creates a <see cref="T:osu.Framework.Text.TextBuilder"/> to generate the character layout for this <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/>.
            </summary>
            <param name="store">The <see cref="T:osu.Framework.Text.ITexturedGlyphLookupStore"/> where characters should be retrieved from.</param>
            <returns>The <see cref="T:osu.Framework.Text.TextBuilder"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Sprites.SpriteText.SpriteTextDrawNode.updateScreenSpaceCharacters">
            <summary>
            The characters in screen space. These are ready to be drawn.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Sprites.SpriteText.ScreenSpaceCharacterPart">
            <summary>
            A character of a <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> provided with screen space draw coordinates.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.SpriteText.ScreenSpaceCharacterPart.DrawQuad">
            <summary>
            The screen-space quad for the character to be drawn in.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.SpriteText.ScreenSpaceCharacterPart.InflationPercentage">
            <summary>
            Extra padding for the character's texture.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Sprites.SpriteText.ScreenSpaceCharacterPart.Texture">
            <summary>
            The texture to draw the character with.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.TexturedShaderDrawNode.BindTextureShader(osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Binds the <see cref="T:osu.Framework.Graphics.Shaders.IShader"/> used for rendering the texture.
            </summary>
            <param name="renderer">The renderer to use for setting up uniform resources.</param>
        </member>
        <member name="M:osu.Framework.Graphics.TexturedShaderDrawNode.BindUniformResources(osu.Framework.Graphics.Shaders.IShader,osu.Framework.Graphics.Rendering.IRenderer)">
            <summary>
            Binds uniform resources against the provided shader.
            </summary>
            <param name="shader">The shader to bind uniform resources against.</param>
            <param name="renderer">The renderer to use for setting up uniform resources.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.ArrayPoolTextureUpload.#ctor(System.Int32,System.Int32,System.Buffers.ArrayPool{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            Create an empty raw texture with an efficient shared memory backing.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="arrayPool">The source pool to retrieve memory from. Shared default is used if null.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.DisposableTexture">
            <summary>
            A texture which can cleans up any resources held by the underlying <see cref="T:osu.Framework.Graphics.Rendering.INativeTexture"/> on <see cref="M:osu.Framework.Graphics.Textures.DisposableTexture.Dispose(System.Boolean)"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.ITextureStore">
            <summary>
            Provides drawable-ready <see cref="T:osu.Framework.Graphics.Textures.Texture"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.ITextureStore.Get(System.String,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Retrieves a texture from the store.
            </summary>
            <param name="name">The name of the texture.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
            <returns>The texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.ITextureStore.GetAsync(System.String,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode,System.Threading.CancellationToken)">
            <summary>
            Retrieves a texture from the store asynchronously.
            </summary>
            <param name="name">The name of the texture.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The texture.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.ITextureUpload.Data">
            <summary>
            The raw data to be uploaded.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.ITextureUpload.Level">
            <summary>
            The target mipmap level to upload into.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.ITextureUpload.Bounds">
            <summary>
            The target bounds for this upload. If not specified, will assume to be (0, 0, width, height).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.ITextureUpload.Format">
            <summary>
            The texture format for this upload.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.LargeTextureStore">
            <summary>
            A texture store that bypasses atlasing and removes textures from memory after dereferenced by all consumers.
            </summary>
            <remarks>
            It's recommended to use manual mipmaps since large textures are generally rendered at full resolution
            and computing mipmaps automatically will be unnecessary overhead.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.MemoryAllocatorTextureUpload.#ctor(System.Int32,System.Int32,SixLabors.ImageSharp.Memory.MemoryAllocator)">
            <summary>
            Create an empty raw texture with an efficient shared memory backing.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="memoryAllocator">The source to retrieve memory from. Shared default is used if null.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.NativeTexture">
            <summary>
            The platform-specific native texture representation.
            </summary>
            <remarks>
            Disposal of this object is not managed by <see cref="T:osu.Framework.Graphics.Textures.Texture"/> itself since <see cref="T:osu.Framework.Graphics.Textures.Texture"/>s are usually part of a global <see cref="T:osu.Framework.Graphics.Textures.TextureStore"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.Texture.LookupKey">
            <summary>
            A lookup key used by <see cref="T:osu.Framework.Graphics.Textures.TextureStore"/>s.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.Texture.ScaleAdjust">
            <summary>
            At what multiple of our expected resolution is our underlying texture?
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.DisplayWidth">
            <summary>
            The width of this texture when drawn to the screen.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.DisplayHeight">
            <summary>
            The height of this texture when drawn to the screen.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Opacity">
            <summary>
            The texture opacity.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.Texture.WrapModeS">
            <summary>
            The texture wrap mode in horizontal direction.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.Texture.WrapModeT">
            <summary>
            The texture wrap mode in vertical direction.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.#ctor(osu.Framework.Graphics.Rendering.INativeTexture,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Create a new texture.
            </summary>
            <param name="nativeTexture">The GL texture.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.#ctor(osu.Framework.Graphics.Textures.Texture,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Creates a new texture using the same backing texture as another <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
            <param name="parent">The other <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.Crop(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Axes,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Crop the texture.
            </summary>
            <param name="cropRectangle">The rectangle the cropped texture should reference.</param>
            <param name="relativeSizeAxes">Which axes have a relative size in [0,1] in relation to the texture size.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
            <returns>The cropped texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.FromStream(osu.Framework.Graphics.Rendering.IRenderer,System.IO.Stream,osu.Framework.Graphics.Textures.TextureAtlas)">
            <summary>
            Creates a texture from a data stream representing a bitmap.
            </summary>
            <param name="renderer"></param>
            <param name="stream">The data stream containing the texture data.</param>
            <param name="atlas">The atlas to add the texture to.</param>
            <returns>The created texture.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Width">
            <summary>
            The width of this <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Height">
            <summary>
            The height of this <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Size">
            <summary>
            The size of this <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.Bind(System.Int32)">
            <summary>
            Binds this texture for drawing.
            </summary>
            <param name="unit">The sampling unit in which the texture is to be bound.</param>
            <returns>Whether the texture was successfully bound.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.Bind(System.Int32,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Binds this texture for drawing.
            </summary>
            <param name="unit">The sampling unit in which the texture is to be bound.</param>
            <param name="wrapModeS">The horizontal wrap mode.</param>
            <param name="wrapModeT">The vertical wrap mode.</param>
            <returns>Whether the texture was successfully bound.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.SetData(osu.Framework.Graphics.Textures.ITextureUpload)">
            <summary>
            Queue a <see cref="T:osu.Framework.Graphics.Textures.TextureUpload"/> to be uploaded on the draw thread.
            The provided upload will be disposed after the upload is completed.
            </summary>
            <param name="upload">The texture data to upload.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.SetData(osu.Framework.Graphics.Textures.ITextureUpload,osu.Framework.Graphics.Textures.Opacity)">
            <summary>
            Queue a <see cref="T:osu.Framework.Graphics.Textures.TextureUpload"/> to be uploaded on the draw thread.
            The provided upload will be disposed after the upload is completed.
            </summary>
            <param name="upload">The texture data to upload.</param>
            <param name="opacity">The texture's opacity, if known.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.GetTextureRect(System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})">
            <summary>
            Computes the UV coordinates of a sub-area of this texture.
            </summary>
            <param name="area">A display-space area of this texture to compute the UV coordinates of.<br/>
            The full area is used if not provided: (0, 0, <see cref="P:osu.Framework.Graphics.Textures.Texture.DisplayWidth"/>, <see cref="P:osu.Framework.Graphics.Textures.Texture.DisplayHeight"/>).</param>
            <returns>The UV coordinates of <paramref name="area"/> in this texture.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Available">
            <summary>
            Whether <see cref="P:osu.Framework.Graphics.Textures.Texture.NativeTexture"/> is in a usable state.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.UploadComplete">
            <summary>
            Whether the latest data has been uploaded.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.FlushUploads">
            <summary>
            Flush any unprocessed uploads without actually uploading.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.HasSameNativeTexture(osu.Framework.Graphics.Textures.Texture)">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Textures.Texture"/> shares the same native texture backing as another.
            </summary>
            <param name="other">The other <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.BypassTextureUploadQueueing">
            <summary>
            By default, texture uploads are queued for upload at the beginning of each frame, allowing loading them ahead of time.
            When this is true, this will be bypassed and textures will only be uploaded on use. Should be set for every-frame texture uploads
            to avoid overloading the global queue.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.IsAtlasTexture">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Textures.Texture"/> is part of a <see cref="T:osu.Framework.Graphics.Textures.TextureAtlas"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.Texture.GetByteSize">
            <summary>
            The size of this texture in bytes.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.Texture.Identifier">
            <summary>
            An identifier for this texture to show up in the <see cref="T:osu.Framework.Graphics.Visualisation.TextureVisualiser"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureAtlas.Reset">
            <summary>
            Creates a new empty texture.
            </summary>
            <remarks>
            Existing textures created via <see cref="M:osu.Framework.Graphics.Textures.TextureAtlas.Add(System.Int32,System.Int32,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)"/> are not cleared and remain accessible by usages.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureAtlas.Add(System.Int32,System.Int32,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Add (allocate) a new texture in the atlas.
            </summary>
            <param name="width">The width of the requested texture.</param>
            <param name="height">The height of the requested texture.</param>
            <param name="wrapModeS">The horizontal wrap mode of the texture.</param>
            <param name="wrapModeT">The vertical wrap mode of the texture.</param>
            <returns>A texture, or null if the requested size exceeds the atlas' bounds.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureAtlas.canFitEmptyTextureAtlas(System.Int32,System.Int32)">
            <summary>
            Whether or not a texture of the given width and height could be placed into a completely empty texture atlas
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <returns>True if the texture could fit an empty texture atlas, false if it could not</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureAtlas.findPosition(System.Int32,System.Int32)">
            <summary>
            Locates a position in the current texture atlas for a new texture of the given size, or
            creates a new texture atlas if there is not enough space in the current one.
            </summary>
            <param name="width">The width of the requested texture.</param>
            <param name="height">The height of the requested texture.</param>
            <returns>The position within the texture atlas to place the new texture.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureAtlas.BackingAtlasTexture">
            <summary>
            A texture which is acting as the backing for an atlas.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.TextureAtlas.BackingAtlasTexture.padding">
            <summary>
            The amount of padding around each texture in the atlas.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureAtlas.BackingAtlasTexture.checkEdgeRGB(SixLabors.ImageSharp.PixelFormats.Rgba32)">
            <summary>
            Check whether the provided upload edge pixel's RGB components match the initialisation colour.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureLoaderStore">
            <summary>
            Handles the parsing of image data from standard image formats into <see cref="T:osu.Framework.Graphics.Textures.TextureUpload"/>s ready for GPU consumption.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureRegion">
            <summary>
            A sub-region of a <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureRegion.#ctor(osu.Framework.Graphics.Textures.Texture,osu.Framework.Graphics.Primitives.RectangleI,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Creates a new sub-region of a <see cref="T:osu.Framework.Graphics.Textures.Texture"/>.
            </summary>
            <param name="parent">The <see cref="T:osu.Framework.Graphics.Textures.Texture"/> to create a sub-region of.</param>
            <param name="bounds">The texture-space area in <paramref name="parent"/> which bounds this texture.</param>
            <param name="wrapModeS">The horizontal wrap mode for this region.</param>
            <param name="wrapModeT">The vertical warp mode for this region.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureStore">
            <summary>
            Provides drawable-ready <see cref="T:osu.Framework.Graphics.Textures.Texture"/>s sourced from any number of provided sources (via constructor parameter or <see cref="M:osu.Framework.Graphics.Textures.TextureStore.AddTextureSource(osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload})"/>).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.TextureStore.max_atlas_size">
            <remarks>
            While it would be beneficial to have this atlas size be higher (the ideal size seems to be somewhere in the ballpark of 4096),
            built-in GL mipmapping performs poorly on atlases bigger than this maximum.
            If the built-in GL mipmapping is replaced in the future (see custom generation logic in `{GL,Veldrid}Texture`),
            then this limit can be increased to 4096 again.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.TextureStore.ScaleAdjust">
            <summary>
            Decides at what resolution multiple this <see cref="T:osu.Framework.Graphics.Textures.TextureStore"/> is providing sprites at.
            ie. if we are providing high resolution (at 2x the resolution of standard 1366x768) sprites this should be 2.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.AddTextureSource(osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload})">
            <summary>
            Adds a texture data lookup source to load <see cref="T:osu.Framework.Graphics.Textures.Texture"/>s with.
            </summary>
            <remarks>
            Lookup sources can be implemented easily using a <see cref="T:osu.Framework.Graphics.Textures.TextureLoaderStore"/> to provide the final <see cref="T:osu.Framework.Graphics.Textures.TextureUpload"/>.
            </remarks>
            <param name="store">The store to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.RemoveTextureStore(osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload})">
            <summary>
            Removes a texture data lookup source.
            </summary>
            <param name="store">The store to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.AddStore(osu.Framework.Graphics.Textures.ITextureStore)">
            <summary>
            Adds a nested texture store to use during <see cref="T:osu.Framework.Graphics.Textures.Texture"/> lookup if not found in this store.
            </summary>
            <remarks>
            Of note, nested stores will use their own sources and not include any sources added via <see cref="M:osu.Framework.Graphics.Textures.TextureStore.AddTextureSource(osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload})"/>.
            </remarks>
            <param name="store">The store to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.RemoveStore(osu.Framework.Graphics.Textures.ITextureStore)">
            <summary>
            Removes a nested texture store.
            </summary>
            <param name="store">The store to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a texture from the store and adds it to the atlas.
            </summary>
            <param name="name">The name of the texture.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.GetAsync(System.String,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode,System.Threading.CancellationToken)">
            <summary>
            Retrieves a texture from the store and adds it to the atlas.
            </summary>
            <param name="name">The name of the texture.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.Get(System.String)">
            <summary>
            Retrieves a texture from the store and adds it to the atlas.
            </summary>
            <param name="name">The name of the texture.</param>
            <returns>The texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.Get(System.String,osu.Framework.Graphics.Textures.WrapMode,osu.Framework.Graphics.Textures.WrapMode)">
            <summary>
            Retrieves a texture from the store and adds it to the atlas.
            </summary>
            <param name="name">The name of the texture.</param>
            <param name="wrapModeS">The texture wrap mode in horizontal direction.</param>
            <param name="wrapModeT">The texture wrap mode in vertical direction.</param>
            <returns>The texture.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.TryGetCached(System.String,osu.Framework.Graphics.Textures.Texture@)">
            <summary>
            Attempts to retrieve an existing cached texture.
            </summary>
            <param name="lookupKey">The lookup key that uniquely identifies textures in the cache.</param>
            <param name="texture">The returned texture. Null if the texture did not exist in the cache.</param>
            <returns>Whether a cached texture was retrieved.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.CacheAndReturnTexture(System.String,osu.Framework.Graphics.Textures.Texture)">
            <summary>
            Caches and returns the given texture.
            </summary>
            <param name="lookupKey">The lookup key that uniquely identifies textures in the cache.</param>
            <param name="texture">The texture to be cached and returned.</param>
            <returns>The texture to be returned.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureStore.Purge(osu.Framework.Graphics.Textures.Texture)">
            <summary>
            Disposes and removes a texture from the cache.
            </summary>
            <param name="texture">The texture to purge from the cache.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureUpload">
            <summary>
            Low level class for queueing texture uploads to the GPU.
            Should be manually disposed if not queued for upload via <see cref="M:osu.Framework.Graphics.Textures.Texture.SetData(osu.Framework.Graphics.Textures.ITextureUpload)"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.TextureUpload.Level">
            <summary>
            The target mipmap level to upload into.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.TextureUpload.Format">
            <summary>
            The texture format for this upload.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Textures.TextureUpload.Bounds">
            <summary>
            The target bounds for this upload. If not specified, will assume to be (0, 0, width, height).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.TextureUpload.image">
            <summary>
            The backing texture. A handle is kept to avoid early GC.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureUpload.#ctor(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            Create an upload from a <see cref="T:osu.Framework.Graphics.Textures.TextureUpload"/>. This is the preferred method.
            </summary>
            <param name="image">The texture to upload.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureUpload.#ctor(System.IO.Stream)">
            <summary>
            Create an upload from an arbitrary image stream.
            Note that this bypasses per-platform image loading optimisations.
            Use <see cref="T:osu.Framework.Graphics.Textures.TextureLoaderStore"/> as provided from GameHost where possible.
            </summary>
            <param name="stream">The image content.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureUpload.#ctor">
            <summary>
            Create an empty upload. Used by <see cref="T:osu.Framework.Graphics.Rendering.IFrameBuffer"/> for initialisation.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Textures.TextureWithRefCount">
            <summary>
            A texture which shares a common reference count with all other textures using the same <see cref="P:osu.Framework.Graphics.Textures.TextureWithRefCount.NativeTexture"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount.#ctor(System.Object,System.Action)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount"/>.
            </summary>
            <param name="lockObject">The <see cref="T:System.Object"/> which locks will be taken out on.</param>
            <param name="onAllReferencesLost">A delegate to invoke after all references have been lost.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount.Increment">
            <summary>
            Increments the reference count.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount.Decrement">
            <summary>
            Decrements the reference count, invoking <see cref="F:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount.onAllReferencesLost"/> if there are no remaining references.
            The delegate is invoked while a lock on the provided <see cref="F:osu.Framework.Graphics.Textures.TextureWithRefCount.ReferenceCount.lockObject"/> is held.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.WrapMode.None">
            <summary>
            No wrapping. If the texture is part of an atlas, this may read outside the texture's bounds.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.WrapMode.ClampToEdge">
            <summary>
            Clamps to the edge of the texture, repeating the edge to fill the remainder of the draw area.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.WrapMode.ClampToBorder">
            <summary>
            Clamps to a transparent-black border around the texture, repeating the border to fill the remainder of the draw area.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Textures.WrapMode.Repeat">
            <summary>
            Repeats the texture.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformTo``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Transforms a given property or field member of a given <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> <typeparamref name="TThis"/> to <paramref name="newValue"/>.
            The value of the given member is smoothly changed over time using the given <paramref name="easing"/> for tweening.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> to.</param>
            <param name="propertyOrFieldName">The property or field name of the member ot <typeparamref name="TThis"/> to transform.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformTo``3(``0,System.String,``1,System.Double,``2@,System.String)">
            <summary>
            Transforms a given property or field member of a given <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> <typeparamref name="TThis"/> to <paramref name="newValue"/>.
            The value of the given member is smoothly changed over time using the given <paramref name="easing"/> for tweening.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <typeparam name="TEasing">The type of easing.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> to.</param>
            <param name="propertyOrFieldName">The property or field name of the member ot <typeparamref name="TThis"/> to transform.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <param name="grouping">An optional grouping specification to be used when the same property may be touched by multiple transform types.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformTo``1(``0,osu.Framework.Graphics.Transforms.Transform)">
            <summary>
            Applies a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to a given <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/>.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> to apply the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> to.</param>
            <param name="transform">The transform to use.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MakeTransform``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing,System.String)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> for smoothly changing <paramref name="propertyOrFieldName"/>
            over time using the given <paramref name="easing"/> for tweening.
            <see cref="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)"/> is invoked as part of this method.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="propertyOrFieldName">The property or field name of the member ot <typeparamref name="TThis"/> to transform.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <param name="grouping">An optional grouping specification to be used when the same property may be touched by multiple transform types.</param>
            <returns>The resulting <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MakeTransform``3(``0,System.String,``2,System.Double,``1@,System.String)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> for smoothly changing <paramref name="propertyOrFieldName"/>
            over time using the given <paramref name="easing"/> for tweening.
            <see cref="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)"/> is invoked as part of this method.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <typeparam name="TEasing">The type of easing.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="propertyOrFieldName">The property or field name of the member ot <typeparamref name="TThis"/> to transform.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <param name="grouping">An optional grouping specification to be used when the same property may be touched by multiple transform types.</param>
            <returns>The resulting <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``2(``1,osu.Framework.Graphics.Transforms.Transform{``0,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``1},``0,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Populates a newly created <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> with necessary values.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/>s must be populated by this method prior to being used.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="transform">The transform to populate.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <returns>The populated <paramref name="transform"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)">
            <summary>
            Populates a newly created <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> with necessary values.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/>s must be populated by this method prior to being used.
            </summary>
            <typeparam name="TThis">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <typeparam name="TValue">The value type which is being transformed.</typeparam>
            <typeparam name="TEasing">The type of easing.</typeparam>
            <param name="t">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="transform">The transform to populate.</param>
            <param name="newValue">The value to transform to.</param>
            <param name="duration">The transform duration.</param>
            <param name="easing">The transform easing to be used for tweening.</param>
            <returns>The populated <paramref name="transform"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Animate``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])">
            <summary>
            Applies <paramref name="childGenerators"/> via TransformSequence.Append(IEnumerable{Generator})/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="childGenerators">The optional Generators for <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Delay``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])">
            <summary>
            Advances the start time of future appended <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s by <paramref name="delay"/> milliseconds.
            Then, <paramref name="childGenerators"/> are appended via TransformSequence.Append(IEnumerable{Generator})/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="delay">The delay to advance the start time by.</param>
            <param name="childGenerators">The optional Generators for <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished``1(``0)">
            <summary>
            Returns a <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> which waits for all existing transforms to finish.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> which has a delay waiting for all transforms to be completed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated <paramref name="numIters"/> times
            with <paramref name="pause"/> milliseconds between iterations.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <param name="numIters">The number of iterations.</param>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated indefinitely with <paramref name="pause"/>
            milliseconds between iterations.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated indefinitely.
            milliseconds between iterations.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double)">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to repeat indefinitely with <paramref name="pause"/>
            milliseconds between iterations.
            </summary>
            <typeparam name="T">The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> can be applied to.</typeparam>
            <param name="transformable">The <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform`2"/> will be applied to.</param>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single)">
            <summary>
            Rotate over one full rotation with provided parameters.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single,System.Int32)">
            <summary>
            Rotate <paramref name="numRevolutions"/> times with provided parameters.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeIn``1(``0,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``1(``0,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 0 to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeOut``1(``0,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``1(``0,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 1 to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FlashColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Instantaneously flashes <see cref="P:osu.Framework.Graphics.Drawable.Colour"/>, then smoothly changes it back over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.RotateTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Rotation"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Width"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Height"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> or <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToX``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToY``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToOffset``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> by an offset to its final value over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildSize"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.BlurTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the alpha channel of the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``1(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts all parameters of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``2(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the value of a <see cref="T:osu.Framework.Bindables.Bindable`1"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeIn``2(``0,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``2(``0,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 0 to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeOut``2(``0,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``2(``0,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 1 to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FlashColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)">
            <summary>
            Instantaneously flashes <see cref="P:osu.Framework.Graphics.Drawable.Colour"/>, then smoothly changes it back over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.RotateTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Rotation"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Width"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Height"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> or <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToX``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToY``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.MoveToOffset``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> by an offset to its final value over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildSize"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.BlurTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``2(``0,osuTK.Vector2,System.Double,``1@)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,System.Single,System.Double,``1@)">
            <summary>
            Smoothly adjusts the alpha channel of the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,osuTK.Graphics.Color4,System.Double,``1@)">
            <summary>
            Smoothly adjusts the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``2(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,``1@)">
            <summary>
            Smoothly adjusts all parameters of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``3(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2@)">
            <summary>
            Smoothly adjusts the value of a <see cref="T:osu.Framework.Bindables.Bindable`1"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeIn``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeInFromZero``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 0 to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeOut``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeOutFromOne``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 1 to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeColour``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FlashColour``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Instantaneously flashes <see cref="P:osu.Framework.Graphics.Drawable.Colour"/>, then smoothly changes it back over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.RotateTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Rotation"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ScaleTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ScaleTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeWidthTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Width"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeHeightTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Height"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> or <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToX``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToY``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToOffset``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> by an offset to its final value over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeEdgeEffectTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the alpha channel of the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeEdgeEffectTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformRelativeChildSizeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildSize"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformRelativeChildOffsetTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.BlurTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformSpacingTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformBindableTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)">
            <summary>
            Smoothly adjusts the value of a <see cref="T:osu.Framework.Bindables.Bindable`1"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeIn``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeInFromZero``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 0 to 1 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeOut``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeOutFromOne``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> from 1 to 0 over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Alpha"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeColour``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Colour"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FlashColour``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1)">
            <summary>
            Instantaneously flashes <see cref="P:osu.Framework.Graphics.Drawable.Colour"/>, then smoothly changes it back over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.RotateTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Rotation"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ScaleTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ScaleTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Scale"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Size"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeWidthTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Width"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.ResizeHeightTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Height"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Graphics.Direction,System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> or <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToX``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.X"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToY``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Y"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.MoveToOffset``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Drawable.Position"/> by an offset to its final value over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeEdgeEffectTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Single,System.Double,``1)">
            <summary>
            Smoothly adjusts the alpha channel of the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.FadeEdgeEffectTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Graphics.Color4,System.Double,``1)">
            <summary>
            Smoothly adjusts the colour of <see cref="P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformRelativeChildSizeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildSize"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformRelativeChildOffsetTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.BlurTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformSpacingTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},osuTK.Vector2,System.Double,``1)">
            <summary>
            Smoothly adjusts <see cref="P:osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.TransformSequenceExtensions.TransformBindableTo``3(osu.Framework.Graphics.Transforms.TransformSequence{``0},osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2)">
            <summary>
            Smoothly adjusts the value of a <see cref="T:osu.Framework.Bindables.Bindable`1"/> over time.
            </summary>
            <returns>A <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to which further transforms can be added.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.DefaultEasingFunction">
            <summary>
            An easing function corresponding to one of the <see cref="T:osu.Framework.Graphics.Easing"/> types.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.DefaultEasingFunction.#ctor(osu.Framework.Graphics.Easing)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Transforms.DefaultEasingFunction"/> for an <see cref="T:osu.Framework.Graphics.Easing"/>.
            </summary>
            <param name="easing">The <see cref="T:osu.Framework.Graphics.Easing"/> type.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.IEasingFunction">
            <summary>
            An interface for an easing function that is applied to <see cref="T:osu.Framework.Graphics.Transforms.Transform`1"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.IEasingFunction.ApplyEasing(System.Double)">
            <summary>
            Applies the easing function to a time value.
            </summary>
            <param name="time">The time value to apply the easing to.</param>
            <returns>The eased time value.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.ITransformable.BeginDelayedSequence(System.Double,System.Boolean)">
            <summary>
            Start a sequence of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s with a (cumulative) relative delay applied.
            </summary>
            <param name="delay">The offset in milliseconds from current time. Note that this stacks with other nested sequences.</param>
            <param name="recursive">Whether this should be applied to all children. True by default.</param>
            <returns>An <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used in a using() statement.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.ITransformable.BeginAbsoluteSequence(System.Double,System.Boolean)">
            <summary>
            Start a sequence of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s from an absolute time value (adjusts <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/>).
            </summary>
            <param name="newTransformStartTime">The new value for <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/>.</param>
            <param name="recursive">Whether this should be applied to all children. True by default.</param>
            <returns>An <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used in a using() statement.</returns>
            <exception cref="T:System.InvalidOperationException">Absolute sequences should never be nested inside another existing sequence.</exception>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.ITransformable.Time">
            <summary>
            The current frame's time as observed by this class's <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker">
            <summary>
            Tracks the lifetime of transforms for one specified target member.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.Transforms">
            <summary>
            A list of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s associated with the <see cref="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.TargetGrouping"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.TargetGrouping">
            <summary>
            The member this instance is tracking.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.currentTransformID">
            <summary>
            Used to assign a monotonically increasing ID to <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s as they are added. This member is
            incremented whenever a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> is added.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.lastAppliedTransformIndices">
            <summary>
            The index of the last transform in <see cref="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.transforms"/> to be applied to completion.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.TargetMembers">
            <summary>
            All <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/>s which are handled by this tracker.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.AddTransform(osu.Framework.Graphics.Transforms.Transform,System.Nullable{System.UInt64})">
            <summary>
            Adds to this object a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> which was previously populated using this object via
            <see cref="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)"/>.
            Added <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s are immediately applied, and therefore have an immediate effect on this object if the current time of this
            object falls within <see cref="P:osu.Framework.Graphics.Transforms.Transform.StartTime"/> and <see cref="P:osu.Framework.Graphics.Transforms.Transform.EndTime"/>.
            If <see cref="P:osu.Framework.Graphics.Transforms.Transformable.Clock"/> is null, e.g. because this object has just been constructed, then the given transform will be finished instantaneously.
            </summary>
            <param name="transform">The <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to be added.</param>
            <param name="customTransformID">When not null, the <see cref="F:osu.Framework.Graphics.Transforms.Transform.TransformID"/> to assign for ordering.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.RemoveTransform(osu.Framework.Graphics.Transforms.Transform)">
            <summary>
            Removes a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>.
            </summary>
            <param name="toRemove">The <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.ClearTransformsAfter(System.Double,System.String)">
            <summary>
            Removes <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s that start after <paramref name="time"/>.
            </summary>
            <param name="time">The time to clear <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s after.</param>
            <param name="targetMember">
            An optional <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/> name of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s to clear.
            Null for clearing all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.FinishTransforms(System.String)">
            <summary>
            Finishes specified <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s, using their <see cref="P:osu.Framework.Graphics.Transforms.Transform`1.EndValue"/>.
            </summary>
            <param name="targetMember">
            An optional <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/> name of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s to finish.
            Null for finishing all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.getLastAppliedIndex(System.String)">
            <summary>
            Retrieve the last transform index that was <see cref="F:osu.Framework.Graphics.Transforms.Transform.AppliedToEnd"/>.
            </summary>
            <param name="targetMember">An optional target member. If null, the lowest common last application is returned.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.setLastAppliedIndex(System.String,System.Int32)">
            <summary>
            Set the last transform index that was <see cref="F:osu.Framework.Graphics.Transforms.Transform.AppliedToEnd"/> for a specific target member.
            </summary>
            <param name="targetMember">The target member to set the index of.</param>
            <param name="index">The index of the transform in <see cref="F:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.transforms"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TargetGroupingTransformTracker.resetLastAppliedCache">
            <summary>
            Reset the last applied index cache completely.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.Transform.Applied">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> has been applied to an <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.Transform.AppliedToEnd">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> has been applied completely to an <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/>.
            Used to track whether we still need to apply for targets which allow rewind.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Transforms.Transform.Rewindable">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> can be rewound.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transform.LoopCount">
            <summary>
            The remaining number of loops, including the current loop. If -1, then this loops indefinitely.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transform.TargetGrouping">
            <summary>
            The name of the grouping this <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> belongs to.
            Defaults to <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/>.
            </summary>
            <remarks>
            Transforms in a single group affect the same property (or properties) of a <see cref="T:osu.Framework.Graphics.Transforms.Transformable"/>.
            It is assumed that transforms in different groups are independent from each other
            in that they affect different properties, and therefore they can be applied independently
            in any order without affecting the end result.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.Transformable">
            <summary>
            A type of object which can have <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s operating upon it.
            An implementer of this class must call <see cref="M:osu.Framework.Graphics.Transforms.Transformable.UpdateTransforms"/> to
            update and apply its <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.Clock">
            <summary>
            The clock that is used to provide the timing for this object's <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.Time">
            <summary>
            The current frame's time as observed by this class's <see cref="P:osu.Framework.Graphics.Transforms.Transformable.Clock"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.TransformStartTime">
            <summary>
            The starting time to use for new <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.TransformDelay">
            <summary>
            Delay from the current time until new <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s are started, in milliseconds.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.Transforms">
            <summary>
            A lazily-initialized list of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s applied to this object.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.TransformsForTargetMember(System.String)">
            <summary>
            Retrieves the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s for a given target member.
            </summary>
            <param name="targetMember">The target member to find the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s for.</param>
            <returns>An enumeration over the transforms for the target member.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.LatestTransformEndTime">
            <summary>
            The end time in milliseconds of the latest transform enqueued for this <see cref="T:osu.Framework.Graphics.Transforms.Transformable"/>.
            Will return the current time value if no transforms are present.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Transforms.Transformable.RemoveCompletedTransforms">
            <summary>
            Whether to remove completed transforms from the list of applicable transforms. Setting this to false allows for rewinding transforms.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.UpdateTransforms">
            <summary>
            Resets <see cref="P:osu.Framework.Graphics.Transforms.Transformable.TransformDelay"/> and processes updates to this class based on loaded <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.updateTransforms(System.Double,System.Boolean)">
            <summary>
            Process updates to this class based on loaded <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s. This does not reset <see cref="P:osu.Framework.Graphics.Transforms.Transformable.TransformDelay"/>.
            This is used for performing extra updates on <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s when new <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s are added.
            </summary>
            <param name="time">The point in time to update transforms to.</param>
            <param name="forceRewindReprocess">Whether prior transforms should be reprocessed even if a rewind was not detected.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.RemoveTransform(osu.Framework.Graphics.Transforms.Transform)">
            <summary>
            Removes a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>.
            </summary>
            <param name="toRemove">The <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.ClearTransforms(System.Boolean,System.String)">
            <summary>
            Clears <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </summary>
            <param name="propagateChildren">Whether we also clear the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s of children.</param>
            <param name="targetMember">
            An optional <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/> name of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s to clear.
            Null for clearing all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.ClearTransformsAfter(System.Double,System.Boolean,System.String)">
            <summary>
            Removes <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s that start after <paramref name="time"/>.
            </summary>
            <param name="time">The time to clear <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s after.</param>
            <param name="propagateChildren">Whether to also clear such <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s of children.</param>
            <param name="targetMember">
            An optional <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/> name of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s to clear.
            Null for clearing all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.ApplyTransformsAt(System.Double,System.Boolean)">
            <summary>
            Applies <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s at a point in time. This may only be called if <see cref="P:osu.Framework.Graphics.Transforms.Transformable.RemoveCompletedTransforms"/> is set to false.
            <para>
            This does not change the clock time.
            </para>
            </summary>
            <param name="time">The time to apply <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s at.</param>
            <param name="propagateChildren">Whether to also apply children's <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s at <paramref name="time"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.FinishTransforms(System.Boolean,System.String)">
            <summary>
            Finishes specified <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s, using their <see cref="P:osu.Framework.Graphics.Transforms.Transform`1.EndValue"/>.
            </summary>
            <param name="propagateChildren">Whether we also finish the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s of children.</param>
            <param name="targetMember">
            An optional <see cref="P:osu.Framework.Graphics.Transforms.Transform.TargetMember"/> name of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s to finish.
            Null for finishing all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.AddDelay(System.Double,System.Boolean)">
            <summary>
            Add a delay duration to <see cref="P:osu.Framework.Graphics.Transforms.Transformable.TransformDelay"/>, in milliseconds.
            </summary>
            <param name="duration">The delay duration to add.</param>
            <param name="propagateChildren">Whether we also delay down the child tree.</param>
            <returns>This</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.BeginDelayedSequence(System.Double,System.Boolean)">
            <summary>
            Start a sequence of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s with a (cumulative) relative delay applied.
            </summary>
            <param name="delay">The offset in milliseconds from current time. Note that this stacks with other nested sequences.</param>
            <param name="recursive">Whether this should be applied to all children. True by default.</param>
            <returns>An <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used in a using() statement.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.Transformable.DelayedSequenceSender">
            An ad-hoc struct used as a closure environment in <see cref="M:osu.Framework.Graphics.Transforms.Transformable.BeginDelayedSequence(System.Double,System.Boolean)" />.
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.BeginAbsoluteSequence(System.Double,System.Boolean)">
            <summary>
            Start a sequence of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s from an absolute time value (adjusts <see cref="P:osu.Framework.Graphics.Transforms.Transformable.TransformStartTime"/>).
            </summary>
            <param name="newTransformStartTime">The new value for <see cref="P:osu.Framework.Graphics.Transforms.Transformable.TransformStartTime"/>.</param>
            <param name="recursive">Whether this should be applied to all children. True by default.</param>
            <returns>An <see cref="T:osu.Framework.Allocation.InvokeOnDisposal"/> to be used in a using() statement.</returns>
            <exception cref="T:System.InvalidOperationException">Absolute sequences should never be nested inside another existing sequence.</exception>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.Transformable.AbsoluteSequenceSender">
            An ad-hoc struct used as a closure environment in <see cref="M:osu.Framework.Graphics.Transforms.Transformable.BeginAbsoluteSequence(System.Double,System.Boolean)" />.
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.AddTransform(osu.Framework.Graphics.Transforms.Transform,System.Nullable{System.UInt64})">
            <summary>
            Adds to this object a <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> which was previously populated using this object via
            <see cref="M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)"/>.
            Added <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s are immediately applied, and therefore have an immediate effect on this object if the current time of this
            object falls within <see cref="P:osu.Framework.Graphics.Transforms.Transform.StartTime"/> and <see cref="P:osu.Framework.Graphics.Transforms.Transform.EndTime"/>.
            If <see cref="P:osu.Framework.Graphics.Transforms.Transformable.Clock"/> is null, e.g. because this object has just been constructed, then the given transform will be finished instantaneously.
            </summary>
            <param name="transform">The <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to be added.</param>
            <param name="customTransformID">When not null, the <see cref="F:osu.Framework.Graphics.Transforms.Transform.TransformID"/> to assign for ordering.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.Transformable.EnsureTransformMutationAllowed">
            <summary>
            Check whether the current thread is valid for operating on thread-safe properties.
            Will throw on failure.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.TransformCustom`3">
            <summary>
            A transform which operates on arbitrary fields or properties of a given target.
            </summary>
            <typeparam name="TValue">The type of the field or property to operate upon.</typeparam>
            <typeparam name="TEasing">The type of easing.</typeparam>
            <typeparam name="T">The type of the target to operate upon.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformCustom`3.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance operating on a property or field of <typeparamref name="T"/>. The property or field is
            denoted by its name, passed as <paramref name="propertyOrFieldName"/>.
            By default, an interpolation method "ValueAt" from <see cref="T:osu.Framework.Utils.Interpolation"/> with suitable signature is
            picked for interpolating between <see cref="P:osu.Framework.Graphics.Transforms.Transform`1.StartValue"/> and
            <see cref="P:osu.Framework.Graphics.Transforms.Transform`1.EndValue"/> according to <see cref="P:osu.Framework.Graphics.Transforms.Transform.StartTime"/>,
            <see cref="P:osu.Framework.Graphics.Transforms.Transform.EndTime"/>, and a current time.
            </summary>
            <param name="propertyOrFieldName">The property or field name to be operated upon.</param>
            <param name="grouping">An optional grouping, for a case where the target property can potentially conflict with others.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.TransformSequence`1">
            <summary>
            A sequence of <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s all operating upon the same <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/>
            of type <typeparamref name="T"/>.
            Exposes various operations to extend the sequence by additional <see cref="N:osu.Framework.Graphics.Transforms"/> such as
            delays, loops, continuations, and events.
            </summary>
            <typeparam name="T">
            The type of the <see cref="T:osu.Framework.Graphics.Transforms.ITransformable"/> the <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s in this sequence operate upon.
            </typeparam>
        </member>
        <member name="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator">
            <summary>
            A delegate that generates a new <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> on a given <paramref name="origin"/>.
            </summary>
            <param name="origin">The origin to generate a <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> for.</param>
            <returns>The generated <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.#ctor(`0)">
            <summary>
            Creates a new empty <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> attached to a given <paramref name="origin"/>.
            </summary>
            <param name="origin">The <typeparamref name="T"/> to attach the new <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Add(osu.Framework.Graphics.Transforms.Transform)">
            <summary>
            Adds an existing <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> operating on <see cref="F:osu.Framework.Graphics.Transforms.TransformSequence`1.origin"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            </summary>
            <param name="transform">The <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator})">
            <summary>
            Appends multiple <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            </summary>
            <param name="childGenerators">The <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator)">
            <summary>
            Appends a <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            The <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/> is invoked within a <see cref="M:osu.Framework.Graphics.Transforms.Transformable.BeginAbsoluteSequence(System.Double,System.Boolean)"/>
            such that the generated <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> starts at the correct point in time.
            Its <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s are then merged into this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            </summary>
            <param name="childGenerator">The <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/> to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append``1(System.Func{`0,``0},``0@)">
            <summary>
            Invokes <paramref name="originFunc"/> inside a <see cref="M:osu.Framework.Graphics.Transforms.Transformable.BeginAbsoluteSequence(System.Double,System.Boolean)"/>
            such that <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/> is the current time of this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            It is the responsibility of <paramref name="originFunc"/> to make appropriate use of <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/>.
            </summary>
            <typeparam name="TResult">The return type of <paramref name="originFunc"/>.</typeparam>
            <param name="originFunc">The function to be invoked.</param>
            <param name="result">The resulting value of the invocation of <paramref name="originFunc"/>.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(System.Action{`0})">
            <summary>
            Invokes <paramref name="originAction"/> inside a <see cref="M:osu.Framework.Graphics.Transforms.Transformable.BeginAbsoluteSequence(System.Double,System.Boolean)"/>
            such that <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/> is the current time of this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            It is the responsibility of <paramref name="originAction"/> to make appropriate use of <see cref="P:osu.Framework.Graphics.Transforms.ITransformable.TransformStartTime"/>.
            </summary>
            <param name="originAction">The function to be invoked.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Loop(System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated <paramref name="numIters"/> times
            with <paramref name="pause"/> milliseconds between iterations.
            </summary>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <param name="numIters">The number of iterations.</param>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Loop(System.Double,System.Int32)">
            <summary>
            Repeats all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s within this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>
            <paramref name="numIters"/> times with <paramref name="pause"/> milliseconds between iterations.
            </summary>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <param name="numIters">The number of iterations.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Loop(osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated indefinitely.
            </summary>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Loop(System.Double,osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Append a looping <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> to this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            All <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s generated by <paramref name="childGenerators"/> are appended to
            this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> and then repeated indefinitely with <paramref name="pause"/>
            milliseconds between iterations.
            </summary>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <param name="childGenerators">The functions to generate the <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be looped.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Loop(System.Double)">
            <summary>
            Repeats all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s within this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> indefinitely.
            </summary>
            <param name="pause">The pause between iterations in milliseconds.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Then(osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Advances the start time of future appended <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to the latest end time of all
            <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s in this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.
            Then, <paramref name="childGenerators"/> are appended via <see cref="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator})"/>.
            </summary>
            <param name="childGenerators">The optional <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s for <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Then(System.Double,osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Advances the start time of future appended <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to the latest end time of all
            <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s in this <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> plus <paramref name="delay"/> milliseconds.
            Then, <paramref name="childGenerators"/> are appended via <see cref="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator})"/>.
            </summary>
            <param name="delay">The delay after the latest end time of all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s.</param>
            <param name="childGenerators">The optional <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s for <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Delay(System.Double,osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator[])">
            <summary>
            Advances the start time of future appended <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s by <paramref name="delay"/> milliseconds.
            Then, <paramref name="childGenerators"/> are appended via <see cref="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Append(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Transforms.TransformSequence{`0}.Generator})"/>.
            </summary>
            <param name="delay">The delay to advance the start time by.</param>
            <param name="childGenerators">The optional <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1.Generator"/>s for <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>s to be appended.</param>
            <returns>This <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.OnComplete(System.Action{`0})">
            <summary>
            Registers a callback <paramref name="function"/> which is triggered once all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s in this
            <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> complete successfully.
            If all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s already completed successfully at the point of this call, then
            <paramref name="function"/> is triggered immediately.
            Only a single callback function may be registered.
            </summary>
            <param name="function">The callback function.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.OnAbort(System.Action{`0})">
            <summary>
            Registers a callback <paramref name="function"/> which is triggered once any <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> in this
            <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> is aborted (e.g. by another <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> overriding it).
            Only a single callback function may be registered.
            </summary>
            <param name="function">The callback function.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Transforms.TransformSequence`1.Finally(System.Action{`0})">
            <summary>
            Registers a callback <paramref name="function"/> which is triggered once any <see cref="T:osu.Framework.Graphics.Transforms.Transform"/> in this
            <see cref="T:osu.Framework.Graphics.Transforms.TransformSequence`1"/> is aborted or when all <see cref="T:osu.Framework.Graphics.Transforms.Transform"/>s complete successfully.
            This is equivalent with calling both <see cref="M:osu.Framework.Graphics.Transforms.TransformSequence`1.OnComplete(System.Action{`0})"/> and <see cref="M:osu.Framework.Graphics.Transforms.TransformSequence`1.OnAbort(System.Action{`0})"/>.
            Only a single callback function may be registered.
            </summary>
            <param name="function">The callback function.</param>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.FlashColour">
            <summary>
            The colour the background will flash with when this button is clicked.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.HoverColour">
            <summary>
            The additive colour that is applied to the background when hovered.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.DisabledColour">
            <summary>
            The additive colour that is applied to this button when disabled.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.HoverFadeDuration">
            <summary>
            The duration of the transition when hovering.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.FlashDuration">
            <summary>
            The duration of the flash when this button is clicked.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicButton.DisabledFadeDuration">
            <summary>
            The duration of the transition when toggling the Enabled state.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.BasicCheckbox">
            <summary>
            A basic checkbox for framework internal use and for prototyping UI.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.CheckedColor">
            <summary>
            The color of the checkbox when the checkbox is checked. Defaults to White
            </summary>
            <remarks>
            The changes done to this property are only applied when <see cref="P:osu.Framework.Graphics.UserInterface.Checkbox.Current"/>'s value changes.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.UncheckedColor">
            <summary>
            The color of the checkbox when the checkbox is not checked. Default is an white with low opacity.
            </summary>
            <remarks>
            The changes done to this property are only applied when <see cref="P:osu.Framework.Graphics.UserInterface.Checkbox.Current"/>'s value changes.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.FadeDuration">
            <summary>
            The length of the duration between checked and unchecked.
            </summary>
            <remarks>
            Changes to this property only affect future transitions between checked and unchecked.
            Transitions between checked and unchecked that are already in progress are unaffected.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.LabelText">
            <summary>
            The text in the label.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.LabelSpacing">
            <summary>
            The spacing between the checkbox and the label.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.BasicCheckbox.RightHandedCheckbox">
             <summary>
            
             </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.Caret">
            <summary>
            A UI component generally used to show the current cursor location in a text edit field.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Caret.DisplayAt(osuTK.Vector2,System.Nullable{System.Single})">
            <summary>
            Request the caret be displayed at a particular location, with an optional selection length.
            </summary>
            <param name="position">The position (in parent space) where the caret should be displayed.</param>
            <param name="selectionWidth">If a selection is active, the length (in parent space) of the selection. The caret should extend to display this selection to the user.</param>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.Checkbox">
            <summary>
            An abstract class that implements the functionality of a checkbox.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Checkbox.OnUserChange(System.Boolean)">
            <summary>
            Triggered when the value is changed based on end-user input to this control.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.CircularBlob.InnerRadius">
            <summary>
            The inner fill radius, relative to the <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> of the <see cref="T:osu.Framework.Graphics.UserInterface.CircularBlob"/>.
            The value range is 0 to 1 where 0 is invisible and 1 is completely filled.
            The entire texture still fills the disk without cropping it.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.CircularProgress.InnerRadius">
            <summary>
            The inner fill radius, relative to the <see cref="P:osu.Framework.Graphics.Drawable.DrawSize"/> of the <see cref="T:osu.Framework.Graphics.UserInterface.CircularProgress"/>.
            The value range is 0 to 1 where 0 is invisible and 1 is completely filled.
            The entire texture still fills the disk without cropping it.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.ColourPicker">
            <summary>
            A group of controls to be used for selecting a colour.
            Allows both for mouse-interactive input (via <see cref="T:osu.Framework.Graphics.UserInterface.HSVColourPicker"/>) and textual input (via <see cref="T:osu.Framework.Graphics.UserInterface.HexColourPicker"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.ColourPicker.CreateHSVColourPicker">
            <summary>
            Creates the control that allows for interactively specifying the target colour, using the hue-saturation-value colour model.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.ColourPicker.CreateHexColourPicker">
            <summary>
            Creates the control that allows for specifying the target colour using a hex code.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.Counter">
            <summary>
            A drawable object that supports counting to values.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Counter.Count">
            <summary>
            The current count.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Counter.OnCountChanged(System.Double)">
            <summary>
            Invoked when <see cref="P:osu.Framework.Graphics.UserInterface.Counter.Count"/> has changed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.DirectorySelector">
            <summary>
            A component which allows a user to select a directory.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelector.CreateBreadcrumb">
            <summary>
            Create the breadcrumb part of the control.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelector.CreateHiddenToggleButton">
            <summary>
            Create a button that toggles the display of hidden items.
            </summary>
            <remarks>
            Unless overridden, a toggle button will not be added.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelector.CreateParentDirectoryItem(System.IO.DirectoryInfo)">
            <summary>
            Create the directory item that resolves the parent directory.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.DirectorySelector.directoryChanging">
            <summary>
            Because <see cref="F:osu.Framework.Graphics.UserInterface.DirectorySelector.CurrentPath"/> changes may not necessarily lead to directories that exist/are accessible,
            <see cref="M:osu.Framework.Graphics.UserInterface.DirectorySelector.updateDisplay"/> may need to change <see cref="F:osu.Framework.Graphics.UserInterface.DirectorySelector.CurrentPath"/> again to lead to a directory that is actually accessible.
            This flag intends to prevent recursive <see cref="M:osu.Framework.Graphics.UserInterface.DirectorySelector.updateDisplay"/> calls from taking place during the process of finding an accessible directory.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelector.TryGetEntriesForPath(System.IO.DirectoryInfo,System.Collections.Generic.ICollection{osu.Framework.Graphics.UserInterface.DirectorySelectorItem}@)">
            <summary>
            Attempts to create entries to display for the given <paramref name="path"/>.
            A return value of <see langword="false"/> is used to indicate a non-specific I/O failure, signaling to the selector that it should attempt
            to find another directory to display (since <paramref name="path"/> is inaccessible).
            </summary>
            <param name="path">The directory to create entries for.</param>
            <param name="items">
            The created <see cref="T:osu.Framework.Graphics.UserInterface.DirectorySelectorItem"/>s, provided that the <paramref name="path"/> could be entered.
            Not valid for reading if the return value of the method is <see langword="false"/>.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelector.NotifySelectionError">
            <summary>
            Called when an error has occured. Usually happens when trying to access protected directories.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelectorBreadcrumbDisplay.CreateCaption">
            <summary>
            Creates a caption to be displayed in front of the breadcrumb items.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelectorBreadcrumbDisplay.CreateDirectoryItem(System.IO.DirectoryInfo,System.String)">
            <summary>
            Create a directory item in the breadcrumb trail.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelectorBreadcrumbDisplay.CreateRootDirectoryItem">
            <summary>
            Create the root directory item in the breadcrumb trail.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.DirectorySelectorItem.FONT_SIZE">
            <summary>
            Gets or sets the font size of this <see cref="T:osu.Framework.Graphics.UserInterface.DirectorySelectorItem"/>'s icon and text.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.DirectorySelectorItem.FallbackName">
            <summary>
            The display name of this <see cref="T:osu.Framework.Graphics.UserInterface.DirectorySelectorItem"/> to fallback to when a display name is not provided.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.DirectorySelectorItem.Icon">
            <summary>
            The icon of this <see cref="T:osu.Framework.Graphics.UserInterface.DirectorySelectorItem"/> to use.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelectorItem.CreateSpriteText">
            <summary>
            Creates the sprite text to be used for the item text.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DirectorySelectorItem.ApplyHiddenState">
            <summary>
            Called when this <see cref="T:osu.Framework.Graphics.UserInterface.DirectorySelectorItem"/> is a representation of a hidden item.
            Used to customize the appearance of hidden items.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.Dropdown`1">
            <summary>
            A drop-down menu to select from a group of values.
            </summary>
            <typeparam name="T">Type of value to select.</typeparam>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.AlwaysShowSearchBar">
            <summary>
            Whether this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/> should always have a search bar displayed in the header when opened.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.CreateHeader">
            <summary>
            Creates the header part of the control.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Dropdown`1.itemMap">
            <summary>
            A mapping from menu items to their values.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.Items">
            <summary>
            Enumerate all values in the dropdown.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.ItemSource">
            <summary>
            Allows the developer to assign an <see cref="T:osu.Framework.Bindables.IBindableList`1"/> as the source
            of items for this dropdown.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.AddDropdownItem(`0)">
            <summary>
            Add a menu item directly while automatically generating a label.
            </summary>
            <param name="value">Value selected by the menu item.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.RemoveDropdownItem(`0)">
            <summary>
            Remove a menu item directly.
            </summary>
            <param name="value">Value of the menu item to be removed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.GenerateItemText(`0)">
            <summary>
            Called to generate the text to be shown for this <paramref name="item"/>.
            </summary>
            <remarks>
            Can be overriden if custom behaviour is needed. Will only be called after this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/> has fully loaded.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.Back">
            <summary>
            Puts the state of this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/> one level back:
             - If the dropdown search bar contains text, this method will reset it.
             - If the dropdown is open, this method wil close it.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.ClearItems">
            <summary>
            Clear all the menu items.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.HideItem(`0)">
            <summary>
            Hide the menu item of specified value.
            </summary>
            <param name="val">The value to hide.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.ShowItem(`0)">
            <summary>
            Show the menu item of specified value.
            </summary>
            <param name="val">The value to show.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.CreateMenu">
            <summary>
            Creates the menu body.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.SearchTerm">
            <summary>
            Search terms to filter items displayed in this menu.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.SelectItem(osu.Framework.Graphics.UserInterface.DropdownMenuItem{`0})">
            <summary>
            Selects an item from this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu"/>.
            </summary>
            <param name="item">The item to select.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.HideItem(osu.Framework.Graphics.UserInterface.DropdownMenuItem{`0})">
            <summary>
            Shows an item from this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu"/>.
            </summary>
            <param name="item">The item to show.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.ShowItem(osu.Framework.Graphics.UserInterface.DropdownMenuItem{`0})">
            <summary>
            Hides an item from this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu"/>
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.AnyPresent">
            <summary>
            Whether any items part of this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu"/> are present.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.PreselectItem(osu.Framework.Graphics.UserInterface.MenuItem)">
            <summary>
            Preselects an item from this <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu"/>.
            </summary>
            <param name="item">The item to select.</param>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Dropdown`1.DropdownMenu.DrawableDropdownMenuItem.IsPreSelected">
            <summary>
            Denotes whether this menu item will be selected on <see cref="F:osuTK.Input.Key.Enter"/> press.
            This property is related to selecting menu items using keyboard or hovering.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.Back">
            <summary>
            Clears the search term.
            </summary>
            <returns>If the search term was cleared.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.updateMenuState">
            <summary>
            Opens or closes the menu depending on whether the textbox is focused.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.updateTextBoxVisibility">
            <summary>
            Updates the textbox visibility.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.onTextBoxCommit(osu.Framework.Graphics.UserInterface.TextBox,System.Boolean)">
            <summary>
            Handles textbox commits to select the current item.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.onMenuStateChanged(osu.Framework.Graphics.UserInterface.MenuState)">
            <summary>
            Handles changes to the menu visibility.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.onClick(osu.Framework.Input.Events.ClickEvent)">
            <summary>
            Handles clicks on the search bar.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.DropdownSearchBar.CreateTextBox">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.FileSelector">
            <summary>
            A component which allows a user to select a file.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.HexColourPicker.Spacing">
            <summary>
            Sets the spacing between the hex input text box and the colour preview.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.HexColourPicker.Background">
            <summary>
            The background of the control.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HexColourPicker.CreateHexCodeTextBox">
            <summary>
            Creates the text box to be used for specifying the hex code of the target colour.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HexColourPicker.CreateColourPreview">
            <summary>
            Creates the control that will be used for displaying the preview of the target colour.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.HSVColourPicker">
            <summary>
            Control that allows for specifying a colour using the hue-saturation-value (HSV) colour model.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.HSVColourPicker.Background">
            <summary>
            The background of the control.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.HSVColourPicker.Content">
            <summary>
            Contains the elements of the colour picker.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HSVColourPicker.CreateHueSelector">
            <summary>
            Creates the control to be used for interactively selecting the hue of the target colour.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HSVColourPicker.CreateSaturationValueSelector">
            <summary>
            Creates the control to be used for interactively selecting the saturation and value of the target colour.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.HSVColourPicker.HueSelector.SliderBar">
            <summary>
            The body of the hue slider.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HSVColourPicker.HueSelector.CreateSliderNub">
            <summary>
            Creates the nub which will be used for the hue slider.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.HSVColourPicker.SaturationValueSelector.SelectionArea">
            <summary>
            The gradiented box serving as the selection area.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.HSVColourPicker.SaturationValueSelector.CreateMarker">
            <summary>
            Creates the marker which will be used for selecting the final colour from the gamut.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.UserInterface.IDropdown.MenuStateChanged">
            <summary>
            An event that occurs when the menu state changes.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.IDropdown.Enabled">
            <summary>
            Whether the dropdown is currently enabled.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.IDropdown.MenuState">
            <summary>
            The current menu state.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.ToggleMenu">
            <summary>
            Toggles the menu.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.OpenMenu">
            <summary>
            Opens the menu.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.CloseMenu">
            <summary>
            Closes the menu.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.CommitPreselection">
            <summary>
            Commits the current pre-selected value.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.TriggerFocusContention(osu.Framework.Graphics.Drawable)">
            <summary>
            Triggers focus contention on the parenting <see cref="T:osu.Framework.Input.IFocusManager"/>.
            </summary>
            <remarks>
            Focus management is isolated by the <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/>. This invokes the method on the parenting <see cref="T:osu.Framework.Input.IFocusManager"/> un-interrupted.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.IDropdown.ChangeFocus(osu.Framework.Graphics.Drawable)">
            <summary>
            Triggers a change of focus on the parenting <see cref="T:osu.Framework.Input.IFocusManager"/>.
            </summary>
            <remarks>
            Focus management is isolated by the <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/>. This invokes the method on the parenting <see cref="T:osu.Framework.Input.IFocusManager"/> un-interrupted.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.IHasCurrentValue`1">
            <summary>
            A UI element which supports a <see cref="T:osu.Framework.Bindables.Bindable`1"/> current value.
            You can bind to <see cref="P:osu.Framework.Graphics.UserInterface.IHasCurrentValue`1.Current"/>'s <see cref="E:osu.Framework.Bindables.Bindable`1.ValueChanged"/> to get updates.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.IHasCurrentValue`1.Current">
            <summary>
            Gets or sets the <see cref="T:osu.Framework.Bindables.Bindable`1"/> that provides the current value.
            </summary>
            <remarks>
            A provided <see cref="T:osu.Framework.Bindables.Bindable`1"/> will be bound to, rather than be stored internally.
            </remarks>
        </member>
        <member name="E:osu.Framework.Graphics.UserInterface.Menu.StateChanged">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>'s <see cref="P:osu.Framework.Graphics.UserInterface.Menu.State"/> changes.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.HoverOpenDelay">
            <summary>
            Gets or sets the delay before opening sub-<see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>s when menu items are hovered.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.TopLevelMenu">
            <summary>
            Whether this menu is always displayed in an open state (ie. a menu bar).
            Clicks are required to activate <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.ContentContainer">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Containers.Container`1"/> that contains the content of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.ItemsContainer">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Containers.Container`1"/> that contains the items of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.MaskingContainer">
            <summary>
            The container that provides the masking effects for this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.Children">
            <summary>
            Gets the item representations contained by this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.#ctor(osu.Framework.Graphics.Direction,System.Boolean)">
            <summary>
            Constructs a menu.
            </summary>
            <param name="direction">The direction of layout for this menu.</param>
            <param name="topLevelMenu">Whether the resultant menu is always displayed in an open state (ie. a menu bar).</param>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.Items">
            <summary>
            Gets or sets the <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>s contained within this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.BackgroundColour">
            <summary>
            Gets or sets the background colour of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.ScrollbarVisible">
            <summary>
            Gets or sets whether the scroll bar of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> should be visible.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.MaxWidth">
            <summary>
            Gets or sets the maximum allowable width by this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.MaxHeight">
            <summary>
            Gets or sets the maximum allowable height by this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.State">
            <summary>
            Gets or sets the current state of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Add(osu.Framework.Graphics.UserInterface.MenuItem)">
            <summary>
            Adds a <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> to this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="item">The <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Insert(System.Int32,osu.Framework.Graphics.UserInterface.MenuItem)">
            <summary>
            Inserts a <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> at a specified position inside this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="position">The position to insert this item at.</param>
            <param name="item">The <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> to insert.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Remove(osu.Framework.Graphics.UserInterface.MenuItem)">
            <summary>
            Removes a <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> from this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="item">The <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> to remove.</param>
            <returns>Whether <paramref name="item"/> was successfully removed.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Clear">
            <summary>
            Clears all <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>s in this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Open">
            <summary>
            Opens this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Close">
            <summary>
            Closes this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.Toggle">
            <summary>
            Toggles the state of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.AnimateOpen">
            <summary>
            Animates the opening of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.AnimateClose">
            <summary>
            Animates the closing of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.UpdateSize(osuTK.Vector2)">
            <summary>
            Resizes this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="newSize">The new size.</param>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.triggeringItem">
            <summary>
            The item which triggered opening us as a submenu.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.closeAll">
            <summary>
            Closes all open <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.CreateSubMenu">
            <summary>
            Creates a sub-menu for <see cref="F:osu.Framework.Graphics.UserInterface.MenuItem.Items"/> of <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>s added to this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.CreateDrawableMenuItem(osu.Framework.Graphics.UserInterface.MenuItem)">
            <summary>
            Creates the visual representation for a <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>.
            </summary>
            <param name="item">The <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> that is to be visualised.</param>
            <returns>The visual representation.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.CreateScrollContainer(osu.Framework.Graphics.Direction)">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1"/> to hold the items of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="direction">The scrolling direction.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Containers.ScrollContainer`1"/>.</returns>
        </member>
        <member name="E:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.StateChanged">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>'s <see cref="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.State"/> changes.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Clicked">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> is clicked and successfully invokes an action or opens a submenu.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Hovered">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> is hovered. This runs one update frame behind the actual hover event.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Item">
            <summary>
            The <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> which this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> represents.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Content">
            <summary>
            The content of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>, created through <see cref="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.CreateContent"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Background">
            <summary>
            The background of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Foreground">
            <summary>
            The foreground of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>. This contains the content of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.CloseMenuOnClick">
            <summary>
            Whether to close all menus when this action <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> is clicked.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.SetFlowDirection(osu.Framework.Graphics.Direction)">
            <summary>
            Sets various properties of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> that depend on the direction in which
            <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>s flow inside the containing <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> (e.g. sizing axes).
            </summary>
            <param name="direction">The direction in which <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>s will be flowed.</param>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.BackgroundColour">
            <summary>
            Gets or sets the default background colour.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.ForegroundColour">
            <summary>
            Gets or sets the default foreground colour.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.BackgroundColourHover">
            <summary>
            Gets or sets the background colour when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> is hovered.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.ForegroundColourHover">
            <summary>
            Gets or sets the foreground colour when this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> is hovered.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.ContentDrawWidth">
            <summary>
            The draw width of the text of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.ContentDrawHeight">
            <summary>
            The draw width of the text of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.IsActionable">
            <summary>
            Whether the underlying <see cref="F:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.Item"/> has an assigned action or a submenu, and is not in a disabled state.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.UpdateBackgroundColour">
            <summary>
            Called after the <see cref="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.BackgroundColour"/> is modified or the hover state changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.UpdateForegroundColour">
            <summary>
            Called after the <see cref="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.ForegroundColour"/> is modified or the hover state changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.CreateBackground">
            <summary>
            Creates the background of this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.CreateContent">
            <summary>
            Creates the content which will be displayed in this <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>.
            If the <see cref="T:osu.Framework.Graphics.Drawable"/> returned implements <see cref="T:osu.Framework.Graphics.Sprites.IHasText"/>, the text will be automatically
            updated when the <see cref="F:osu.Framework.Graphics.UserInterface.MenuItem.Text"/> is updated.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.MenuItem.Text">
            <summary>
            The text which this <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> displays.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.MenuItem.Action">
            <summary>
            The <see cref="F:osu.Framework.Graphics.UserInterface.MenuItem.Action"/> that is performed when this <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/> is clicked.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.MenuItem.Items">
            <summary>
            A list of items which are to be displayed in a sub-menu originating from this <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.MenuItem.#ctor(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>.
            </summary>
            <param name="text">The text to display.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.MenuItem.#ctor(System.Action)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>.
            </summary>
            <param name="action">The <see cref="F:osu.Framework.Graphics.UserInterface.MenuItem.Action"/> to perform when clicked.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.MenuItem.#ctor(osu.Framework.Localisation.LocalisableString,System.Action)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.UserInterface.MenuItem"/>.
            </summary>
            <param name="text">The text to display.</param>
            <param name="action">The <see cref="F:osu.Framework.Graphics.UserInterface.MenuItem.Action"/> to perform when clicked.</param>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.Popover">
            <summary>
            A <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/> is a transient view that appears above other on-screen content.
            It typically is activated by another control and includes an arrow pointing to the location from which it emerged.
            (loosely paraphrasing: https://developer.apple.com/design/human-interface-guidelines/ios/views/popovers/)
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.PopoverAnchor">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Anchor"/> that this <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/> is to be attached to the triggering UI control by.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.AllowableAnchors">
            <summary>
            The collection of <see cref="T:osu.Framework.Graphics.Anchor"/>s to consider when auto-layouting the popover inside a <see cref="T:osu.Framework.Graphics.Cursor.PopoverContainer"/>.
            </summary>
            <remarks>
            <see cref="F:osu.Framework.Graphics.Anchor.Centre"/> is used as a fallback if an empty enumerable is provided, or any other anchor fails.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.BoundingBoxContainer">
            <summary>
            The container holding all of this popover's elements (the <see cref="P:osu.Framework.Graphics.UserInterface.Popover.Body"/> and the <see cref="P:osu.Framework.Graphics.UserInterface.Popover.Arrow"/>).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.Background">
            <summary>
            The background box of the popover.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.Arrow">
            <summary>
            The arrow of this <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/>, pointing at the component which triggered it.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.Popover.Body">
            <summary>
            The body of this <see cref="T:osu.Framework.Graphics.UserInterface.Popover"/>, containing the actual contents.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Popover.CreateArrow">
            <summary>
            Creates an arrow drawable that points away from the given <see cref="T:osu.Framework.Graphics.Anchor"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.Popover.AnchorUpdated(osu.Framework.Graphics.Anchor)">
            <summary>
            Called when <see cref="T:osu.Framework.Graphics.Anchor"/> is set.
            Can be used to apply custom layout updates to the subcomponents.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.SliderBar`1.RangePadding">
            <summary>
            Range padding reduces the range of movement a slider bar is allowed to have
            while still receiving input in the padded region. This behavior is necessary
            for finite-sized nubs and can not be achieved (currently) by existing
            scene graph padding / margin functionality.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.SliderBar`1.KeyboardStep">
            <summary>
            A custom step value for each key press which actuates a change on this control.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.SliderBar`1.TransferValueOnCommit">
            <summary>
            When set, value changes based on user input are only transferred to any bound <see cref="P:osu.Framework.Graphics.UserInterface.SliderBar`1.Current"/> on commit.
            This is useful if the UI interaction could be adversely affected by the value changing, such as the position of the <see cref="T:osu.Framework.Graphics.UserInterface.SliderBar`1"/> on the screen.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.SliderBar`1.UpdateValue(System.Single)">
            <summary>
            Triggered when the <see cref="P:osu.Framework.Graphics.UserInterface.SliderBar`1.Current"/> value has changed. Used to update the displayed value.
            </summary>
            <param name="value">The normalized <see cref="P:osu.Framework.Graphics.UserInterface.SliderBar`1.Current"/> value.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.SliderBar`1.ShouldHandleAsRelativeDrag(osu.Framework.Input.Events.MouseDownEvent)">
            <summary>
            Whether mouse handling should be relative to the distance travelled, or absolute in line with the exact position of the cursor.
            </summary>
            <remarks>
            Generally, this should be overridden and return <c>true</c> when the cursor is hovering a "nub" or "thumb" portion at the point of mouse down
            to give the user more correct control.
            </remarks>
            <param name="e">The mouse down event.</param>
            <returns>Whether to perform a relative drag.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.SliderBar`1.OnUserChange(`0)">
            <summary>
            Triggered when the value is changed based on end-user input to this control.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.UserInterface.TabControl`1">
            <summary>
            A single-row control to display a list of selectable tabs along with an optional right-aligned dropdown
            containing overflow items (tabs which cannot be displayed in the allocated width). Includes
            support for pinning items, causing them to be displayed before all other items at the
            start of the list.
            </summary>
            <remarks>
            If a multi-line (or vertical) tab control is required, <see cref="P:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.AllowMultiline"/> must be set to true.
            Without this, <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/> will automatically hide extra items.
            </remarks>
            <typeparam name="T">The type of item to be represented by tabs.</typeparam>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchableTabs">
            <summary>
            A collection of all tabs which are valid switch targets, sorted by their order of appearance.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.AllTabs">
            <summary>
            The collection of all tabs, sorted by their order of appearance.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.VisibleItems">
            <summary>
            All items which are currently present and visible in the tab control.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.Items">
            <summary>
            The list of all items contained by this <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.AutoSort">
            <summary>
            When true, tabs selected from the overflow dropdown will be moved to the front of the list (after pinned items).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TabControl`1.Dropdown">
            <summary>
            The <see cref="T:osu.Framework.Graphics.UserInterface.Dropdown`1"/> which is displayed when tabs overflow the visible bounds of this <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TabControl`1.TabContainer">
            <summary>
            The flow of <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.SelectedTab">
            <summary>
            The currently-selected <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.SelectFirstTabByDefault">
            <summary>
            When <c>true</c>, the first available tab (if any) will be selected at the point of <see cref="M:osu.Framework.Graphics.UserInterface.TabControl`1.LoadComplete"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.IsSwitchable">
            <summary>
            When true, tabs can be switched back and forth using <see cref="F:osu.Framework.Input.PlatformAction.DocumentPrevious"/> and <see cref="F:osu.Framework.Input.PlatformAction.DocumentNext"/> respectively.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchTabOnRemove">
            <summary>
            Whether a new tab should be automatically switched to when the current tab is removed.
            </summary>
            <remarks>
            When <c>true</c>:
            <list type="bullet">
            <item>
            <description>If the current tab is not the only tab in the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>, then the next or previous tab will be selected depending on the current tab's position.</description>
            </item>
            <item>
            <description>If the current tab is the only tab in the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>, then selection will be cleared.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.CreateDropdown">
            <summary>
            Creates an optional overflow dropdown.
            When implementing this dropdown make sure:
            <list type="bullet">
            <item>
            <description>It is made to be anchored to the right-hand side of its parent.</description>
            </item>
            <item>
            <description>The dropdown's header does *not* have a relative x axis.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.CreateTabItem(`0)">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/> for a given <typeparamref name="T"/> value.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TabControl`1.depthCounter">
            <summary>
            Decremented each time a tab needs to be inserted at the start of the list.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.TabMap">
            <summary>
            A mapping of tabs to their items.
            </summary>
            <remarks>
            There is no guaranteed order. To retrieve ordered tabs, use <see cref="P:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchableTabs"/> or <see cref="P:osu.Framework.Graphics.UserInterface.TabControl`1.AllTabs"/> instead.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.#ctor">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.PinItem(`0)">
            <summary>
            Pins an item to the start of the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
            <param name="item">The item to pin.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.UnpinItem(`0)">
            <summary>
            Unpins an item and returns it to the start of unpinned items.
            </summary>
            <param name="item">The item to unpin.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.AddItem(`0)">
            <summary>
            Adds a new item to the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.RemoveItem(`0)">
            <summary>
            Removes an item from the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
            <remarks>
            If the current tab is removed and <see cref="P:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchTabOnRemove"/> is <c>true</c>, then selection will change to a new tab if possible or be cleared if there are no tabs remaining in the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </remarks>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.Clear">
            <summary>
            Removes all items from the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.AddTabItem(osu.Framework.Graphics.UserInterface.TabItem{`0},System.Boolean)">
            <summary>
            Adds an arbitrary <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/> to the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
            <param name="tab">The tab to add.</param>
            <param name="addToDropdown">Whether the tab should be added to the <see cref="F:osu.Framework.Graphics.UserInterface.TabControl`1.Dropdown"/> if supported by the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/> implementation.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.RemoveTabItem(osu.Framework.Graphics.UserInterface.TabItem{`0},System.Boolean)">
            <summary>
            Removes a <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/> from this <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
            <remarks>
            If the current tab is removed and <see cref="P:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchTabOnRemove"/> is <c>true</c>, then selection will change to a new tab if possible or be cleared if there are no tabs remaining in the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </remarks>
            <param name="tab">The tab to remove.</param>
            <param name="removeFromDropdown">Whether the tab should be removed from the <see cref="F:osu.Framework.Graphics.UserInterface.TabControl`1.Dropdown"/> if supported by the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/> implementation.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.updateDropdown(osu.Framework.Graphics.UserInterface.TabItem{`0},System.Boolean)">
            <summary>
            Callback on the change of visibility of a tab.
            Used to update the item's status in the overflow dropdown if required.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.SelectItem(`0)">
            <summary>
            Selects the tab representing the provided item.
            </summary>
            <param name="item">The item to select.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the provided item doesn't exist in the tab control.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.SelectTab(osu.Framework.Graphics.UserInterface.TabItem{`0})">
            <summary>
            Selects a <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/> and signals an event that the user selected the given tab via <see cref="M:osu.Framework.Graphics.UserInterface.TabItem`1.OnActivatedByUser"/>.
            </summary>
            <param name="tab">The tab to select.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.SwitchTab(System.Int32,System.Boolean)">
            <summary>
            Switches the currently selected tab forward or backward one index, optionally wrapping.
            </summary>
            <param name="direction">Pass 1 to move to the next tab, or -1 to move to the previous tab.</param>
            <param name="wrap">If <c>true</c>, moving past the start or the end of the tab list will wrap to the opposite end.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.CreateTabFlow">
            <summary>
            Creates the <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer"/> to contain the <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.AllowMultiline">
            <summary>
            Whether tabs should be allowed to flow beyond a single line. If set to false, overflowing tabs will be automatically hidden.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.TabVisibilityChanged">
            <summary>
            Gets called whenever the visibility of a tab in this container changes. Gets invoked with the <see cref="T:osu.Framework.Graphics.UserInterface.TabItem"/> whose visibility changed and the new visibility state (true = visible, false = hidden).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.TabItems">
            <summary>
            The list of tabs currently displayed by this container, in order of appearance.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.AllTabItems">
            <summary>
            The list of all tabs in this container, in order of appearance.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabControl`1.TabFillFlowContainer.GetFlowingTabs(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Drawable})">
            <summary>
            Re-orders a given list of <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>s in the order that they should appear.
            </summary>
            <param name="tabs">The <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>s to order.</param>
            <returns>The re-ordered list of <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/>s.</returns>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabItem.IsRemovable">
            <summary>
            If false, ths <see cref="T:osu.Framework.Graphics.UserInterface.TabItem`1"/> cannot be removed from its <see cref="T:osu.Framework.Graphics.UserInterface.TabControl`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TabItem`1.IsSwitchable">
            <summary>
            When true, this tab can be switched to using PlatformAction.DocumentPrevious and PlatformAction.DocumentNext. Otherwise, it will be skipped.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabItem`1.OnActivated">
            <summary>
            Invoked when this tab item became selected.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabItem`1.OnDeactivated">
            <summary>
            Invoked when this tab item lost selection.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TabItem`1.OnActivatedByUser">
            <summary>
            Invoked when this tab item became selected by user.
            Unlike <see cref="M:osu.Framework.Graphics.UserInterface.TabItem`1.OnActivated"/>, this is only called when selection is gained as a result of the user directly clicking on the tab or via <see cref="M:osu.Framework.Graphics.UserInterface.TabControl`1.SelectTab(osu.Framework.Graphics.UserInterface.TabItem{`0})"/>.
            </summary>
            <remarks>
            This is defined for implementations to add sound feedback as a result of the user selecting this tab item.
            </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.LeftRightPadding">
            <summary>
            Padding to be used within the TextContainer. Requires special handling due to the sideways scrolling of text content.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.LengthLimit">
            <summary>
            Maximum allowed length of text.
            </summary>
            <remarks>Any input beyond this limit will be dropped and then <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.NotifyInputError"/> will be called.</remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.AllowClipboardExport">
            <summary>
            Whether clipboard copying functionality is allowed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.AllowWordNavigation">
            <summary>
            Whether seeking to word boundaries is allowed.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.doubleClickWord">
            <summary>
            Represents the left/right selection coordinates of the word double clicked on when dragging.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.HandleLeftRightArrows">
            <summary>
            Whether this TextBox should accept left and right arrow keys for navigation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.AllowIme">
            <summary>
            Whether to allow IME input when this text box has input focus.
            </summary>
            <remarks>
            This is just a hint to the native implementation, some might respect this,
            while others will ignore and always have the IME (dis)allowed.
            </remarks>
            <example>
            Useful for situations where IME input is not wanted, such as for passwords, numbers, or romanised text.
            </example>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.CanAddCharacter(System.Char)">
            <summary>
            Check if a character can be added to this TextBox.
            </summary>
            <param name="character">The pending character.</param>
            <returns>Whether the character is allowed to be added.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.canAddCharacter(System.Char)">
            <summary>
            Private helper for <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.CanAddCharacter(System.Char)"/>, additionally requiring that the character is not a control character.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.ReleaseFocusOnCommit">
            <summary>
            Whether the textbox should rescind focus on commit.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.CommitOnFocusLost">
            <summary>
            Whether a commit should be triggered whenever the textbox loses focus.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.isActive">
            <summary>
            Whether the <see cref="T:osu.Framework.Platform.GameHost"/> is active (has keyboard focus).
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.UserInterface.TextBox.OnCommit">
            <summary>
            Fired whenever text is committed via a user action.
            This usually happens on pressing enter, but can also be triggered on focus loss automatically, via <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.CommitOnFocusLost"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.textInputScheduler">
            <summary>
            Scheduler used for scheduling text input events coming from <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.textInput"/>.
            </summary>
            <remarks>
            Used for scheduling text events so that the <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Text"/> is updated on the update thread.
            This scheduler is updated in two places / at two points in time:
             - Early in the update frame, in <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)"/>, so that the key event is blocked. We assume a key event that comes right after a
               text event is associated with that text event and therefore should be blocked. In other words: to ensure consistent UX, if a user
               presses a key to input text then no other action (eg. from a keyboard shortcut) should be taken by the game, so we block it.
             - Later in the same update frame, in <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.Update"/>. In case there was no associated key event. This is mostly required for mobile platforms.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.imeCompositionScheduler">
            <summary>
            Scheduler used for scheduling IME composition and result events coming from <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.textInput"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.SelectAll">
            <summary>
            Selects all text in this <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/>. Focus must be acquired before calling this method.
            </summary>
            <returns>Whether text has been selected successfully. Returns <c>false</c> if the text box does not have focus.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.GetBackwardWordAmount">
            <summary>
            Find the word boundary in the backward direction, then return the negative amount of characters.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.GetForwardWordAmount">
            <summary>
            Find the word boundary in the forward direction, then return the positive amount of characters.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.MoveCursorBy(System.Int32)">
            <summary>
            Move the current cursor by the signed <paramref name="amount"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.ExpandSelectionBy(System.Int32)">
            <summary>
            Expand the current selection by the signed <paramref name="amount"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.DeleteBy(System.Int32)">
            <summary>
            If there is a selection, delete the selected text.
            Otherwise, delete characters from the cursor position by the signed <paramref name="amount"/>.
            A negative amount represents a backward deletion, and a positive amount represents a forward deletion.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.FinalizeImeComposition(System.Boolean)">
            <summary>
            Finalize the current IME composition if one is active.
            </summary>
            <param name="userEvent">
            Whether this was invoked from a user action.
            Set to <c>true</c> to have <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.OnImeResult(System.String,System.Boolean)"/> invoked.
            </param>
            <remarks>Must only be called from the update thread.</remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.CancelImeComposition">
            <summary>
            Cancels the current IME composition, removing it from the <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Text"/>.
            </summary>
            <remarks>Must only be called from the update thread.</remarks>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.textChanging">
            <summary>
            Indicates whether a complex change operation to <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Text"/> has begun.
            This is relevant because, for example, an insertion operation with text selected is really a removal of the selection and an insertion.
            We want to ensure that <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Text"/> is transferred out to <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Current"/> only at the end of such an operation chain.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.beginTextChange">
            <summary>
            Starts a text change operation.
            </summary>
            <returns>Whether this call has initiated a text change.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.endTextChange(System.Boolean)">
            <summary>
            Ends a text change operation.
            This causes <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Text"/> to be transferred out to <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.Current"/>.
            </summary>
            <param name="started">The return value of a corresponding <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.beginTextChange"/> call should be passed here.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.removeSelection">
            <summary>
            Removes the selected text if a selection persists.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.removeCharacters(System.Int32)">
            <summary>
            Removes a specified <paramref name="number"/> of characters left side of the current position.
            </summary>
            <remarks>
            If a selection persists, <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.removeSelection"/> must be called instead.
            </remarks>
            <returns>A string of the removed characters.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.GetDrawableCharacter(System.Char)">
            <summary>
            Creates a single character. Override <see cref="M:osu.Framework.Graphics.Drawable.Show"/> and <see cref="M:osu.Framework.Graphics.Drawable.Hide"/> for custom behavior.
            </summary>
            <param name="c">The character that this <see cref="T:osu.Framework.Graphics.Drawable"/> should represent.</param>
            <returns>A <see cref="T:osu.Framework.Graphics.Drawable"/> that represents the character <paramref name="c"/> </returns>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.FontSize">
            <summary>
            A fixed size for the text displayed in this <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/>. If left unset, text size will be computed based on the dimensions of the <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.NotifyInputError">
            <summary>
            Called whenever an invalid character has been entered
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnUserTextAdded(System.String)">
            <summary>
            Invoked when new text is added via user input.
            </summary>
            <param name="added">The text which was added.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnUserTextRemoved(System.String)">
            <summary>
            Invoked when text is removed via user input.
            </summary>
            <param name="removed">The text which was removed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnTextCommitted(System.Boolean)">
            <summary>
            Invoked whenever a text string has been committed to the textbox.
            </summary>
            <param name="textChanged">Whether the current text string is different than the last committed.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnCaretMoved(System.Boolean)">
            <summary>
            Invoked whenever the caret has moved from its position.
            </summary>
            <param name="selecting">Whether the caret is selecting text while moving.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnTextSelectionChanged(osu.Framework.Graphics.UserInterface.TextBox.TextSelectionType)">
            <summary>
            Invoked whenever text selection changes. For deselection, see <seealso cref="M:osu.Framework.Graphics.UserInterface.TextBox.OnTextDeselected"/>.
            </summary>
            <param name="selectionType">The type of selection change that occured.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnTextDeselected">
            <summary>
            Invoked whenever selected text is deselected. For selection, see <seealso cref="M:osu.Framework.Graphics.UserInterface.TextBox.OnTextSelectionChanged(osu.Framework.Graphics.UserInterface.TextBox.TextSelectionType)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnImeComposition(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Invoked whenever the IME composition has changed.
            </summary>
            <param name="newComposition">The current text of the composition.</param>
            <param name="removedTextLength">The number of characters that have been replaced by new ones.</param>
            <param name="addedTextLength">The number of characters that have replaced the old ones.</param>
            <param name="selectionMoved">Whether the selection/caret has moved.</param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.OnImeResult(System.String,System.Boolean)">
            <summary>
            Invoked when the IME has finished compositing.
            </summary>
            <param name="result">The result of the composition.</param>
            <param name="successful">
            Whether this composition was finished trough normal means (eg. user normally finished compositing trough the IME).
            <c>false</c> if ended prematurely.
            </param>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.CreatePlaceholder">
            <summary>
            Creates a placeholder that shows whenever the textbox is empty. Override <see cref="M:osu.Framework.Graphics.Drawable.Show"/> or <see cref="M:osu.Framework.Graphics.Drawable.Hide"/> for custom behavior.
            </summary>
            <returns>The placeholder</returns>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.caretVisible">
            <summary>
            Whether the <see cref="F:osu.Framework.Graphics.UserInterface.TextBox.caret"/> should be visible.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.textInputBlocking">
             <summary>
             Whether <see cref="T:osu.Framework.Input.Events.KeyDownEvent"/>s should be blocked because of recent text input from a <see cref="T:osu.Framework.Input.TextInputSource"/>.
             </summary>
             <remarks>
             Blocking starts when a text events occurs and ends when all keys are released (or on the next frame if no keys are pressed).
            
             We currently eagerly block keydown events, blocking all key events until all keys are released.
             This means that some key events will be (erroneously) blocked, even if they weren't associated with a text event.
             This simplified logic is used because trying to associate each key event with a text event is error prone.
             Some reasons as to why:
              - Text and key repeat rate are inherently different, since text repeat is handled by the OS, while <see cref="T:osu.Framework.Input.InputManager"/> handles key repeat.
              - The ordering of keydown and text events can vary between platforms.
              - The ordering of the events can vary even more because these events are propagated to the textbox differently:
                 - Key events are propagated by <see cref="T:osu.Framework.Input.UserInputManager"/> at the beginning of each update frame.
                 - Text events are propagated immediately when they're received, and are handled either by the <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.Update"/> call or <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)"/>,
                   whichever comes first. (Check usages of <see cref="F:osu.Framework.Graphics.UserInterface.TextBox.textInputScheduler"/>.<see cref="M:osu.Framework.Threading.Scheduler.Update"/> for specifics.)
                 - This is especially problematic if the key and text events arrive in between the <see cref="T:osu.Framework.Input.UserInputManager"/> and <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/> updates.
            
             So we catch the first key that produced text and block until we get back to a sane state (all keys released).
             </remarks>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.ImeCompositionActive">
            <summary>
            Whether there is a ongoing IME composition.
            </summary>
            <remarks>
            The IME should take full input priority, as a lot of the common text editing keys/shortcuts
            are used internally in the IME for compositing.
            Full data about the composition events is processed by <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.handleImeComposition(System.String,System.Int32,System.Int32)"/> "passively"
            so we shouldn't take any action on key events we receive.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.KillFocus">
            <summary>
            Removes focus from this <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/> if it currently has focus.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.Commit">
            <summary>
            Commits current text on this <see cref="T:osu.Framework.Graphics.UserInterface.TextBox"/> and releases focus if <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.ReleaseFocusOnCommit"/> is set.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.textInputBound">
            <summary>
            Whether <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.textInput"/> has been activated and bound to.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.revertBlockingStateIfRequired">
            <summary>
            Reverts the <see cref="F:osu.Framework.Graphics.UserInterface.TextBox.textInputBlocking"/> flag to <c>false</c> if no keys are pressed.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.matchBeginningEnd(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns how many characters of the two strings match from the beginning, and from the end.
            </summary>
            <remarks>
            Characters matched from the beginning will not match from the end.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.sanitizeComposition(System.String@,System.Int32@,System.Int32@)">
            <summary>
            Sanitizes the given composition, ensuring it fits within <see cref="F:osu.Framework.Graphics.UserInterface.TextBox.LengthLimit"/> and respects <see cref="M:osu.Framework.Graphics.UserInterface.TextBox.CanAddCharacter(System.Char)"/>.
            </summary>
            <returns><c>true</c> if the composition was sanitized in some way.</returns>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.imeCompositionDrawables">
            <summary>
            Contains all the <see cref="T:osu.Framework.Graphics.Drawable"/>s from the <see cref="P:osu.Framework.Graphics.UserInterface.TextBox.TextFlow"/>
            that are part of the current IME composition.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.UserInterface.TextBox.imeCompositionLength">
            <summary>
            Length of the current IME composition.
            </summary>
            <remarks>A length of <c>0</c> means that IME composition isn't active.</remarks>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.imeCompositionStart">
            <summary>
            Index of the first character in the current composition.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.onImeComposition(System.String,System.Int32,System.Int32,System.Boolean)">
            <remarks>
            This checks which parts of the old and new compositions match,
            and only updates the non-matching part in the current composition text.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.UserInterface.TextBox.updateImeWindowPosition">
            <summary>
            Updates the location of the platform-native IME composition window
            to the current composition string / current selection.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.TextSelectionType.Character">
            <summary>
            A character was added or removed from the selection.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.TextSelectionType.Word">
            <summary>
            A word was added or removed from the selection.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.UserInterface.TextBox.TextSelectionType.All">
            <summary>
            All of the text was selected (i.e. via <see cref="F:osu.Framework.Input.PlatformAction.SelectAll"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.Transform(osuTK.Vector2,osuTK.Matrix3)">
            <summary>Transform a Position by the given Matrix</summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed position</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.Transform(osuTK.Vector2@,osuTK.Matrix3@,osuTK.Vector2@)">
            <summary>Transform a Position by the given Matrix</summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.Distance(osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Compute the euclidean distance between two vectors.
            </summary>
            <param name="vec1">The first vector</param>
            <param name="vec2">The second vector</param>
            <returns>The distance</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.Distance(osuTK.Vector2@,osuTK.Vector2@,System.Single@)">
            <summary>
            Compute the euclidean distance between two vectors.
            </summary>
            <param name="vec1">The first vector</param>
            <param name="vec2">The second vector</param>
            <param name="result">The distance</param>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.DistanceSquared(osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Compute the squared euclidean distance between two vectors.
            </summary>
            <param name="vec1">The first vector</param>
            <param name="vec2">The second vector</param>
            <returns>The squared distance</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.DistanceSquared(osuTK.Vector2@,osuTK.Vector2@,System.Single@)">
            <summary>
            Compute the squared euclidean distance between two vectors.
            </summary>
            <param name="vec1">The first vector</param>
            <param name="vec2">The second vector</param>
            <param name="result">The squared distance</param>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.GetOrientation(System.ReadOnlySpan{osuTK.Vector2}@)">
            <summary>
            Retrieves the orientation of a set of vertices using the Shoelace formula (https://en.wikipedia.org/wiki/Shoelace_formula)
            </summary>
            <param name="vertices">The vertices.</param>
            <returns>Twice the area enclosed by the vertices.
            The vertices are clockwise-oriented if the value is positive.
            The vertices are counter-clockwise-oriented if the value is negative.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Vector2Extensions.InRightHalfPlaneOf(osuTK.Vector2,osu.Framework.Graphics.Primitives.Line@)">
            <summary>
            Determines whether a point is within the right half-plane of a line in the traditional cartesian coordinate system.
            </summary>
            <param name="line">The line.</param>
            <param name="point">The point.</param>
            <returns>Whether <paramref name="point"/> is in the right half-plane of <paramref name="line"/>. Collinear points are never in the right half-plane of the line. </returns>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.vertex_buffer_count">
             <summary>
             Most documentation recommends that three buffers are used to avoid contention.
            
             We already have a triple buffer (see <see cref="F:osu.Framework.Platform.GameHost.DrawRoots"/>) governing draw nodes.
             In theory we could set this to two, but there's also a global usage of a vertex batch in <see cref="T:osu.Framework.Graphics.Veldrid.VeldridRenderer"/> (see <see cref="P:osu.Framework.Graphics.Rendering.Renderer.DefaultQuadBatch"/>).
            
             So this is for now an unfortunate memory overhead. Further work could be done to provide
             these in a way they were not created per draw-node, reducing buffer overhead from 9 to 3.
             </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.vertexBuffers">
            <summary>
            Multiple VBOs in a swap chain to try our best to avoid GPU contention.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.Size">
            <summary>
            The number of vertices in each VertexBuffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.Add(`0)">
            <summary>
            Adds a vertex to this <see cref="T:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1"/>.
            </summary>
            <param name="v">The vertex to add.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.AddAction">
            <summary>
            Adds a vertex to this <see cref="T:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1"/>.
            This is a cached delegate of <see cref="M:osu.Framework.Graphics.Veldrid.Batches.VeldridVertexBatch`1.Add(`0)"/> that should be used in memory-critical locations such as <see cref="T:osu.Framework.Graphics.DrawNode"/>s.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1.Size">
            <summary>
            Gets the number of vertices in this <see cref="T:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1.Buffer">
            <summary>
            The underlying <see cref="T:Veldrid.DeviceBuffer"/> to bind for drawing.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1.SetVertex(System.Int32,`0)">
            <summary>
            Sets the vertex at a specific index of this <see cref="T:osu.Framework.Graphics.Veldrid.Buffers.VeldridVertexBuffer`1"/>.
            </summary>
            <param name="vertexIndex">The index of the vertex.</param>
            <param name="vertex">The vertex.</param>
            <returns>Whether synchronisation for this vertex is required. If true, <see cref="M:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1.UpdateRange(System.Int32,System.Int32)"/> should be called with this vertex included.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.IVeldridVertexBuffer`1.UpdateRange(System.Int32,System.Int32)">
            <summary>
            Populates the vertices at the specified range to the GPU buffer.
            </summary>
            <param name="from">The beginning vertex index.</param>
            <param name="to">The ending vertex index.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Buffers.Staging.DeferredStagingBuffer`1">
            <summary>
            A staging buffer that stores data in managed memory and uses an intermediate driver buffer for copies.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.SizeInBytes">
            <summary>
            The total size of this buffer in bytes.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.Count">
            <summary>
            The number of elements in this buffer.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.CopyTargetUsageFlags">
            <summary>
            Any extra flags required for the target of a <see cref="M:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.CopyTo(Veldrid.DeviceBuffer,System.UInt32,System.UInt32,System.UInt32)"/> operation.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.Data">
            <summary>
            The data contained in this buffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.Staging.IStagingBuffer`1.CopyTo(Veldrid.DeviceBuffer,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies data from this buffer into a <see cref="T:Veldrid.DeviceBuffer"/>.
            </summary>
            <param name="buffer">The target buffer.</param>
            <param name="srcOffset">The offset into this buffer at which the copy should start.</param>
            <param name="dstOffset">The offset into <paramref name="buffer"/> at which the copy should start.</param>
            <param name="size">The number of elements to be copied.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Buffers.Staging.ManagedStagingBuffer`1">
            <summary>
            A staging buffer that uses a buffer in managed memory as its storage medium.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Buffers.Staging.PersistentStagingBuffer`1">
            <summary>
            A staging buffer that uses a persistently-mapped device buffer as its storage medium.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.VeldridFrameBuffer.DeleteResources(System.Boolean)">
            <summary>
            Deletes the resources of this frame buffer.
            </summary>
            <param name="deleteTexture">Whether the texture should also be deleted.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexBuffer">
            <summary>
            Represents a <see cref="T:System.UInt16"/>-typed buffer used to control vertex indices during draw.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexBuffer.Size">
            <summary>
            The number of vertices this buffer can map.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexLayout.Linear">
            <summary>
            An index layout that draws the vertices in the order they are added.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexLayout.Quad">
            <summary>
            An index layout that transforms every 6 vertices to a single quad.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Buffers.VeldridMetalVertexBuffer`1">
            <summary>
            A vertex buffer implementation specialised for the Metal renderer.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.IVeldridUniformBuffer.GetResourceSet(Veldrid.ResourceLayout)">
            <summary>
            Gets the <see cref="T:Veldrid.ResourceSet"/> containing the buffer attached to the given layout.
            </summary>
            <param name="layout">The <see cref="T:Veldrid.ResourceLayout"/> which the buffer should be attached to.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.IVeldridUniformBuffer.ResetCounters">
            <summary>
            Resets this <see cref="T:osu.Framework.Graphics.Veldrid.Buffers.IVeldridUniformBuffer"/>, bringing it to the initial state.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.VeldridUniformBuffer`1.flushData">
            <summary>
            Writes the data of this UBO to the underlying storage.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Buffers.VeldridVertexBuffer`1.Size">
            <summary>
            Gets the number of vertices in this <see cref="T:osu.Framework.Graphics.Veldrid.Buffers.VeldridVertexBuffer`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Buffers.VeldridVertexBuffer`1.SetVertex(System.Int32,`0)">
            <summary>
            Sets the vertex at a specific index of this <see cref="T:osu.Framework.Graphics.Veldrid.Buffers.VeldridVertexBuffer`1"/>.
            </summary>
            <param name="vertexIndex">The index of the vertex.</param>
            <param name="vertex">The vertex.</param>
            <returns>Whether the vertex changed.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.IVeldridRenderer">
            <summary>
            Interface for all Veldrid-based renderers that want to use the following objects:
            <list type="bullet">
            <item><see cref="T:osu.Framework.Graphics.Veldrid.Shaders.VeldridShader"/></item>
            <item><see cref="T:osu.Framework.Graphics.Veldrid.Shaders.VeldridShaderPart"/></item>
            <item><see cref="T:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture"/></item>
            <item><see cref="T:osu.Framework.Graphics.Veldrid.Textures.VeldridVideoTexture"/></item>
            </list>
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.IVeldridRenderer.Device">
            <summary>
            The platform graphics device.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.IVeldridRenderer.Factory">
            <summary>
            The platform graphics resource factory.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.IVeldridRenderer.SurfaceType">
            <summary>
            The graphics surface type.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.IVeldridRenderer.UseStructuredBuffers">
            <summary>
            Whether to use shader storage structured buffers if possible.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.BindShader(osu.Framework.Graphics.Veldrid.Shaders.VeldridShader)">
            <summary>
            Binds the given shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.UnbindShader(osu.Framework.Graphics.Veldrid.Shaders.VeldridShader)">
            <summary>
            Unbinds the given shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.BindUniformBuffer(System.String,osu.Framework.Graphics.Rendering.IUniformBuffer)">
            <summary>
            Binds the given uniform buffer.
            </summary>
            <param name="blockName">The block to which the uniform buffer should be bound.</param>
            <param name="buffer">The uniform buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.UpdateTexture``1(Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{``0})">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <typeparam name="T">The pixel type.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.UpdateTexture(Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <param name="rowLengthInBytes">The number of bytes per row of the image to read from <paramref name="data"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.EnqueueTextureUpload(osu.Framework.Graphics.Veldrid.Textures.VeldridTexture)">
            <summary>
            Enqueues as texture to be uploaded.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.IVeldridRenderer.GenerateMipmaps(osu.Framework.Graphics.Veldrid.Textures.VeldridTexture)">
            <summary>
            Generates mipmaps for the given texture.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline">
            <summary>
            A non-graphical pipeline that provides a command list and handles basic tasks like uploading textures.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.ExecutionStarted">
            <summary>
            Invoked when a new execution of this <see cref="T:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline"/> is started.
            </summary>
        </member>
        <member name="E:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.ExecutionFinished">
            <summary>
            Invoked when an execution of this <see cref="T:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline"/> has finished.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.Device">
            <summary>
            The platform graphics device.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.Factory">
            <summary>
            The platform graphics resource factory.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.Commands">
            <summary>
            The command list.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.executionIndex">
            <summary>
            The current execution index.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.pendingExecutions">
            <summary>
            A list of fences which tracks in-flight executions for the purpose of knowing the last completed execution.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.fencePool">
            <summary>
            We are using fences every execution. Construction can be expensive, so let's pool some.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.Begin">
            <summary>
            Begins the pipeline.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.End">
            <summary>
            Finishes the pipeline and submits it for processing by the device.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.UpdateTexture``1(osu.Framework.Graphics.Veldrid.VeldridStagingTexturePool,Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{``0})">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="stagingPool">The staging texture pool.</param>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <typeparam name="T">The pixel type.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.UpdateTexture(osu.Framework.Graphics.Veldrid.VeldridStagingTexturePool,Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="stagingPool">The staging texture pool.</param>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <param name="rowLengthInBytes">The number of bytes per row of the image to read from <paramref name="data"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.BasicPipeline.GenerateMipmaps(osu.Framework.Graphics.Veldrid.Textures.VeldridTexture)">
            <summary>
            Generate mipmaps for the given texture.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline">
            <summary>
            A pipeline that facilitates drawing.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.Clear(osu.Framework.Graphics.Rendering.ClearInfo)">
            <summary>
            Clears the currently bound frame buffer.
            </summary>
            <param name="clearInfo">The clearing parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetScissorState(System.Boolean)">
            <summary>
            Sets the active scissor state.
            </summary>
            <param name="enabled">Whether the scissor test is enabled.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetShader(osu.Framework.Graphics.Veldrid.Shaders.VeldridShader)">
            <summary>
            Sets the active shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetBlend(osu.Framework.Graphics.BlendingParameters)">
            <summary>
            Sets the active blending state.
            </summary>
            <param name="blendingParameters">The blending parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetBlendMask(osu.Framework.Graphics.BlendingMask)">
            <summary>
            Sets a mask deciding which colour components are affected during blending.
            </summary>
            <param name="blendingMask">The blending mask.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetViewport(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Sets the active viewport rectangle.
            </summary>
            <param name="viewport">The viewport rectangle.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetScissor(osu.Framework.Graphics.Primitives.RectangleI)">
            <summary>
            Sets the active scissor rectangle.
            </summary>
            <param name="scissor">The scissor rectangle.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetDepthInfo(osu.Framework.Graphics.Rendering.DepthInfo)">
            <summary>
            Sets the active depth parameters.
            </summary>
            <param name="depthInfo">The depth parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetStencilInfo(osu.Framework.Graphics.Rendering.StencilInfo)">
            <summary>
            Sets the active stencil parameters.
            </summary>
            <param name="stencilInfo">The stencil parameters.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetFrameBuffer(osu.Framework.Graphics.Veldrid.Buffers.IVeldridFrameBuffer)">
            <summary>
            Sets the active framebuffer.
            </summary>
            <param name="frameBuffer">The framebuffer, or <c>null</c> to activate the back-buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetVertexBuffer(Veldrid.DeviceBuffer,Veldrid.VertexLayoutDescription)">
            <summary>
            Sets the active vertex buffer.
            </summary>
            <param name="buffer">The vertex buffer.</param>
            <param name="layout">The layout of vertices in the buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetIndexBuffer(osu.Framework.Graphics.Veldrid.Buffers.VeldridIndexBuffer)">
            <summary>
            Sets the active index buffer.
            </summary>
            <param name="indexBuffer">The index buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.AttachTexture(System.Int32,osu.Framework.Graphics.Veldrid.Textures.IVeldridTexture)">
            <summary>
            Attaches a texture to the pipeline at the given texture unit.
            </summary>
            <param name="unit">The texture unit.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.AttachUniformBuffer(System.String,osu.Framework.Graphics.Veldrid.Buffers.IVeldridUniformBuffer)">
            <summary>
            Attaches a uniform buffer to the pipeline at the given uniform block.
            </summary>
            <param name="name">The uniform block name.</param>
            <param name="buffer">The uniform buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.SetUniformBufferOffset(osu.Framework.Graphics.Veldrid.Buffers.IVeldridUniformBuffer,System.UInt32)">
            <summary>
            Sets the offset of a uniform buffer.
            </summary>
            <param name="buffer">The uniform buffer.</param>
            <param name="bufferOffsetInBytes">The offset in the uniform buffer.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Pipelines.GraphicsPipeline.DrawVertices(Veldrid.PrimitiveTopology,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws vertices from the active vertex buffer.
            </summary>
            <param name="topology">The vertex topology.</param>
            <param name="vertexStart">The vertex at which to start drawing.</param>
            <param name="verticesCount">The number of vertices to draw.</param>
            <param name="vertexIndexOffset">The base vertex value at which to start reading from.</param>
            <remarks>
            The choice of value for <paramref name="vertexStart"/> and <paramref name="vertexIndexOffset"/> depends on the specific use-case:
            <list type="bullet">
              <item><paramref name="vertexStart"/> offsets where in the index buffer to start reading from.</item>
              <item><paramref name="vertexIndexOffset"/> offsets where in the vertex buffer to start reading from.</item>
            </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">If no shader or index buffer is active.</exception>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Shaders.VeldridShaderPart.WithPassthroughInput(System.Collections.Generic.IReadOnlyList{osu.Framework.Graphics.Veldrid.Shaders.VeldridShaderAttribute})">
            <summary>
            Creates a <see cref="T:osu.Framework.Graphics.Veldrid.Shaders.VeldridShaderPart"/> based off this shader with a list of attributes passed through as input &amp; output.
            Attributes from the list that are already defined in this shader will be ignored.
            </summary>
            <remarks>
            <para>
            In D3D11, unused fragment inputs cull their corresponding vertex output, which affects the vertex input/output structure leading to seemingly undefined behaviour.
            To prevent this from happening, make sure all unused vertex output are used and sent in the fragment output so that D3D11 doesn't omit them.
            </para>
            <para>
            This creates a new <see cref="T:osu.Framework.Graphics.Veldrid.Shaders.VeldridShaderPart"/> rather than altering this existing instance since this is cached at a <see cref="T:osu.Framework.Graphics.Shaders.IShaderStore"/> level and should remain immutable.
            </para>
            </remarks>
            <param name="attributes">The list of attributes to include in the shader as input &amp; output.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Shaders.VeldridUniformLayout">
            <summary>
            Describes the layout of a uniform set in a Veldrid shader.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Shaders.VeldridUniformLayout.#ctor(System.Int32,Veldrid.ResourceLayout)">
            <param name="set">The described set.</param>
            <param name="layout">The layout of the set.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture.#ctor(osu.Framework.Graphics.Veldrid.IVeldridRenderer,System.Int32,System.Int32,System.Boolean,Veldrid.SamplerFilter,System.Nullable{osuTK.Graphics.Color4})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture"/>.
            </summary>
            <param name="renderer">The renderer.</param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="manualMipmaps">Whether manual mipmaps will be uploaded to the texture. If false, the texture will compute mipmaps automatically.</param>
            <param name="filteringMode">The filtering mode.</param>
            <param name="initialisationColour">The colour to initialise texture levels with (in the case of sub region initial uploads). If null, no initialisation is provided out-of-the-box.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture.IsQueuedForUpload">
            <summary>
            Whether the texture is currently queued for upload.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture.maximumUploadedLod">
            <summary>
            The maximum number of mip levels provided by an <see cref="T:osu.Framework.Graphics.Textures.ITextureUpload"/>.
            </summary>
            <remarks>
            This excludes automatic generation of mipmaps via the graphics backend.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Textures.VeldridTextureResources">
            <summary>
            Stores the underlying <see cref="T:Veldrid.Texture"/> and <see cref="T:Veldrid.Sampler"/> resources of a <see cref="T:osu.Framework.Graphics.Veldrid.Textures.VeldridTexture"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.Textures.VeldridTextureResources.GetResourceSet(Veldrid.ResourceFactory,Veldrid.ResourceLayout)">
            <summary>
            Creates a <see cref="T:Veldrid.ResourceSet"/> from the <see cref="T:Veldrid.Texture"/> and <see cref="T:Veldrid.Sampler"/>.
            </summary>
            <param name="factory">The resource set factory.</param>
            <param name="layout">The resource layout which this set will be attached to. Assumes a layout with the texture in slot 0 and the sampler in slot 1.</param>
            <returns>The resource set.</returns>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.VeldridDevice">
            <summary>
            A Veldrid graphics device that provides support for device pipelines.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.Device">
            <summary>
            The platform graphics device.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.Factory">
            <summary>
            The platform graphics resource factory.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.SurfaceType">
            <summary>
            The graphics surface type.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.VerticalSync">
            <summary>
            Enables or disables vertical sync.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.AllowTearing">
            <summary>
            Gets or sets whether the device should render new frames without waiting for previous ones to finish compositing.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.IsDepthRangeZeroToOne">
            <summary>
            Whether the depth is in the range [0, 1] (i.e. Reversed-Z). If <c>false</c>, depth is in the range [-1, 1].
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.IsUvOriginTopLeft">
            <summary>
            Whether the texture coordinates begin in the top-left of the texture. If <c>false</c>, (0, 0) corresponds to the bottom-left texel of the texture.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.IsClipSpaceYInverted">
            <summary>
            Whether the y-coordinate ranges from -1 (top) to 1 (bottom). If <c>false</c>, the y-coordinate ranges from -1 (bottom) to 1 (top).
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.UseStructuredBuffers">
            <summary>
            Whether shader storage buffer objects can be used.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridDevice.MaxTextureSize">
            <summary>
            The maximum allowed texture size.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.#ctor(osu.Framework.Platform.IGraphicsSurface)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Veldrid.VeldridDevice"/>
            </summary>
            <param name="graphicsSurface"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.Resize(osu.Framework.Graphics.Primitives.Vector2I)">
            <summary>
            Notifies the device that a new frame has started.
            </summary>
            <param name="windowSize">The window size.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.SwapBuffers">
            <summary>
            Swaps the back buffer with the front buffer to display the new frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.WaitUntilIdle">
            <summary>
            Waits until all renderer commands have been fully executed GPU-side, as signaled by the graphics backend.
            </summary>
            <remarks>
            This is equivalent to a <c>glFinish</c> call.
            </remarks>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.WaitUntilNextFrameReady">
            <summary>
            Waits until the GPU signals that the next frame is ready to be rendered.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.MakeCurrent">
            <summary>
            Invoked when the rendering thread is active and commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.ClearCurrent">
            <summary>
            Invoked when the rendering thread is suspended and no more commands will be enqueued.
            This is mainly required for OpenGL renderers to mark context as current before performing GL calls.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.TakeScreenshot">
            <summary>
            Returns an image containing the current content of the backbuffer, i.e. takes a screenshot.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridDevice.waitForFence(Veldrid.Fence,System.Int32)">
            <summary>
            Waits for a <see cref="T:Veldrid.Fence"/> to be signalled.
            </summary>
            <param name="fence">The fence.</param>
            <param name="millisecondsTimeout">The maximum amount of time to wait.</param>
            <returns>Whether the fence was signalled.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridRenderer.IsFrameBufferBound(osu.Framework.Graphics.Rendering.IFrameBuffer)">
            <summary>
            Checks whether the given frame buffer is currently bound.
            </summary>
            <param name="frameBuffer">The frame buffer to check.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridRenderer.UpdateTexture``1(Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{``0})">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <typeparam name="T">The pixel type.</typeparam>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridRenderer.UpdateTexture(Veldrid.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Updates a <see cref="T:Veldrid.Texture"/> with a <paramref name="data"/> at the specified coordinates.
            </summary>
            <param name="texture">The <see cref="T:Veldrid.Texture"/> to update.</param>
            <param name="x">The X coordinate of the update region.</param>
            <param name="y">The Y coordinate of the update region.</param>
            <param name="width">The width of the update region.</param>
            <param name="height">The height of the update region.</param>
            <param name="level">The texture level.</param>
            <param name="data">The texture data.</param>
            <param name="rowLengthInBytes">The number of bytes per row of the image to read from <paramref name="data"/>.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.executionStarted(System.UInt64)">
            <summary>
            Updates the current execution index and frees any resources that have not been used for
            <see cref="F:osu.Framework.Graphics.Rendering.Renderer.RESOURCE_FREE_NO_USAGE_LENGTH"/> executions.
            </summary>
            <param name="executionIndex">The current execution index.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.executionFinished(System.UInt64)">
            <summary>
            Returns all resources that the GPU has finished using back to the pool.
            </summary>
            <param name="executionIndex">The finished execution index.</param>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.PooledUsage.Resource">
            <summary>
            The tracked resource.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.PooledUsage.FrameUsageIndex">
            <summary>
            The draw frame at which the usage occurred.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.ResourcePoolUsageStatistic.CountAvailable">
            <summary>
            Total number of drawables available for use (in the pool).
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.VeldridStagingResourcePool`1.ResourcePoolUsageStatistic.CountInUse">
            <summary>
            Total number of drawables currently in use.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Veldrid.Vertices.VeldridVertexUtils`1">
            <summary>
            Utility class providing functionality to generate <see cref="T:Veldrid.VertexLayoutDescription"/> from vertex structures for Veldrid.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Veldrid.Vertices.VeldridVertexUtils`1.STRIDE">
            <summary>
            The stride of the vertex of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Video.DecodedFrame">
            <summary>
            Represents a frame decoded from a video.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.DecodedFrame.Time">
            <summary>
            The timestamp of the frame in the video it was decoded from.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.DecodedFrame.Texture">
            <summary>
            The texture that represents the decoded frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Video.HardwareVideoDecoder">
            <summary>
            Represents a list of usable hardware video decoders.
            </summary>
            <remarks>
            Contains decoders for ALL platforms.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.None">
            <summary>
            Disables hardware decoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.NVDEC">
            <remarks>
            Windows and Linux only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.QuickSyncVideo">
            <summary>
            Windows and Linux only.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.DXVA2">
            <remarks>
            Windows only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.VDPAU">
            <remarks>
            Linux only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.VAAPI">
            <remarks>
            Linux only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.MediaCodec">
            <remarks>
            Android only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.VideoToolbox">
            <remarks>
            Apple devices only.
            </remarks>
        </member>
        <member name="F:osu.Framework.Graphics.Video.HardwareVideoDecoder.D3D11VA">
            <remarks>
            Windows only.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Video.Video">
            <summary>
            Represents a composite that displays a video played back from a stream or a file.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.Buffering">
            <summary>
            Whether this video is in a buffering state, waiting on decoder or underlying stream.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.Loop">
            <summary>
            True if the video should loop after finishing its playback, false otherwise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.IsFaulted">
            <summary>
            Whether the video decoding process has faulted.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.State">
            <summary>
            The current state of the decoding process.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.FramesProcessed">
            <summary>
            The total number of frames processed by this instance.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.Video.lenience_before_seek">
            <summary>
            The length in milliseconds that the decoder can be out of sync before a seek is automatically performed.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.Video.ConversionMatrix">
            <summary>
            YUV->RGB conversion matrix based on the video colorspace
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Video.Video.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Video.Video"/>.
            </summary>
            <param name="filename">The video file.</param>
            <param name="startAtCurrentTime">Whether the current clock time should be assumed as the 0th video frame.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Video.Video.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Graphics.Video.Video"/>.
            </summary>
            <param name="stream">The video file stream.</param>
            <param name="startAtCurrentTime">Whether the current clock time should be assumed as the 0th video frame.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Video.VideoDecoder">
            <summary>
            Represents a video decoder that can be used convert video streams and files into textures.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.Duration">
            <summary>
            The duration of the video that is being decoded. Can only be queried after the decoder has started decoding has loaded. This value may be an estimate by FFmpeg, depending on the video loaded.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.IsRunning">
            <summary>
            True if the decoder currently does not decode any more frames, false otherwise.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.IsFaulted">
            <summary>
            True if the decoder has faulted after starting to decode. You can try to restart a failed decoder by invoking <see cref="M:osu.Framework.Graphics.Video.VideoDecoder.StartDecoding"/> again.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.LastDecodedFrameTime">
            <summary>
            The timestamp of the last frame that was decoded by this video decoder, or 0 if no frames have been decoded.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.FrameRate">
            <summary>
            The frame rate of the video stream this decoder is decoding.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.CanSeek">
            <summary>
            True if the decoder can seek, false otherwise. Determined by the stream this decoder was created with.
            </summary>
        </member>
        <member name="P:osu.Framework.Graphics.Video.VideoDecoder.State">
            <summary>
            The current state of the decoding process.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.TargetHardwareVideoDecoders">
            <summary>
            Determines which hardware acceleration device(s) should be used.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.#ctor(osu.Framework.Graphics.Rendering.IRenderer,System.String)">
            <summary>
            Creates a new video decoder that decodes the given video file.
            </summary>
            <param name="renderer">The renderer to display the video.</param>
            <param name="filename">The path to the file that should be decoded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.#ctor(osu.Framework.Graphics.Rendering.IRenderer,System.IO.Stream)">
            <summary>
            Creates a new video decoder that decodes the given video stream.
            </summary>
            <param name="renderer">The renderer to display the video.</param>
            <param name="videoStream">The stream that should be decoded.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.Seek(System.Double)">
            <summary>
            Seek the decoder to the given timestamp. This will fail if <see cref="P:osu.Framework.Graphics.Video.VideoDecoder.CanSeek"/> is false.
            </summary>
            <param name="targetTimestamp">The timestamp to seek to.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.ReturnFrames(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Video.DecodedFrame})">
            <summary>
            Returns the given frames back to the decoder, allowing the decoder to reuse the textures contained in the frames to draw new frames.
            </summary>
            <param name="frames">The frames that should be returned to the decoder.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.StartDecoding">
            <summary>
            Starts the decoding process. The decoding will happen asynchronously in a separate thread. The decoded frames can be retrieved by using <see cref="M:osu.Framework.Graphics.Video.VideoDecoder.GetDecodedFrames"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.StopDecodingAsync">
            <summary>
            Stops the decoding process.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.GetDecodedFrames">
            <summary>
            Gets all frames that have been decoded by the decoder up until the point in time when this method was called.
            Retrieving decoded frames using this method consumes them, ie calling this method again will never retrieve the same frame twice.
            </summary>
            <returns>The frames that have been decoded up until the point in time this method was called.</returns>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoDecoder.GetAvailableDecoders(FFmpeg.AutoGen.AVInputFormat*,FFmpeg.AutoGen.AVCodecID,osu.Framework.Graphics.Video.HardwareVideoDecoder)">
            <remarks>
            Returned HW devices are not guaranteed to be available on the current machine, they only represent what the loaded FFmpeg libraries support.
            </remarks>
        </member>
        <member name="T:osu.Framework.Graphics.Video.VideoDecoder.DecoderState">
            <summary>
            Represents the possible states the decoder can be in.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.DecoderState.Ready">
            <summary>
            The decoder is ready to begin decoding. This is the default state before the decoder starts operations.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.DecoderState.Running">
            <summary>
            The decoder is currently running and decoding frames.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.DecoderState.Faulted">
            <summary>
            The decoder has faulted with an exception.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.DecoderState.EndOfStream">
            <summary>
            The decoder has reached the end of the video data.
            </summary>
        </member>
        <member name="F:osu.Framework.Graphics.Video.VideoDecoder.DecoderState.Stopped">
            <summary>
            The decoder has been completely stopped and cannot be resumed.
            </summary>
        </member>
        <member name="T:osu.Framework.Graphics.Video.VideoSprite">
            <summary>
            A sprite which holds a video with a custom conversion matrix.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Video.VideoTextureUpload.#ctor(osu.Framework.Graphics.Video.FFmpegFrame)">
            <summary>
            Sets the frame containing the data to be uploaded.
            </summary>
            <param name="ffmpegFrame">The frame to upload.</param>
        </member>
        <member name="T:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables">
            <summary>
            An interface for <see cref="T:osu.Framework.Graphics.Drawable"/>s which can contain <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables.AddVisualiser(osu.Framework.Graphics.Visualisation.VisualisedDrawable)">
            <summary>
            Adds a <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> to this <see cref="T:osu.Framework.Graphics.Drawable"/>'s hierarchy.
            </summary>
            <remarks>
            It is not necessary for this <see cref="T:osu.Framework.Graphics.Drawable"/> to contain the <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> as an immediate child,
            but this <see cref="T:osu.Framework.Graphics.Drawable"/> will receive <see cref="M:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables.RemoveVisualiser(osu.Framework.Graphics.Visualisation.VisualisedDrawable)"/> if the <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> should ever be removed.
            </remarks>
            <param name="visualiser">The <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> to add.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables.RemoveVisualiser(osu.Framework.Graphics.Visualisation.VisualisedDrawable)">
            <summary>
            Removes a <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> from this <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
            <param name="visualiser">The <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> to remove.</param>
        </member>
        <member name="M:osu.Framework.Graphics.Visualisation.VisualisedDrawable.SetContainer(osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables)">
            <summary>
            Moves this <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> to be contained by another target.
            </summary>
            <remarks>
            The <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/> is first removed from its current container via <see cref="M:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables.RemoveVisualiser(osu.Framework.Graphics.Visualisation.VisualisedDrawable)"/>,
            prior to being added to the new container via <see cref="M:osu.Framework.Graphics.Visualisation.IContainVisualisedDrawables.AddVisualiser(osu.Framework.Graphics.Visualisation.VisualisedDrawable)"/>.
            </remarks>
            <param name="container">The target which should contain this <see cref="T:osu.Framework.Graphics.Visualisation.VisualisedDrawable"/>.</param>
        </member>
        <member name="T:osu.Framework.HostOptions">
            <summary>
            Various configuration properties for a <see cref="T:osu.Framework.Host"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.HostOptions.IPCPort">
            <summary>
            The IPC port to bind. This port should be between 1024 and 49151,
            should be shared by all instances of a given osu!framework app,
            but be distinct from IPC ports specified by other osu!framework apps.
            See <see cref="T:osu.Framework.Platform.IIpcHost"/> for more details on usage.
            </summary>
        </member>
        <member name="P:osu.Framework.HostOptions.PortableInstallation">
            <summary>
            Whether this is a portable installation. Will cause all game files to be placed alongside the executable, rather than in the standard data directory.
            </summary>
        </member>
        <member name="P:osu.Framework.HostOptions.BypassCompositor">
            <summary>
            Whether to bypass the compositor. Defaults to <c>true</c>.
            </summary>
            <remarks>
            On Linux, the compositor re-buffers the application to apply various window effects,
            increasing latency in the process. Thus it is a good idea for games to bypass it,
            though normal applications would generally benefit from letting the window effects untouched. <br/>
            If the SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR environment variable is set, this property will have no effect.
            </remarks>
        </member>
        <member name="P:osu.Framework.HostOptions.FriendlyGameName">
            <summary>
            The friendly name of the game to be hosted. This is used to display the name to the user,
            for example in the window title bar or in OS windows and prompts.
            </summary>
            <remarks>
            If empty, GameHost will choose a default name based on the gameName.
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.Bindings.IKeyBinding">
            <summary>
            A binding of a <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> to an action.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Bindings.IKeyBinding.KeyCombination">
            <summary>
            The combination of keys which will trigger this binding.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Bindings.IKeyBinding.Action">
            <summary>
            The resultant action which is triggered by this binding.
            Generally an enum type, but may also be an int representing an enum (converted via <see cref="M:osu.Framework.Input.Bindings.KeyBindingExtensions.GetAction``1(osu.Framework.Input.Bindings.IKeyBinding)"/>
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Bindings.IKeyBindingHandler`1">
            <summary>
            A drawable that handles key bindings.
            </summary>
            <typeparam name="T">The type of bindings, commonly an enum.</typeparam>
        </member>
        <member name="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnPressed(osu.Framework.Input.Events.KeyBindingPressEvent{`0})">
            <summary>
            Triggered when an action is pressed.
            </summary>
            <param name="e">The event containing information about the pressed action.</param>
            <returns>True if this Drawable handled the event. If false, then the event
            is propagated up the scene graph to the next eligible Drawable.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnReleased(osu.Framework.Input.Events.KeyBindingReleaseEvent{`0})">
            <summary>
            Triggered when an action is released.
            </summary>
            <param name="e">The event containing information about the released action.</param>
        </member>
        <member name="T:osu.Framework.Input.Bindings.InputKey">
            <summary>
            A collection of keys, mouse and other controllers' buttons.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.None">
            <summary>
            No key pressed.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Shift">
            <summary>
            The shift key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Control">
            <summary>
            The control key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Alt">
            <summary>
            The alt key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Super">
            <summary>
            The windows/command key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Menu">
            <summary>
            The menu key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F1">
            <summary>
            The F1 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F2">
            <summary>
            The F2 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F3">
            <summary>
            The F3 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F4">
            <summary>
            The F4 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F5">
            <summary>
            The F5 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F6">
            <summary>
            The F6 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F7">
            <summary>
            The F7 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F8">
            <summary>
            The F8 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F9">
            <summary>
            The F9 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F10">
            <summary>
            The F10 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F11">
            <summary>
            The F11 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F12">
            <summary>
            The F12 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F13">
            <summary>
            The F13 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F14">
            <summary>
            The F14 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F15">
            <summary>
            The F15 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F16">
            <summary>
            The F16 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F17">
            <summary>
            The F17 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F18">
            <summary>
            The F18 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F19">
            <summary>
            The F19 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F20">
            <summary>
            The F20 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F21">
            <summary>
            The F21 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F22">
            <summary>
            The F22 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F23">
            <summary>
            The F23 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F24">
            <summary>
            The F24 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F25">
            <summary>
            The F25 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F26">
            <summary>
            The F26 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F27">
            <summary>
            The F27 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F28">
            <summary>
            The F28 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F29">
            <summary>
            The F29 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F30">
            <summary>
            The F30 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F31">
            <summary>
            The F31 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F32">
            <summary>
            The F32 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F33">
            <summary>
            The F33 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F34">
            <summary>
            The F34 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F35">
            <summary>
            The F35 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Up">
            <summary>
            The up arrow key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Down">
            <summary>
            The down arrow key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Left">
            <summary>
            The left arrow key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Right">
            <summary>
            The right arrow key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Enter">
            <summary>
            The enter key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Escape">
            <summary>
            The escape key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Space">
            <summary>
            The space key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Tab">
            <summary>
            The tab key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.BackSpace">
            <summary>
            The backspace key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Back">
            <summary>
            The backspace key (equivalent to BackSpace).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Insert">
            <summary>
            The insert key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Delete">
            <summary>
            The delete key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.PageUp">
            <summary>
            The page up key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.PageDown">
            <summary>
            The page down key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Home">
            <summary>
            The home key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.End">
            <summary>
            The end key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.CapsLock">
            <summary>
            The caps lock key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ScrollLock">
            <summary>
            The scroll lock key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.PrintScreen">
            <summary>
            The print screen key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Pause">
            <summary>
            The pause key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.NumLock">
            <summary>
            The num lock key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Clear">
            <summary>
            The clear key (Keypad5 with NumLock disabled, on typical keyboards).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Sleep">
            <summary>
            The sleep key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad0">
            <summary>
            The keypad 0 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad1">
            <summary>
            The keypad 1 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad2">
            <summary>
            The keypad 2 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad3">
            <summary>
            The keypad 3 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad4">
            <summary>
            The keypad 4 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad5">
            <summary>
            The keypad 5 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad6">
            <summary>
            The keypad 6 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad7">
            <summary>
            The keypad 7 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad8">
            <summary>
            The keypad 8 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Keypad9">
            <summary>
            The keypad 9 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadDivide">
            <summary>
            The keypad divide key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadMultiply">
            <summary>
            The keypad multiply key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadSubtract">
            <summary>
            The keypad subtract key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadMinus">
            <summary>
            The keypad minus key (equivalent to KeypadSubtract).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadAdd">
            <summary>
            The keypad add key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadPlus">
            <summary>
            The keypad plus key (equivalent to KeypadAdd).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadDecimal">
            <summary>
            The keypad decimal key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadPeriod">
            <summary>
            The keypad period key (equivalent to KeypadDecimal).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.KeypadEnter">
            <summary>
            The keypad enter key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.A">
            <summary>
            The A key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.B">
            <summary>
            The B key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.C">
            <summary>
            The C key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.D">
            <summary>
            The D key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.E">
            <summary>
            The E key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.F">
            <summary>
            The F key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.G">
            <summary>
            The G key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.H">
            <summary>
            The H key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.I">
            <summary>
            The I key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.J">
            <summary>
            The J key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.K">
            <summary>
            The K key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.L">
            <summary>
            The L key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.M">
            <summary>
            The M key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.N">
            <summary>
            The N key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.O">
            <summary>
            The O key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.P">
            <summary>
            The P key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Q">
            <summary>
            The Q key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.R">
            <summary>
            The R key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.S">
            <summary>
            The S key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.T">
            <summary>
            The T key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.U">
            <summary>
            The U key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.V">
            <summary>
            The V key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.W">
            <summary>
            The W key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.X">
            <summary>
            The X key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Y">
            <summary>
            The Y key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Z">
            <summary>
            The Z key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number0">
            <summary>
            The number 0 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number1">
            <summary>
            The number 1 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number2">
            <summary>
            The number 2 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number3">
            <summary>
            The number 3 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number4">
            <summary>
            The number 4 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number5">
            <summary>
            The number 5 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number6">
            <summary>
            The number 6 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number7">
            <summary>
            The number 7 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number8">
            <summary>
            The number 8 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Number9">
            <summary>
            The number 9 key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Tilde">
            <summary>
            The tilde key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Grave">
            <summary>
            The grave key (equivalent to Tilde).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Minus">
            <summary>
            The minus key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Plus">
            <summary>
            The plus key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.BracketLeft">
            <summary>
            The left bracket key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LBracket">
            <summary>
            The left bracket key (equivalent to BracketLeft).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.BracketRight">
            <summary>
            The right bracket key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.RBracket">
            <summary>
            The right bracket key (equivalent to BracketRight).
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Semicolon">
            <summary>
            The semicolon key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Quote">
            <summary>
            The quote key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Comma">
            <summary>
            The comma key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Period">
            <summary>
            The period key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Slash">
            <summary>
            The slash key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.BackSlash">
            <summary>
            The backslash key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.NonUSBackSlash">
            <summary>
            The secondary backslash key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LastKey">
            <summary>
            Indicates the last available keyboard key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseLeft">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseMiddle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseRight">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton1">
            <summary>
            The first extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton2">
            <summary>
            The second extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton3">
            <summary>
            The third extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton4">
            <summary>
            The fourth extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton5">
            <summary>
            The fifth extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton6">
            <summary>
            The sixth extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton7">
            <summary>
            The seventh extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton8">
            <summary>
            The eighth extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.ExtraMouseButton9">
            <summary>
            The ninth extra mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseLastButton">
            <summary>
            Indicates the last available mouse button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseWheelUp">
            <summary>
            Mouse wheel rolled up.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseWheelDown">
            <summary>
            Mouse wheel rolled down.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseWheelRight">
            <summary>
            Mouse wheel rolled right.
            Only supported by some mice with a secondary horizontal scroll wheel.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MouseWheelLeft">
            <summary>
            Mouse wheel rolled left.
            Only supported by some mice with a secondary horizontal scroll wheel.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Mute">
            <summary>
            The media mute key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.PlayPause">
            <summary>
            The media play / pause key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Stop">
            <summary>
            The media stop key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.VolumeUp">
            <summary>
            The media volume up key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.VolumeDown">
            <summary>
            The media volume down key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TrackPrevious">
            <summary>
            The media previous key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TrackNext">
            <summary>
            The media next key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LShift">
            <summary>
            The left shift key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.RShift">
            <summary>
            The right shift key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LControl">
            <summary>
            The left control key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.RControl">
            <summary>
            The right control key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LAlt">
            <summary>
            The left alt key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.RAlt">
            <summary>
            The right alt key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.LSuper">
            <summary>
            The left windows/command key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.RSuper">
            <summary>
            The right windows/command key.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickButton">
            <summary>
            Indicates the first available joystick button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick1">
            <summary>
            Joystick button 1.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick2">
            <summary>
            Joystick button 2.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick3">
            <summary>
            Joystick button 3.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick4">
            <summary>
            Joystick button 4.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick5">
            <summary>
            Joystick button 5.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick6">
            <summary>
            Joystick button 6.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick7">
            <summary>
            Joystick button 7.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick8">
            <summary>
            Joystick button 8.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick9">
            <summary>
            Joystick button 9.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick10">
            <summary>
            Joystick button 10.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick11">
            <summary>
            Joystick button 11.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick12">
            <summary>
            Joystick button 12.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick13">
            <summary>
            Joystick button 13.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick14">
            <summary>
            Joystick button 14.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick15">
            <summary>
            Joystick button 15.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick16">
            <summary>
            Joystick button 16.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick17">
            <summary>
            Joystick button 17.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick18">
            <summary>
            Joystick button 18.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick19">
            <summary>
            Joystick button 19.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick20">
            <summary>
            Joystick button 20.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick21">
            <summary>
            Joystick button 21.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick22">
            <summary>
            Joystick button 22.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick23">
            <summary>
            Joystick button 23.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick24">
            <summary>
            Joystick button 24.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick25">
            <summary>
            Joystick button 25.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick26">
            <summary>
            Joystick button 26.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick27">
            <summary>
            Joystick button 27.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick28">
            <summary>
            Joystick button 28.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick29">
            <summary>
            Joystick button 29.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick30">
            <summary>
            Joystick button 30.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick31">
            <summary>
            Joystick button 31.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick32">
            <summary>
            Joystick button 32.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick33">
            <summary>
            Joystick button 33.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick34">
            <summary>
            Joystick button 34.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick35">
            <summary>
            Joystick button 35.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick36">
            <summary>
            Joystick button 36.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick37">
            <summary>
            Joystick button 37.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick38">
            <summary>
            Joystick button 38.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick39">
            <summary>
            Joystick button 39.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick40">
            <summary>
            Joystick button 40.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick41">
            <summary>
            Joystick button 41.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick42">
            <summary>
            Joystick button 42.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick43">
            <summary>
            Joystick button 43.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick44">
            <summary>
            Joystick button 44.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick45">
            <summary>
            Joystick button 45.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick46">
            <summary>
            Joystick button 46.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick47">
            <summary>
            Joystick button 47.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick48">
            <summary>
            Joystick button 48.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick49">
            <summary>
            Joystick button 49.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick50">
            <summary>
            Joystick button 50.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick51">
            <summary>
            Joystick button 51.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick52">
            <summary>
            Joystick button 52.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick53">
            <summary>
            Joystick button 53.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick54">
            <summary>
            Joystick button 54.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick55">
            <summary>
            Joystick button 55.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick56">
            <summary>
            Joystick button 56.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick57">
            <summary>
            Joystick button 57.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick58">
            <summary>
            Joystick button 58.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick59">
            <summary>
            Joystick button 59.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick60">
            <summary>
            Joystick button 60.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick61">
            <summary>
            Joystick button 61.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick62">
            <summary>
            Joystick button 62.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick63">
            <summary>
            Joystick button 63.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.Joystick64">
            <summary>
            Joystick button 64.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickAxisNegativeButton">
            <summary>
            Indicates the first available negative-axis joystick button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis1Negative">
            <summary>
            Joystick axis 1 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis2Negative">
            <summary>
            Joystick axis 2 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis3Negative">
            <summary>
            Joystick axis 3 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis4Negative">
            <summary>
            Joystick axis 4 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis5Negative">
            <summary>
            Joystick axis 5 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis6Negative">
            <summary>
            Joystick axis 6 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis7Negative">
            <summary>
            Joystick axis 7 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis8Negative">
            <summary>
            Joystick axis 8 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis9Negative">
            <summary>
            Joystick axis 9 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis10Negative">
            <summary>
            Joystick axis 10 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis11Negative">
            <summary>
            Joystick axis 11 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis12Negative">
            <summary>
            Joystick axis 12 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis13Negative">
            <summary>
            Joystick axis 13 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis14Negative">
            <summary>
            Joystick axis 14 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis15Negative">
            <summary>
            Joystick axis 15 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis16Negative">
            <summary>
            Joystick axis 16 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis17Negative">
            <summary>
            Joystick axis 17 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis18Negative">
            <summary>
            Joystick axis 18 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis19Negative">
            <summary>
            Joystick axis 19 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis20Negative">
            <summary>
            Joystick axis 20 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis21Negative">
            <summary>
            Joystick axis 21 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis22Negative">
            <summary>
            Joystick axis 22 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis23Negative">
            <summary>
            Joystick axis 23 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis24Negative">
            <summary>
            Joystick axis 24 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis25Negative">
            <summary>
            Joystick axis 25 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis26Negative">
            <summary>
            Joystick axis 26 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis27Negative">
            <summary>
            Joystick axis 27 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis28Negative">
            <summary>
            Joystick axis 28 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis29Negative">
            <summary>
            Joystick axis 29 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis30Negative">
            <summary>
            Joystick axis 30 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis31Negative">
            <summary>
            Joystick axis 31 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis32Negative">
            <summary>
            Joystick axis 32 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis33Negative">
            <summary>
            Joystick axis 33 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis34Negative">
            <summary>
            Joystick axis 34 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis35Negative">
            <summary>
            Joystick axis 35 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis36Negative">
            <summary>
            Joystick axis 36 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis37Negative">
            <summary>
            Joystick axis 37 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis38Negative">
            <summary>
            Joystick axis 38 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis39Negative">
            <summary>
            Joystick axis 39 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis40Negative">
            <summary>
            Joystick axis 40 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis41Negative">
            <summary>
            Joystick axis 41 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis42Negative">
            <summary>
            Joystick axis 42 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis43Negative">
            <summary>
            Joystick axis 43 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis44Negative">
            <summary>
            Joystick axis 44 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis45Negative">
            <summary>
            Joystick axis 45 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis46Negative">
            <summary>
            Joystick axis 46 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis47Negative">
            <summary>
            Joystick axis 47 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis48Negative">
            <summary>
            Joystick axis 48 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis49Negative">
            <summary>
            Joystick axis 49 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis50Negative">
            <summary>
            Joystick axis 50 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis51Negative">
            <summary>
            Joystick axis 51 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis52Negative">
            <summary>
            Joystick axis 52 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis53Negative">
            <summary>
            Joystick axis 53 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis54Negative">
            <summary>
            Joystick axis 54 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis55Negative">
            <summary>
            Joystick axis 55 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis56Negative">
            <summary>
            Joystick axis 56 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis57Negative">
            <summary>
            Joystick axis 57 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis58Negative">
            <summary>
            Joystick axis 58 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis59Negative">
            <summary>
            Joystick axis 59 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis60Negative">
            <summary>
            Joystick axis 60 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis61Negative">
            <summary>
            Joystick axis 61 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis62Negative">
            <summary>
            Joystick axis 62 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis63Negative">
            <summary>
            Joystick axis 63 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis64Negative">
            <summary>
            Joystick axis 64 negative button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickAxisPositiveButton">
            <summary>
            Indicates the first available positive-axis joystick button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis1Positive">
            <summary>
            Joystick axis 1 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis2Positive">
            <summary>
            Joystick axis 2 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis3Positive">
            <summary>
            Joystick axis 3 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis4Positive">
            <summary>
            Joystick axis 4 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis5Positive">
            <summary>
            Joystick axis 5 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis6Positive">
            <summary>
            Joystick axis 6 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis7Positive">
            <summary>
            Joystick axis 7 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis8Positive">
            <summary>
            Joystick axis 8 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis9Positive">
            <summary>
            Joystick axis 9 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis10Positive">
            <summary>
            Joystick axis 10 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis11Positive">
            <summary>
            Joystick axis 11 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis12Positive">
            <summary>
            Joystick axis 12 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis13Positive">
            <summary>
            Joystick axis 13 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis14Positive">
            <summary>
            Joystick axis 14 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis15Positive">
            <summary>
            Joystick axis 15 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis16Positive">
            <summary>
            Joystick axis 16 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis17Positive">
            <summary>
            Joystick axis 17 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis18Positive">
            <summary>
            Joystick axis 18 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis19Positive">
            <summary>
            Joystick axis 19 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis20Positive">
            <summary>
            Joystick axis 20 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis21Positive">
            <summary>
            Joystick axis 21 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis22Positive">
            <summary>
            Joystick axis 22 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis23Positive">
            <summary>
            Joystick axis 23 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis24Positive">
            <summary>
            Joystick axis 24 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis25Positive">
            <summary>
            Joystick axis 25 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis26Positive">
            <summary>
            Joystick axis 26 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis27Positive">
            <summary>
            Joystick axis 27 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis28Positive">
            <summary>
            Joystick axis 28 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis29Positive">
            <summary>
            Joystick axis 29 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis30Positive">
            <summary>
            Joystick axis 30 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis31Positive">
            <summary>
            Joystick axis 31 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis32Positive">
            <summary>
            Joystick axis 32 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis33Positive">
            <summary>
            Joystick axis 33 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis34Positive">
            <summary>
            Joystick axis 34 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis35Positive">
            <summary>
            Joystick axis 35 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis36Positive">
            <summary>
            Joystick axis 36 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis37Positive">
            <summary>
            Joystick axis 37 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis38Positive">
            <summary>
            Joystick axis 38 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis39Positive">
            <summary>
            Joystick axis 39 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis40Positive">
            <summary>
            Joystick axis 40 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis41Positive">
            <summary>
            Joystick axis 41 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis42Positive">
            <summary>
            Joystick axis 42 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis43Positive">
            <summary>
            Joystick axis 43 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis44Positive">
            <summary>
            Joystick axis 44 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis45Positive">
            <summary>
            Joystick axis 45 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis46Positive">
            <summary>
            Joystick axis 46 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis47Positive">
            <summary>
            Joystick axis 47 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis48Positive">
            <summary>
            Joystick axis 48 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis49Positive">
            <summary>
            Joystick axis 49 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis50Positive">
            <summary>
            Joystick axis 50 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis51Positive">
            <summary>
            Joystick axis 51 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis52Positive">
            <summary>
            Joystick axis 52 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis53Positive">
            <summary>
            Joystick axis 53 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis54Positive">
            <summary>
            Joystick axis 54 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis55Positive">
            <summary>
            Joystick axis 55 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis56Positive">
            <summary>
            Joystick axis 56 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis57Positive">
            <summary>
            Joystick axis 57 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis58Positive">
            <summary>
            Joystick axis 58 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis59Positive">
            <summary>
            Joystick axis 59 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis60Positive">
            <summary>
            Joystick axis 60 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis61Positive">
            <summary>
            Joystick axis 61 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis62Positive">
            <summary>
            Joystick axis 62 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis63Positive">
            <summary>
            Joystick axis 63 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickAxis64Positive">
            <summary>
            Joystick axis 64 positive button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickHatUpButton">
            <summary>
            Indicates the first available joystick hat up button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat1Up">
            <summary>
            Joystick hat 1 up button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat2Up">
            <summary>
            Joystick hat 2 up button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat3Up">
            <summary>
            Joystick hat 3 up button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat4Up">
            <summary>
            Joystick hat 4 up button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickHatDownButton">
            <summary>
            Indicates the first available joystick hat down button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat1Down">
            <summary>
            Joystick hat 1 down button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat2Down">
            <summary>
            Joystick hat 2 down button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat3Down">
            <summary>
            Joystick hat 3 down button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat4Down">
            <summary>
            Joystick hat 4 down button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickHatLeftButton">
            <summary>
            Indicates the first available joystick hat left button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat1Left">
            <summary>
            Joystick hat 1 left button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat2Left">
            <summary>
            Joystick hat 2 left button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat3Left">
            <summary>
            Joystick hat 3 left button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat4Left">
            <summary>
            Joystick hat 4 left button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstJoystickHatRightButton">
            <summary>
            Indicates the first available joystick hat right button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat1Right">
            <summary>
            Joystick hat 1 right button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat2Right">
            <summary>
            Joystick hat 2 right button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat3Right">
            <summary>
            Joystick hat 3 right button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.JoystickHat4Right">
            <summary>
            Joystick hat 4 right button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA0">
            <summary>
            A0 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp0">
            <summary>
            A#0 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB0">
            <summary>
            B0 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC1">
            <summary>
            C1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp1">
            <summary>
            C#1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD1">
            <summary>
            D1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp1">
            <summary>
            D#1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE1">
            <summary>
            E1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF1">
            <summary>
            F1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp1">
            <summary>
            F#1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG1">
            <summary>
            G1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp1">
            <summary>
            G#1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA1">
            <summary>
            A1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp1">
            <summary>
            A#1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB1">
            <summary>
            B1 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC2">
            <summary>
            C2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp2">
            <summary>
            C#2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD2">
            <summary>
            D2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp2">
            <summary>
            D#2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE2">
            <summary>
            E2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF2">
            <summary>
            F2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp2">
            <summary>
            F#2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG2">
            <summary>
            G2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp2">
            <summary>
            G#2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA2">
            <summary>
            A2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp2">
            <summary>
            A#2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB2">
            <summary>
            B2 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC3">
            <summary>
            C3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp3">
            <summary>
            C#3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD3">
            <summary>
            D3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp3">
            <summary>
            D#3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE3">
            <summary>
            E3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF3">
            <summary>
            F3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp3">
            <summary>
            F#3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG3">
            <summary>
            G3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp3">
            <summary>
            G#3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA3">
            <summary>
            A3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp3">
            <summary>
            A#3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB3">
            <summary>
            B3 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC4">
            <summary>
            C4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp4">
            <summary>
            C#4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD4">
            <summary>
            D4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp4">
            <summary>
            D#4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE4">
            <summary>
            E4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF4">
            <summary>
            F4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp4">
            <summary>
            F#4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG4">
            <summary>
            G4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp4">
            <summary>
            G#4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA4">
            <summary>
            A4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp4">
            <summary>
            A#4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB4">
            <summary>
            B4 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC5">
            <summary>
            C5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp5">
            <summary>
            C#5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD5">
            <summary>
            D5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp5">
            <summary>
            D#5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE5">
            <summary>
            E5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF5">
            <summary>
            F5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp5">
            <summary>
            F#5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG5">
            <summary>
            G5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp5">
            <summary>
            G#5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA5">
            <summary>
            A5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp5">
            <summary>
            A#5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB5">
            <summary>
            B5 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC6">
            <summary>
            C6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp6">
            <summary>
            C#6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD6">
            <summary>
            D6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp6">
            <summary>
            D#6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE6">
            <summary>
            E6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF6">
            <summary>
            F6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp6">
            <summary>
            F#6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG6">
            <summary>
            G6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp6">
            <summary>
            G#6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA6">
            <summary>
            A6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp6">
            <summary>
            A#6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB6">
            <summary>
            B6 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC7">
            <summary>
            C7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiCSharp7">
            <summary>
            C#7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiD7">
            <summary>
            D7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiDSharp7">
            <summary>
            D#7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiE7">
            <summary>
            E7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiF7">
            <summary>
            F7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiFSharp7">
            <summary>
            F#7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiG7">
            <summary>
            G7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiGSharp7">
            <summary>
            G#7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiA7">
            <summary>
            A7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiASharp7">
            <summary>
            A#7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiB7">
            <summary>
            B7 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.MidiC8">
            <summary>
            C8 key on a MIDI input device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstTabletPenButton">
            <summary>
            Indicates the first available tablet button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenPrimaryButton">
            <summary>
            The primary button on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenSecondaryButton">
            <summary>
            The secondary button on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenTertiaryButton">
            <summary>
            The tertiary button on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenButton4">
            <summary>
            Button 4 on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenButton5">
            <summary>
            Button 5 on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenButton6">
            <summary>
            Button 6 on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenButton7">
            <summary>
            Button 7 on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletPenButton8">
            <summary>
            Button 8 on the tablet pen.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.FirstTabletAuxiliaryButton">
            <summary>
            Indicates the first available auxiliary tablet button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton1">
            <summary>
            Auxiliary tablet button 1.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton2">
            <summary>
            Auxiliary tablet button 2.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton3">
            <summary>
            Auxiliary tablet button 3.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton4">
            <summary>
            Auxiliary tablet button 4.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton5">
            <summary>
            Auxiliary tablet button 5.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton6">
            <summary>
            Auxiliary tablet button 6.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton7">
            <summary>
            Auxiliary tablet button 7.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton8">
            <summary>
            Auxiliary tablet button 8.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton9">
            <summary>
            Auxiliary tablet button 9.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton10">
            <summary>
            Auxiliary tablet button 10.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton11">
            <summary>
            Auxiliary tablet button 11.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton12">
            <summary>
            Auxiliary tablet button 12.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton13">
            <summary>
            Auxiliary tablet button 13.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton14">
            <summary>
            Auxiliary tablet button 14.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton15">
            <summary>
            Auxiliary tablet button 15.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.InputKey.TabletAuxiliaryButton16">
            <summary>
            Auxiliary tablet button 16.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Bindings.IScrollBindingHandler`1">
            <summary>
            A drawable that handles scroll actions.
            </summary>
            <typeparam name="T">The type of bindings.</typeparam>
        </member>
        <member name="M:osu.Framework.Input.Bindings.IScrollBindingHandler`1.OnScroll(osu.Framework.Input.Events.KeyBindingScrollEvent{`0})">
            <summary>
            Triggered when a scroll action is pressed.
            </summary>
            <remarks>
            When the action is not handled by any <see cref="T:osu.Framework.Input.Bindings.IScrollBindingHandler`1"/>, <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnPressed(osu.Framework.Input.Events.KeyBindingPressEvent{`0})"/> is called.
            In either cases, <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnReleased(osu.Framework.Input.Events.KeyBindingReleaseEvent{`0})"/> will be called once.</remarks>
            <param name="e">The event containing information about the scroll.</param>
            <returns>True if this Drawable handled the event. If false, then the event
            is propagated up the scene graph to the next eligible Drawable.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBinding.#ctor(osu.Framework.Input.Bindings.KeyCombination,System.Object)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="keys">The combination of keys which will trigger this binding.</param>
            <param name="action">The resultant action which is triggered by this binding. Usually an enum type.</param>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBinding.#ctor(osu.Framework.Input.Bindings.InputKey,System.Object)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="key">The key which will trigger this binding.</param>
            <param name="action">The resultant action which is triggered by this binding. Usually an enum type.</param>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBinding.#ctor">
            <summary>
            Constructor for derived classes that may require serialisation.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Bindings.KeyBindingContainer`1">
            <summary>
            Maps input actions to custom action data of type <typeparamref name="T"/>. Use in conjunction with <see cref="T:osu.Framework.Graphics.Drawable"/>s implementing <see cref="T:osu.Framework.Input.Bindings.IKeyBindingHandler`1"/>.
            </summary>
            <typeparam name="T">The type of the custom action.</typeparam>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBindingContainer`1.#ctor(osu.Framework.Input.Bindings.SimultaneousBindingMode,osu.Framework.Input.Bindings.KeyCombinationMatchingMode)">
            <summary>
            Create a new instance.
            </summary>
            <param name="simultaneousMode">Specify how to deal with multiple matches of <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/>s and <typeparamref name="T"/>s.</param>
            <param name="matchingMode">Specify how to deal with exact <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> matches.</param>
        </member>
        <member name="P:osu.Framework.Input.Bindings.KeyBindingContainer`1.PressedActions">
            <summary>
            All actions in a currently pressed state.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Bindings.KeyBindingContainer`1.KeyBindingInputQueue">
            <summary>
            The input queue to be used for processing key bindings. Based on the non-positional <see cref="P:osu.Framework.Input.InputManager.NonPositionalInputQueue"/>.
            Can be overridden to change priorities.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Bindings.KeyBindingContainer`1.Prioritised">
            <summary>
            Whether this <see cref="T:osu.Framework.Input.Bindings.KeyBindingContainer"/> should attempt to handle input before any of its children.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.KeyBindingContainer`1.pressedInputKeys">
            <summary>
            All input keys which are currently pressed and have reached this <see cref="T:osu.Framework.Input.Bindings.KeyBindingContainer"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBindingContainer`1.releasePressedActions(osu.Framework.Input.States.InputState)">
            <summary>
            Releases all pressed actions.
            Note that the relevant key bindings remain in a pressed state by the user and are not released by this method.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Bindings.KeyBindingContainer">
            <summary>
            Maps input actions to custom action data.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Bindings.KeyBindingContainer.HandleRepeats">
            <summary>
            Whether key repeat events should be sent. Defaults to <c>true</c>.
            </summary>
            <remarks>
            Key repeats will invoke actions at the same rates as <see cref="M:osu.Framework.Graphics.Drawable.OnKeyDown(osu.Framework.Input.Events.KeyDownEvent)"/> events.
            Disabling this is recommended if you either don't require key repeats (quite often applicable to gameplay input),
            or want a custom repeat rate.
            </remarks>
        </member>
        <member name="F:osu.Framework.Input.Bindings.SimultaneousBindingMode.None">
            <summary>
            One action can be in a pressed state at once.
            If a new matching binding is encountered, any existing binding is first released.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.SimultaneousBindingMode.Unique">
            <summary>
            Unique actions are allowed to be pressed at the same time. There may therefore be more than one action in an actuated state at once.
            If one action has multiple bindings, only the first will trigger an <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnPressed(osu.Framework.Input.Events.KeyBindingPressEvent{`0})"/>.
            The last binding to be released will trigger an <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnReleased(osu.Framework.Input.Events.KeyBindingReleaseEvent{`0})"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.SimultaneousBindingMode.All">
            <summary>
            Unique actions are allowed to be pressed at the same time, as well as multiple times from different bindings. There may therefore be
            more than one action in an pressed state at once, as well as multiple consecutive <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnPressed(osu.Framework.Input.Events.KeyBindingPressEvent{`0})"/> events
            for a single action (followed by an eventual balancing number of <see cref="M:osu.Framework.Input.Bindings.IKeyBindingHandler`1.OnReleased(osu.Framework.Input.Events.KeyBindingReleaseEvent{`0})"/> events).
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyBindingExtensions.GetAction``1(osu.Framework.Input.Bindings.IKeyBinding)">
            <summary>
            Get the action associated with this binding, cast to the required enum type.
            </summary>
            <typeparam name="T">The enum type.</typeparam>
            <returns>A cast <typeparamref name="T"/> representation of <see cref="P:osu.Framework.Input.Bindings.KeyBinding.Action"/>.</returns>
        </member>
        <member name="T:osu.Framework.Input.Bindings.KeyCombination">
            <summary>
            Represent a combination of more than one <see cref="T:osu.Framework.Input.Bindings.InputKey"/>s.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.KeyCombination.Keys">
            <summary>
            The keys.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.#ctor(System.Collections.Generic.ICollection{osu.Framework.Input.Bindings.InputKey})">
            <summary>
            Construct a new instance.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.#ctor(osu.Framework.Input.Bindings.InputKey[])">
            <summary>
            Construct a new instance.
            </summary>
            <param name="keys">The keys.</param>
            <remarks>This constructor is not optimized. Hot paths are assumed to use <see cref="M:osu.Framework.Input.Bindings.KeyCombination.FromInputState(osu.Framework.Input.States.InputState,System.Nullable{osuTK.Vector2})"/>.</remarks>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.#ctor(System.String)">
            <summary>
            Construct a new instance from string representation provided by <see cref="M:osu.Framework.Input.Bindings.KeyCombination.ToString"/>.
            </summary>
            <param name="keys">A comma-separated (KeyCode in integer) string representation of the keys.</param>
            <remarks>This constructor is not optimized. Hot paths are assumed to use <see cref="M:osu.Framework.Input.Bindings.KeyCombination.FromInputState(osu.Framework.Input.States.InputState,System.Nullable{osuTK.Vector2})"/>.</remarks>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.#ctor(System.Collections.Immutable.ImmutableArray{osu.Framework.Input.Bindings.InputKey})">
            <summary>
            Constructor optimized for known builder. The caller is responsible to sort it.
            </summary>
            <param name="keys">The already sorted <see cref="T:System.Collections.Immutable.ImmutableArray`1"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.IsPressed(osu.Framework.Input.Bindings.KeyCombination,osu.Framework.Input.States.InputState,osu.Framework.Input.Bindings.KeyCombinationMatchingMode)">
            <summary>
            Check whether the provided pressed keys are valid for this <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/>.
            </summary>
            <param name="pressedKeys">The potential pressed keys for this <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/>.</param>
            <param name="inputState">The current input state.</param>
            <param name="matchingMode">The method for handling exact key matches.</param>
            <returns>Whether the pressedKeys keys are valid.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.ContainsAll(System.Collections.Immutable.ImmutableArray{osu.Framework.Input.Bindings.InputKey},System.Collections.Immutable.ImmutableArray{osu.Framework.Input.Bindings.InputKey},osu.Framework.Input.Bindings.KeyCombinationMatchingMode)">
            <summary>
            Check whether the provided set of pressed keys matches the candidate binding.
            </summary>
            <param name="candidateKeyBinding">The candidate key binding to match against.</param>
            <param name="pressedPhysicalKeys">The keys which have been pressed by a user.</param>
            <param name="matchingMode">The matching mode to be used when checking.</param>
            <returns>Whether this is a match.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.KeyBindingContains(System.Collections.Immutable.ImmutableArray{osu.Framework.Input.Bindings.InputKey},osu.Framework.Input.Bindings.InputKey)">
            <summary>
            Check whether the provided key is part of the candidate binding.
            </summary>
            <param name="candidateKeyBinding">The candidate key binding to match against.</param>
            <param name="physicalKey">The physical key that has been pressed.</param>
            <returns>Whether this is a match.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.IsPressed(System.Collections.Immutable.ImmutableArray{osu.Framework.Input.Bindings.InputKey},osu.Framework.Input.Bindings.InputKey)">
            <summary>
            Check whether a single physical or virtual key from a candidate binding is relevant to the currently pressed keys.
            </summary>
            <param name="pressedPhysicalKeys">The currently pressed keys to match against.</param>
            <param name="candidateKey">The candidate key to check.</param>
            <returns>Whether this is a match.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.ToString">
            <summary>
            Get a string representation can be used with <see cref="M:osu.Framework.Input.Bindings.KeyCombination.#ctor(System.String)"/>.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:osu.Framework.Input.Bindings.KeyCombination.FromInputState(osu.Framework.Input.States.InputState,System.Nullable{osuTK.Vector2})">
            <summary>
            Construct a new instance from input state.
            </summary>
            <param name="state">The input state object.</param>
            <param name="scrollDelta">Delta of scroller's position.</param>
            <returns>The new constructed <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> instance.</returns>
            <remarks>This factory method is optimized and should be used for hot paths.</remarks>
        </member>
        <member name="F:osu.Framework.Input.Bindings.KeyCombinationMatchingMode.Any">
            <summary>
            Matches a <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> regardless of any additional key presses.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.KeyCombinationMatchingMode.Exact">
            <summary>
            Matches a <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> if there are no additional key presses.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Bindings.KeyCombinationMatchingMode.Modifiers">
            <summary>
            Matches a <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> regardless of any additional key presses, however key modifiers must match exactly.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.ButtonEventManager`1">
            <summary>
            Manages state and events for a single button.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.ButtonEventManager`1.Button">
            <summary>
            The button this <see cref="T:osu.Framework.Input.ButtonEventManager`1"/> manages.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.ButtonEventManager`1.ButtonDownInputQueue">
            <summary>
            The input queue for propagating button up events.
            This is created from <see cref="P:osu.Framework.Input.ButtonEventManager`1.InputQueue"/> when the button is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.ButtonEventManager`1.InputQueue">
            <summary>
            The input queue.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.ButtonEventManager`1.GetInputQueue">
            <summary>
            A function to retrieve the input queue.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.HandleButtonStateChange(osu.Framework.Input.States.InputState,osu.Framework.Input.StateChanges.ButtonStateChangeKind)">
            <summary>
            Handles the button state changing.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
            <param name="kind">The type of change in the button's state.</param>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.handleButtonDown(osu.Framework.Input.States.InputState)">
            <summary>
            Handles the button being pressed.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
            <returns>Whether the event was handled.</returns>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.HandleButtonDown(osu.Framework.Input.States.InputState,System.Collections.Generic.List{osu.Framework.Graphics.Drawable})">
            <summary>
            Handles the button being pressed.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
            <param name="targets">The list of possible targets that can handle the event.</param>
            <returns>The <see cref="T:osu.Framework.Graphics.Drawable"/> that handled the event.</returns>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.handleButtonUp(osu.Framework.Input.States.InputState)">
            <summary>
            Handles the button being released.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.HandleButtonUp(osu.Framework.Input.States.InputState,System.Collections.Generic.List{osu.Framework.Graphics.Drawable})">
            <summary>
            Handles the button being released.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
            <param name="targets">The list of targets that must handle the event. This will contain targets up to the target that handled the button down event.</param>
        </member>
        <member name="M:osu.Framework.Input.ButtonEventManager`1.PropagateButtonEvent(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Drawable},osu.Framework.Input.Events.UIEvent)">
            <summary>
            Triggers events on drawables in <paramref name="drawables"/> until it is handled.
            </summary>
            <param name="drawables">The drawables in the queue.</param>
            <param name="e">The event.</param>
            <returns>The drawable which handled the event or null if none.</returns>
        </member>
        <member name="T:osu.Framework.Input.CustomInputManager">
            <summary>
            An <see cref="T:osu.Framework.Input.InputManager"/> implementation which allows managing of <see cref="T:osu.Framework.Input.Handlers.InputHandler"/>s manually.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.ClickEvent">
            <summary>
            Represents a mouse click.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.DoubleClickEvent">
            <summary>
            An event representing a mouse double click.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.DragEndEvent">
            <summary>
            An event representing the end of a mouse drag.
            Triggered when the mouse button used for dragging is released.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.DragEvent">
            <summary>
            An event representing a mouse drag.
            Triggered when mouse is moved while dragging.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.DragEvent.ScreenSpaceLastMousePosition">
            <summary>
            The last mouse position before this mouse move in the screen space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.DragEvent.LastMousePosition">
            <summary>
            The last mouse position before this mouse move in local space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.DragEvent.Delta">
            <summary>
            The difference of mouse position from last position to current position in local space.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.DragStartEvent">
            <summary>
            An event representing the start of a mouse drag.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.DragStartEvent.Delta">
            <summary>
            The difference from mouse down position to current position in local space.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.FocusEvent">
            <summary>
            An event representing that a drawable gained the focus.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.FocusEvent.PreviouslyFocused">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> that has lost focus, or <c>null</c> if nothing was previously focused.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.FocusLostEvent">
            <summary>
            An event representing that a drawable lost the focus.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.FocusLostEvent.NextFocused">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> that will gain focus, or <c>null</c> if nothing will gain focus.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.HoverEvent">
            <summary>
            An event representing a mouse hover.
            Triggered when mouse cursor is moved onto a drawable.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.HoverLostEvent">
            <summary>
            An event representing the end of mouse hover.
            Triggered when mouse cursor moved out of a drawable.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.JoystickAxisMoveEvent">
            <summary>
            An event representing a movement of a specific joystick axis.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.JoystickAxisMoveEvent.Axis">
            <summary>
            The current joystick axis data.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.JoystickAxisMoveEvent.LastValue">
            <summary>
            The last value of this joystick axis.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.JoystickAxisMoveEvent.Delta">
            <summary>
            The difference of axis value from last value to current value.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.JoystickButtonEvent">
            <summary>
            Events of a joystick button.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.JoystickEvent.PressedButtons">
            <summary>
            List of currently pressed joystick buttons.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.JoystickEvent.Axes">
            <summary>
            List of joystick axes. Axes which have zero value may be omitted.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.JoystickPressEvent">
            <summary>
            An event representing a press of a joystick button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.JoystickReleaseEvent">
            <summary>
            An event representing a release of a joystick button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyBindingEvent`1">
            <summary>
            Events of a key binding action.
            </summary>
            <typeparam name="T">The action type.</typeparam>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyBindingPressEvent`1">
            <summary>
            An event representing a press of a key binding combination.
            </summary>
            <typeparam name="T">The action type.</typeparam>
        </member>
        <member name="F:osu.Framework.Input.Events.KeyBindingPressEvent`1.Repeat">
            <summary>
            Whether this is a repeated event resulted from a held keyboard key.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyBindingReleaseEvent`1">
            <summary>
            An event representing a release of a key binding combination.
            </summary>
            <typeparam name="T">The action type.</typeparam>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyBindingScrollEvent`1">
            <summary>
            An event representing a change of a key binding's associated mouse wheel direction.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:osu.Framework.Input.Events.KeyBindingScrollEvent`1.ScrollAmount">
            <summary>
            The relative change in scroll associated with this event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.KeyBindingScrollEvent`1.IsPrecise">
            <summary>
            Whether the change came from a device supporting precision scrolling.
            </summary>
            <remarks>
            In cases this is true, scroll events will generally map 1:1 to user's input, rather than incrementing in large "notches" (as expected of traditional scroll wheels).
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyboardEvent">
            <summary>
            Events of a keyboard key.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Events.KeyboardEvent.IsPressed(osuTK.Input.Key)">
            <summary>
            Whether a specific key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.KeyboardEvent.HasAnyKeyPressed">
            <summary>
            Whether any key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.KeyboardEvent.PressedKeys">
            <summary>
            List of currently pressed keys.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyDownEvent">
            <summary>
            An event representing a press of a keyboard key.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.KeyUpEvent">
            <summary>
            An event representing a release of a keyboard key.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Events.MidiEvent.IsPressed(osu.Framework.Input.MidiKey)">
            <summary>
            Whether a specific key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MidiEvent.HasAnyKeyPressed">
            <summary>
            Whether any key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MidiEvent.PressedKeys">
            <summary>
            List of currently pressed keys.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.MouseButtonEvent">
            <summary>
            Represents events of a mouse button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.MouseDownEvent">
            <summary>
            An event representing a press of a mouse button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.MouseEvent">
            <summary>
            Represent an event which is propagated based on mouse position.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Events.MouseEvent.IsPressed(osuTK.Input.MouseButton)">
            <summary>
            Whether a specific mouse button is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MouseEvent.HasAnyButtonPressed">
            <summary>
            Whether any mouse button is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MouseEvent.PressedButtons">
            <summary>
            List of currently pressed mouse buttons.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.MouseMoveEvent">
            <summary>
            An event representing a move of the mouse cursor.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.MouseMoveEvent.ScreenSpaceLastMousePosition">
            <summary>
            The last mouse position before this mouse move in the screen space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MouseMoveEvent.LastMousePosition">
            <summary>
            The last mouse position before this mouse move in local space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.MouseMoveEvent.Delta">
            <summary>
            The difference of mouse position from last position to current position in local space.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.MouseUpEvent">
            <summary>
            An event representing a release of a mouse button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.ScrollEvent">
            <summary>
            An event representing a change of the mouse wheel.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.ScrollEvent.ScrollDelta">
            <summary>
            The relative change in scroll associated with this event.
            </summary>
            <remarks>
            Delta is positive when mouse wheel scrolled to the up or left, in non-"natural" scroll mode (ie. the classic way).
            </remarks>
        </member>
        <member name="F:osu.Framework.Input.Events.ScrollEvent.IsPrecise">
            <summary>
            Whether the change came from a device supporting precision scrolling.
            </summary>
            <remarks>
            In cases this is true, scroll events will generally map 1:1 to user's input, rather than incrementing in large "notches" (as expected of traditional scroll wheels).
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletAuxiliaryButtonEvent">
            <summary>
            Events of a tablet auxiliary button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletAuxiliaryButtonPressEvent">
            <summary>
            An event representing the press of a tablet auxiliary button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletAuxiliaryButtonReleaseEvent">
            <summary>
            An event representing the press of a tablet auxiliary button.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TabletEvent.PressedPenButtons">
            <summary>
            List of currently pressed tablet pen buttons.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TabletEvent.PressedAuxiliaryButtons">
            <summary>
            List of currently pressed auxiliary buttons.
            </summary>
            <value></value>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletPenButtonEvent">
            <summary>
            Events of a tablet pen button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletPenButtonPressEvent">
            <summary>
            An event representing the press of a tablet pen button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.TabletPenButtonReleaseEvent">
            <summary>
            An event representing the release of a tablet pen button.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.TouchEvent">
            <summary>
            Represents a touch event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.TouchEvent.ScreenSpaceTouch">
            <summary>
            The touch of this event with the screen space position.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TouchEvent.Touch">
            <summary>
            The touch of this event with local space position.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.TouchEvent.ScreenSpaceTouchDownPosition">
            <summary>
            The touch position at the <see cref="T:osu.Framework.Input.Events.TouchDownEvent"/> for this touch source in the screen space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TouchEvent.TouchDownPosition">
            <summary>
            The touch position at the <see cref="T:osu.Framework.Input.Events.TouchDownEvent"/> for this touch source in local space.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Events.TouchEvent.IsActive(osu.Framework.Input.Touch)">
            <summary>
            Whether a touch is active.
            </summary>
            <param name="touch">The touch to check for.</param>
        </member>
        <member name="T:osu.Framework.Input.Events.TouchMoveEvent">
            <summary>
            Represents a touch motion event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.TouchMoveEvent.ScreenSpaceLastTouchPosition">
            <summary>
            The last touch position in the screen space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TouchMoveEvent.LastTouchPosition">
            <summary>
            The last touch position in local space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.TouchMoveEvent.Delta">
            <summary>
            The difference of touch position from last position to current position in local space.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Events.UIEvent">
            <summary>
            Denotes a UI event.
            A UI event is produced for and can be handled by a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            While handling events, the <see cref="F:osu.Framework.Input.Events.UIEvent.Target"/> is set to the <see cref="T:osu.Framework.Graphics.Drawable"/> which is handling the event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Events.UIEvent.CurrentState">
            <summary>
            The current input state.
            </summary>
            <remarks>
            This raw state should not be used for event handling if not really needed.
            Instead, properties such as <see cref="P:osu.Framework.Input.Events.UIEvent.MousePosition"/> and event data should be used.
            </remarks>
        </member>
        <member name="F:osu.Framework.Input.Events.UIEvent.Target">
            <summary>
            The current target <see cref="T:osu.Framework.Graphics.Drawable"/> of this event.
            This can be modified to reuse an instance many times.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Events.UIEvent.ToLocalSpace(osuTK.Vector2)">
            <summary>
            Convert a coordinate to <see cref="F:osu.Framework.Input.Events.UIEvent.Target"/>'s parent space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.ScreenSpaceMousePosition">
            <summary>
            The current mouse position in screen space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.MousePosition">
            <summary>
            The current mouse position in <see cref="F:osu.Framework.Input.Events.UIEvent.Target"/>'s parent space.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.ControlPressed">
            <summary>
            Whether left or right control key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.AltPressed">
            <summary>
            Whether left or right alt key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.ShiftPressed">
            <summary>
            Whether left or right shift key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Events.UIEvent.SuperPressed">
            <summary>
            Whether left or right super key (Win key on Windows, or Command key on Mac) is pressed.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Handlers.IHasCursorSensitivity">
            <summary>
            An input handler which can have its sensitivity changed.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Handlers.INeedsMousePositionFeedback">
            <summary>
            An <see cref="T:osu.Framework.Input.Handlers.InputHandler"/> which needs to receive feedback of the final mouse position.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Handlers.INeedsMousePositionFeedback.FeedbackMousePositionChange(osuTK.Vector2,System.Boolean)">
            <summary>
            Receives the final mouse position from an <see cref="T:osu.Framework.Input.InputManager"/>.
            </summary>
            <param name="position">The final mouse position.</param>
            <param name="isSelfFeedback">Whether the feedback was triggered from this handler.</param>
        </member>
        <member name="F:osu.Framework.Input.Handlers.InputHandler.STATISTIC_GROUP">
            <summary>
            Base category to use for input-related <see cref="T:osu.Framework.Statistics.GlobalStatistics"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Handlers.InputHandler.StatisticGroupFor``1">
            <summary>
            Gets the appropriate statistic group for use in <see cref="M:osu.Framework.Statistics.GlobalStatistics.Get``1(System.String,System.String)"/>.
            </summary>
            <typeparam name="T">Calling class</typeparam>
        </member>
        <member name="M:osu.Framework.Input.Handlers.InputHandler.Initialize(osu.Framework.Platform.GameHost)">
            <summary>
            Used to initialize resources specific to this InputHandler. It gets called once.
            </summary>
            <returns>Success of the initialization.</returns>
        </member>
        <member name="M:osu.Framework.Input.Handlers.InputHandler.Reset">
            <summary>
            Reset this handler to a sane default state. This should reset any settings a consumer or user may have changed in order to attempt to make the handler usable again.
            </summary>
            <remarks>
            An example would be a user setting the sensitivity too high to turn it back down, or restricting the navigable screen area too small.
            Calling this would attempt to return the user to a sane state so they could re-attempt configuration changes.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.Handlers.InputHandler.CollectPendingInputs(System.Collections.Generic.List{osu.Framework.Input.StateChanges.IInput})">
            <summary>
            Add all pending states since the last call to this method to a provided list.
            </summary>
            <param name="inputs">The list for pending inputs to be added to.</param>
        </member>
        <member name="P:osu.Framework.Input.Handlers.InputHandler.IsActive">
            <summary>
            Indicates whether this InputHandler is currently delivering input by the user. When handling input the OsuGame uses the first InputHandler which is active.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.InputHandler.Description">
            <summary>
            A user-readable description of this input handler, for display in settings and logs.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.InputHandler.Enabled">
            <summary>
            Whether this InputHandler should be collecting <see cref="T:osu.Framework.Input.StateChanges.IInput"/>s to return on the next <see cref="M:osu.Framework.Input.Handlers.InputHandler.CollectPendingInputs(System.Collections.Generic.List{osu.Framework.Input.StateChanges.IInput})"/> call
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Handlers.InputHandler.Log(System.String,osu.Framework.Logging.LogLevel,System.Exception)">
            <summary>
            Logs an arbitrary string prefixed by the name of this input handler.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="level">The verbosity level.</param>
            <param name="exception">An optional related exception.</param>
        </member>
        <member name="M:osu.Framework.Input.Handlers.Joystick.JoystickHandler.enqueueJoystickAxisChanged(osu.Framework.Input.JoystickAxisSource,System.Single)">
            <summary>
            Enqueues a <see cref="T:osu.Framework.Input.StateChanges.JoystickAxisInput"/> taking into account the axis deadzone.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Handlers.Midi.MidiHandler.runningStatus">
            <summary>
            The last event for each midi device. This is required for Running Status (repeat messages sent without
            event type).
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Handlers.Midi.MidiHandler.readEvent(System.Byte[],System.String,System.Int32@,System.Byte@,System.Byte@,System.Byte@)">
            <remarks>
            This function is not intended to provide complete correctness of MIDI parsing.
            For now the goal is to correctly parse "note start" and "note end" events and correctly delimit all events.
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.Handlers.Mouse.MouseHandler">
            <summary>
            Handles mouse events from an <see cref="T:osu.Framework.Platform.ISDLWindow"/>.
            Will use relative mouse mode where possible.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Mouse.MouseHandler.UseRelativeMode">
            <summary>
            Whether relative mode should be preferred when the window has focus, the cursor is contained and the OS cursor is not visible.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Handlers.Mouse.MouseHandler.absolutePositionReceived">
            <summary>
            Whether a non-relative mouse event has ever been received.
            This is used as a starting location for relative movement.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Mouse.MouseHandler.cursorCaptured">
            <summary>
            Whether the application should be handling the cursor.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Handlers.Mouse.MouseHandler.previousPositionOutsideWindow">
            <summary>
            Whether the last position (as reported by <see cref="M:osu.Framework.Input.Handlers.Mouse.MouseHandler.FeedbackMousePositionChange(osuTK.Vector2,System.Boolean)"/>)
            was outside the window.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Handlers.Mouse.MouseHandler.pendingUpdateRelativeMode">
            <summary>
            Set to true to unconditionally update relative mode on the next <see cref="M:osu.Framework.Input.Handlers.Mouse.MouseHandler.FeedbackMousePositionChange(osuTK.Vector2,System.Boolean)"/>
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Handlers.Tablet.ITabletHandler">
            <summary>
            An interface to access OpenTabletDriverHandler.
            Can be considered for removal now that we're solely targeting .NET 6
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.ITabletHandler.AreaOffset">
            <summary>
            The offset of the area which should be mapped to the game window.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.ITabletHandler.AreaSize">
            <summary>
            The size of the area which should be mapped to the game window.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.ITabletHandler.Tablet">
            <summary>
            Information on the currently connected tablet device. May be null if no tablet is detected.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.ITabletHandler.Rotation">
            <summary>
            The rotation of the tablet area in degrees.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.Handlers.Tablet.TabletInfo">
            <summary>
            A class that carries the information we care about from the tablet provider.
            Can be considered for removal now that we're solely targeting .NET 6
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.TabletInfo.Name">
            <summary>
            The name of this tablet.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.Handlers.Tablet.TabletInfo.Size">
            <summary>
            The size (in millimetres) of the connected tablet's full area.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.IFocusManager.TriggerFocusContention(osu.Framework.Graphics.Drawable)">
            <summary>
            Reset current focused drawable to the top-most drawable which is <see cref="P:osu.Framework.Graphics.Drawable.RequestsFocus"/>.
            </summary>
            <param name="triggerSource">The source which triggered this event.</param>
        </member>
        <member name="M:osu.Framework.Input.IFocusManager.ChangeFocus(osu.Framework.Graphics.Drawable)">
            <summary>
            Changes the currently-focused drawable. First checks that <paramref name="potentialFocusTarget"/> is in a valid state to receive focus,
            then unfocuses the current <see cref="P:osu.Framework.Input.InputManager.FocusedDrawable"/> and focuses <paramref name="potentialFocusTarget"/>.
            <paramref name="potentialFocusTarget"/> can be null to reset focus.
            If the given drawable is already focused, nothing happens and no events are fired.
            </summary>
            <param name="potentialFocusTarget">The drawable to become focused.</param>
            <returns>True if the given drawable is now focused (or focus is dropped in the case of a null target).</returns>
        </member>
        <member name="T:osu.Framework.Input.IHandleGlobalKeyboardInput">
            <summary>
            Denotes that this class handles keyboard input globally.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.repeat_initial_delay">
            <summary>
            The initial delay before key repeat begins.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.repeat_tick_rate">
            <summary>
            The delay between key repeats after the initial repeat.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.FocusedDrawable">
            <summary>
            The currently focused <see cref="T:osu.Framework.Graphics.Drawable"/>. Null if there is no current focus.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateInitialState">
            <summary>
            The initial input state. <see cref="F:osu.Framework.Input.InputManager.CurrentState"/> is always equal (as a reference) to the value returned from this.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.CurrentState">
            <summary>
            The last processed state.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.DraggedDrawable">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> which is currently being dragged. null if none is.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.lastHoveredDrawables">
            <summary>
            Contains the previously hovered <see cref="T:osu.Framework.Graphics.Drawable"/>s prior to when
            <see cref="F:osu.Framework.Input.InputManager.hoveredDrawables"/> got updated.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.hoveredDrawables">
            <summary>
            Contains all hovered <see cref="T:osu.Framework.Graphics.Drawable"/>s in top-down order up to the first
            which returned true in its <see cref="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)"/> method.
            Top-down in this case means reverse draw order, i.e. the front-most visible
            <see cref="T:osu.Framework.Graphics.Drawable"/> first, and <see cref="T:osu.Framework.Graphics.Containers.Container"/>s after their children.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.hoverHandledDrawable">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> which returned true in its
            <see cref="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)"/> method, or null if none did so.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.HoveredDrawables">
            <summary>
            Contains all hovered <see cref="T:osu.Framework.Graphics.Drawable"/>s in top-down order up to the first
            which returned true in its <see cref="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)"/> method.
            Top-down in this case means reverse draw order, i.e. the front-most visible
            <see cref="T:osu.Framework.Graphics.Drawable"/> first, and <see cref="T:osu.Framework.Graphics.Containers.Container"/>s after their children.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.PositionalInputQueue">
            <summary>
            Contains all <see cref="T:osu.Framework.Graphics.Drawable"/>s in top-down order which are considered
            for positional input. This list is the same as <see cref="P:osu.Framework.Input.InputManager.HoveredDrawables"/>, only
            that the return value of <see cref="M:osu.Framework.Graphics.Drawable.OnHover(osu.Framework.Input.Events.HoverEvent)"/> is not taken
            into account.
            </summary>
            <remarks>
            This collection should not be retained as a reference. The contents is not stable outside of local usage.
            </remarks>
        </member>
        <member name="P:osu.Framework.Input.InputManager.NonPositionalInputQueue">
            <summary>
            Contains all <see cref="T:osu.Framework.Graphics.Drawable"/>s in top-down order which are considered
            for non-positional input.
            </summary>
            <remarks>
            This collection should not be retained as a reference. The contents is not stable outside of local usage.
            </remarks>
        </member>
        <member name="P:osu.Framework.Input.InputManager.MapMouseToLatestTouch">
            <summary>
            Whether to produce mouse input on any touch input from latest source.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.AllowRightClickFromLongTouch">
            <summary>
            Whether long touches should produce right mouse click, if mouse is mapped to touch.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osuTK.Input.MouseButton)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.MouseButtonEventManager"/> for a specified mouse button.
            </summary>
            <param name="button">The button to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.MouseButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osuTK.Input.MouseButton)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.MouseButtonEventManager"/> responsible for a specified mouse button.
            </summary>
            <param name="button">The button to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.MouseButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osuTK.Input.Key)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.KeyEventManager"/> for a specified key.
            </summary>
            <param name="key">The key to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.KeyEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osuTK.Input.Key)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.KeyEventManager"/> responsible for a specified key.
            </summary>
            <param name="key">The key to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.KeyEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osu.Framework.Input.TouchSource)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.TouchEventManager"/> for a specified touch source.
            </summary>
            <param name="source">The touch source to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.TouchEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osu.Framework.Input.TouchSource)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.TouchEventManager"/> responsible for a specified touch source.
            </summary>
            <param name="source">The touch source to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.TouchEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osu.Framework.Input.TabletPenButton)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.TabletPenButtonEventManager"/> for a specified tablet pen button.
            </summary>
            <param name="button">The button to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.TabletPenButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osu.Framework.Input.TabletPenButton)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.TabletPenButtonEventManager"/> responsible for a specified tablet pen button.
            </summary>
            <param name="button">The button to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.TabletPenButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osu.Framework.Input.TabletAuxiliaryButton)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.TabletAuxiliaryButtonEventManager"/> for a specified tablet auxiliary button.
            </summary>
            <param name="button">The button to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.TabletAuxiliaryButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osu.Framework.Input.TabletAuxiliaryButton)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.TabletAuxiliaryButtonEventManager"/> responsible for a specified tablet auxiliary button.
            </summary>
            <param name="button">The button to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.TabletAuxiliaryButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osu.Framework.Input.JoystickButton)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.JoystickButtonEventManager"/> for a specified joystick button.
            </summary>
            <param name="button">The button to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.JoystickButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osu.Framework.Input.JoystickButton)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.JoystickButtonEventManager"/> responsible for a specified joystick button.
            </summary>
            <param name="button">The button to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.JoystickButtonEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateButtonEventManagerFor(osu.Framework.Input.MidiKey)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.MidiKeyEventManager"/> for a specified midi key.
            </summary>
            <param name="key">The key to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.MidiKeyEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetButtonEventManagerFor(osu.Framework.Input.MidiKey)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.MidiKeyEventManager"/> responsible for a specified midi key.
            </summary>
            <param name="key">The key to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.MidiKeyEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.CreateJoystickAxisEventManagerFor(osu.Framework.Input.JoystickAxisSource)">
            <summary>
            Create a <see cref="T:osu.Framework.Input.JoystickAxisEventManager"/> for a specified joystick axis.
            </summary>
            <param name="source">The axis to be handled by the returned manager.</param>
            <returns>The <see cref="T:osu.Framework.Input.JoystickAxisEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.GetJoystickAxisEventManagerFor(osu.Framework.Input.JoystickAxisSource)">
            <summary>
            Get the <see cref="T:osu.Framework.Input.JoystickAxisEventManager"/> responsible for a specified joystick axis.
            </summary>
            <param name="source">The axis to find the manager for.</param>
            <returns>The <see cref="T:osu.Framework.Input.JoystickAxisEventManager"/>.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.changeFocus(osu.Framework.Graphics.Drawable)">
            <summary>
            Changes the currently-focused drawable. First checks that <paramref name="potentialFocusTarget"/> is in a valid state to receive focus,
            then unfocuses the current <see cref="P:osu.Framework.Input.InputManager.FocusedDrawable"/> and focuses <paramref name="potentialFocusTarget"/>.
            <paramref name="potentialFocusTarget"/> can be null to reset focus.
            If the given drawable is already focused, nothing happens and no events are fired.
            </summary>
            <param name="potentialFocusTarget">The drawable to become focused.</param>
            <returns>True if the given drawable is now focused (or focus is dropped in the case of a null target).</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.ChangeFocus(osu.Framework.Graphics.Drawable,osu.Framework.Input.States.InputState)">
            <summary>
            Changes the currently-focused drawable. First checks that <paramref name="potentialFocusTarget"/> is in a valid state to receive focus,
            then unfocuses the current <see cref="P:osu.Framework.Input.InputManager.FocusedDrawable"/> and focuses <paramref name="potentialFocusTarget"/>.
            <paramref name="potentialFocusTarget"/> can be null to reset focus.
            If the given drawable is already focused, nothing happens and no events are fired.
            </summary>
            <param name="potentialFocusTarget">The drawable to become focused.</param>
            <param name="state">The <see cref="T:osu.Framework.Input.States.InputState"/> associated with the focusing event.</param>
            <returns>True if the given drawable is now focused (or focus is dropped in the case of a null target).</returns>
        </member>
        <member name="F:osu.Framework.Input.InputManager.mouse_source_debounce_time">
            <summary>
            The length in time after which a lower priority input handler is allowed to take over mouse control from a high priority handler that is no longer reporting.
            It's safe to assume that all input devices are reporting at higher than the debounce time specified here (20hz).
            If the delay seen between device swaps is ever considered to be too slow, this can likely be further increased up to 100hz.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputManager.HandleHoverEvents">
            <summary>
            Whether this input manager is in a state it should handle hover events.
            This could for instance be set to false when the window/target does not have input focus.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.mouseMappedTouchesDown">
            <summary>
            The number of touches which are currently active, causing a single cumulative "mouse down" state.
            </summary>
        </member>
        <member name="E:osu.Framework.Input.InputManager.TouchLongPressBegan">
            <summary>
            Invoked when a touch long-press gesture has scheduled for triggering after the specified delay.
            </summary>
        </member>
        <member name="E:osu.Framework.Input.InputManager.TouchLongPressCancelled">
            <summary>
            Invoked when an ongoing touch long-press gesture has been cancelled.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.touchLongPressPosition">
            <summary>
            The current position of the long-press touch, if one was begun.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.InputManager.validForLongPress">
            <summary>
            Whether the current touch state is eligible for performing a long-press gesture.
            This is set to true once a single touch is pressed, and can be invalidated before the gesture is triggered.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.InputManager.HandleMouseTouchStateChange(osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent)">
            <summary>
            Handles latest activated touch state change event to produce mouse input from.
            </summary>
            <param name="e">The latest activated touch state change event.</param>
            <returns>Whether mouse input has been performed accordingly.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.PropagateBlockableEvent(osu.Framework.Lists.SlimReadOnlyListWrapper{osu.Framework.Graphics.Drawable},osu.Framework.Input.Events.UIEvent)">
            <summary>
            Triggers events on drawables in <paramref name="drawables"/> until it is handled.
            </summary>
            <param name="drawables">The drawables in the queue.</param>
            <param name="e">The event.</param>
            <returns>Whether the event was handled.</returns>
        </member>
        <member name="M:osu.Framework.Input.InputManager.unfocusIfNoLongerValid">
            <summary>
            Unfocus the current focused drawable if it is no longer in a valid state.
            </summary>
            <returns>true if there is no longer a focus.</returns>
        </member>
        <member name="T:osu.Framework.Input.InputResampler">
            <summary>
            Reduces cursor input to relevant nodes and corners that noticably affect the cursor path.
            If the input is a raw/HD input this won't omit any input nodes.
            Set SmoothRawInput to true to keep behaviour for HD inputs.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.InputResampler.ResampleRawInput">
            <summary>
            true if AddPosition should treat raw input (input with a decimal fraction) the same
            as normal input. If false, AddPosition will always just return the position argument
            passed to the function without modification.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.InputResampler.AddPosition(osuTK.Vector2)">
            <summary>
            Function that takes in a <paramref name="position"/> and returns a list of positions
            that can be used by the caller to make the input path smoother or reduce it.
            The current implementation always returns only none or exactly one vector which
            reduces the input to the corner nodes.
            </summary>
            <remarks>
            To save on allocations, the returned list is only valid until the next call of <see cref="M:osu.Framework.Input.InputResampler.AddPosition(osuTK.Vector2)"/>.
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.IRequireHighFrequencyMousePosition">
            <summary>
            Guarantees that a drawable will receive at least one OnMouseMove position update
            per update frame (in addition to any input-triggered occurrences).
            </summary>
        </member>
        <member name="P:osu.Framework.Input.ISourceGeneratedHandleInputCache.KnownType">
            <summary>
            The most-derived type that implements this interface.
            This is used to handle non-partial leaf types that can't rely on the source-generated values and must fall back to reflection.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.ISourceGeneratedHandleInputCache.RequestsPositionalInput">
            <summary>
            Whether this type or any of its base types request positional input.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.ISourceGeneratedHandleInputCache.RequestsNonPositionalInput">
            <summary>
            Whether this type or any of its base types request non-positional input.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.ISuppressKeyEventLogging">
            <summary>
            Marker interface which suppresses logging of keyboard input events.
            Useful for password fields, where user input should not be logged.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.JoystickAxis.Source">
            <summary>
            The source of this axis.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.JoystickAxis.Value">
            <summary>
            The value of this axis.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.JoystickAxisEventManager.InputQueue">
            <summary>
            The input queue.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.JoystickAxisEventManager.GetInputQueue">
            <summary>
            A function to retrieve the input queue.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.JoystickAxisEventManager.HandleAxisChange(osu.Framework.Input.States.InputState,System.Single,System.Single)">
            <summary>
            Handles axis value changing.
            </summary>
            <param name="state">The current <see cref="T:osu.Framework.Input.States.InputState"/>.</param>
            <param name="newValue">The new value for this axis.</param>
            <param name="lastValue">The last value for this axis.</param>
        </member>
        <member name="M:osu.Framework.Input.JoystickAxisEventManager.PropagateEvent(System.Collections.Generic.IEnumerable{osu.Framework.Graphics.Drawable},osu.Framework.Input.Events.UIEvent)">
            <summary>
            Triggers events on drawables in <paramref name="drawables"/> until it is handled.
            </summary>
            <param name="drawables">The drawables in the queue.</param>
            <param name="e">The event.</param>
            <returns>The drawable which handled the event or null if none.</returns>
        </member>
        <member name="T:osu.Framework.Input.KeyEventManager">
            <summary>
            Manages state events for a single key.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.MouseButtonEventManager">
            <summary>
            Manages state and events (click, drag and double-click) for a single mouse button.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.EnableDrag">
            <summary>
            Whether dragging is handled by the managed button.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.EnableClick">
            <summary>
            Whether click and double click are handled by the managed button.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.ChangeFocusOnClick">
            <summary>
            Whether focus is changed when the button is clicked.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.MouseButtonEventManager.BlockNextClick">
            <summary>
            Whether the next click should temporarily be ignored if enabled in this manager.
            This is required for double-click and touch long-press logic.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.DoubleClickTime">
            <summary>
            The maximum time between two clicks for a double-click to be considered.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.ClickDragDistance">
            <summary>
            The distance that must be moved until a dragged click becomes invalid.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.MouseDownPosition">
            <summary>
            The position of the mouse when the last time the button is pressed.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.MouseButtonEventManager.LastClickTime">
            <summary>
            The time of last click.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.MouseButtonEventManager.ClickedDrawable">
            <summary>
            The drawable which is clicked by the last click.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.MouseButtonEventManager.DragStarted">
            <summary>
            Whether a drag operation has started and <see cref="P:osu.Framework.Input.MouseButtonEventManager.DraggedDrawable"/> has been searched for.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.MouseButtonEventManager.DraggedDrawable">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> which is currently being dragged. null if none is.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.PassThroughInputManager">
            <summary>An <see cref="T:osu.Framework.Input.InputManager"/> with an ability to use parent <see cref="T:osu.Framework.Input.InputManager"/>'s input.</summary>
            <remarks>
            There are two modes of operation for this class:
            When <see cref="P:osu.Framework.Input.PassThroughInputManager.UseParentInput"/> is false, this input manager gets inputs only from own input handlers.
            When <see cref="P:osu.Framework.Input.PassThroughInputManager.UseParentInput"/> is true, this input manager ignore any local input handlers and
            gets inputs from the parent (its ancestor in the scene graph) <see cref="T:osu.Framework.Input.InputManager"/> in the following way:
            For mouse input, this only considers input that is passed as events such as <see cref="T:osu.Framework.Input.Events.MouseDownEvent"/>.
            For keyboard and other inputs, this input manager try to reflect parent <see cref="T:osu.Framework.Input.InputManager"/>'s <see cref="T:osu.Framework.Input.States.InputState"/> closely as possible.
            Thus, when this is attached to the scene graph initially and when <see cref="P:osu.Framework.Input.PassThroughInputManager.UseParentInput"/> becomes true,
            multiple events may fire to synchronise the local <see cref="T:osu.Framework.Input.States.InputState"/> with the parent's.
            </remarks>
        </member>
        <member name="P:osu.Framework.Input.PassThroughInputManager.UseParentInput">
            <summary>
            If there's an InputManager above us, decide whether we should use their available state.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.PassThroughInputManager.Sync(System.Boolean)">
            <summary>
            Sync input state to parent <see cref="T:osu.Framework.Input.InputManager"/>'s <see cref="T:osu.Framework.Input.States.InputState"/>.
            Call this when parent <see cref="T:osu.Framework.Input.InputManager"/> changed somehow.
            </summary>
            <param name="useCachedParentInputManager">If this is false, assume parent input manager is unchanged from before.</param>
        </member>
        <member name="M:osu.Framework.Input.PassThroughInputManager.SyncInputState(osu.Framework.Input.States.InputState)">
            <summary>
            Sync current state to a certain state.
            </summary>
            <param name="state">The state to synchronise current with. If this is null, it is regarded as an empty state.</param>
        </member>
        <member name="T:osu.Framework.Input.PlatformActionContainer">
            <summary>
            Provides actions that are expected to have different key bindings per platform.
            The framework will always contain one top-level instance of this class, but extra instances
            can be created to handle events that should trigger specifically on a focused drawable.
            Will send repeat events by default.
            </summary>
        </member>
        <member name="E:osu.Framework.Input.ReadableKeyCombinationProvider.KeymapChanged">
            <summary>
            Invoked when the system keyboard layout has changed.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.ReadableKeyCombinationProvider.GetReadableString(osu.Framework.Input.Bindings.KeyCombination)">
            <summary>
            Returns a human-readable string for a given <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/>.
            </summary>
            <remarks>
            Consumers should subscribe to <see cref="E:osu.Framework.Input.ReadableKeyCombinationProvider.KeymapChanged"/> and re-generate the readable <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> when the keyboard layout changes.
            </remarks>
            <returns>The <see cref="T:osu.Framework.Input.Bindings.KeyCombination"/> as a human-readable string.</returns>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.ButtonInput`1">
            <summary>
            An abstract base class of an <see cref="T:osu.Framework.Input.StateChanges.IInput"/> which denotes a list of button state changes (pressed or released).
            </summary>
            <typeparam name="TButton">The type of button.</typeparam>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.ButtonInput`1.#ctor(`0,System.Boolean)">
            <summary>
            Creates a <see cref="T:osu.Framework.Input.StateChanges.ButtonInput`1"/> with a single <typeparamref name="TButton"/> state.
            </summary>
            <param name="button">The <typeparamref name="TButton"/> to add.</param>
            <param name="isPressed">The state of <paramref name="button"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.ButtonInput`1.#ctor(osu.Framework.Input.States.ButtonStates{`0},osu.Framework.Input.States.ButtonStates{`0})">
            <summary>
            Creates a <see cref="T:osu.Framework.Input.StateChanges.ButtonInput`1"/> from the difference of two <see cref="T:osu.Framework.Input.States.ButtonStates`1"/>.
            </summary>
            <remarks>
            Buttons that are pressed in <paramref name="previous"/> and not pressed in <paramref name="current"/> will be listed as <see cref="F:osu.Framework.Input.StateChanges.ButtonStateChangeKind.Released"/>.
            Buttons that are not pressed in <paramref name="previous"/> and pressed in <paramref name="current"/> will be listed as <see cref="F:osu.Framework.Input.StateChanges.ButtonStateChangeKind.Pressed"/>.
            </remarks>
            <param name="current">The newer <see cref="T:osu.Framework.Input.States.ButtonStates`1"/>.</param>
            <param name="previous">The older <see cref="T:osu.Framework.Input.States.ButtonStates`1"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.ButtonInput`1.GetButtonStates(osu.Framework.Input.States.InputState)">
            <summary>
            Retrieves the <see cref="T:osu.Framework.Input.States.ButtonStates`1"/> from an <see cref="T:osu.Framework.Input.States.InputState"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.ButtonInput`1.CreateEvent(osu.Framework.Input.States.InputState,`0,osu.Framework.Input.StateChanges.ButtonStateChangeKind)">
            <summary>
            Create a <typeparamref name="TButton"/> state change event.
            </summary>
            <param name="state">The <see cref="T:osu.Framework.Input.States.InputState"/> which changed.</param>
            <param name="button">The <typeparamref name="TButton"/> that changed.</param>
            <param name="kind">The type of change that occurred on <paramref name="button"/>.</param>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.ButtonInputEntry`1">
            <summary>
            Denotes a button state.
            </summary>
            <typeparam name="TButton">Type of button.</typeparam>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.ButtonInputEntry`1.Button">
            <summary>
            The button referred to.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.ButtonInputEntry`1.IsPressed">
            <summary>
            Whether <see cref="F:osu.Framework.Input.StateChanges.ButtonInputEntry`1.Button"/> is currently pressed or not.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.ButtonStateChangeKind">
            <summary>
            Denotes a kind of change of a button state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.ButtonStateChangeEvent`1.Button">
            <summary>
            The button which changed state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.ButtonStateChangeEvent`1.Kind">
            <summary>
            The kind of button state change. Either pressed or released.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.Events.InputStateChangeEvent">
            <summary>
            An event which represents a change of an <see cref="T:osu.Framework.Input.States.InputState"/>.
            An <see cref="T:osu.Framework.Input.StateChanges.IInput"/> produces this type of event after it changes <see cref="F:osu.Framework.Input.StateChanges.Events.InputStateChangeEvent.State"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.InputStateChangeEvent.State">
            <summary>
            The <see cref="T:osu.Framework.Input.States.InputState"/> changed by this event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.InputStateChangeEvent.Input">
            <summary>
            The <see cref="T:osu.Framework.Input.StateChanges.IInput"/> that caused this input state change.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.JoystickAxisChangeEvent.Axis">
            <summary>
            The current joystick axis data.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.JoystickAxisChangeEvent.LastValue">
            <summary>
            The last value of this joystick axis.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.MousePositionChangeEvent.LastPosition">
            <summary>
            The last mouse position.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.MouseScrollChangeEvent.LastScroll">
            <summary>
            The absolute value of scroll prior to this change.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.MouseScrollChangeEvent.IsPrecise">
            <summary>
            Whether the change came from a device supporting precision scrolling.
            </summary>
            <remarks>
            In cases this is true, scroll events will generally map 1:1 to user's input, rather than incrementing in large "notches" (as expected of traditional scroll wheels).
            </remarks>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.Touch">
            <summary>
            The current <see cref="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.Touch"/> value.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.IsActive">
            <summary>
            Whether the <see cref="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.Touch"/> became active, or null if no activity change occurred.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.LastPosition">
            <summary>
            The last position of this <see cref="F:osu.Framework.Input.StateChanges.Events.TouchStateChangeEvent.Touch"/>, or null if no position change occurred.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.IInput">
            <summary>
            Denotes an input from an <see cref="T:osu.Framework.Input.Handlers.InputHandler"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.IInput.Apply(osu.Framework.Input.States.InputState,osu.Framework.Input.StateChanges.IInputStateChangeHandler)">
            <summary>
            Applies input to an <see cref="T:osu.Framework.Input.States.InputState"/>.
            This alters the <see cref="T:osu.Framework.Input.States.InputState"/> and propagates the change to an <see cref="T:osu.Framework.Input.StateChanges.IInputStateChangeHandler"/>.
            </summary>
            <param name="state">The <see cref="T:osu.Framework.Input.States.InputState"/> to apply changes to.</param>
            <param name="handler">The <see cref="T:osu.Framework.Input.StateChanges.IInputStateChangeHandler"/> to handle changes to <paramref name="state"/>.</param>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.IInputStateChangeHandler">
            <summary>
            An object which can handle <see cref="T:osu.Framework.Input.States.InputState"/> changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.IInputStateChangeHandler.HandleInputStateChange(osu.Framework.Input.StateChanges.Events.InputStateChangeEvent)">
            <summary>
            Handles an input state change event.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.ISourcedFromTouch">
            <summary>
            Denotes an input which was sourced from a touch event.
            Generally used to mark when an alternate input was triggered from a touch source (ie. touch being emulated as a mouse).
            </summary>
        </member>
        <member name="P:osu.Framework.Input.StateChanges.ISourcedFromTouch.TouchEvent">
            <summary>
            The source touch event.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.JoystickAxisInput.Axes">
            <summary>
            List of joystick axes.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.JoystickAxisInput.applyButtonInputsIfNeeded(osu.Framework.Input.States.InputState,osu.Framework.Input.StateChanges.IInputStateChangeHandler,osu.Framework.Input.JoystickAxis)">
            <summary>
            Applies <see cref="T:osu.Framework.Input.StateChanges.JoystickButtonInput"/> events depending on whether the axis has changed direction.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.MidiKeyInput">
            <summary>
            Represents an input from a MIDI device.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.MidiKeyInput.Velocities">
            <summary>
            A mapping of <see cref="T:osu.Framework.Input.MidiKey"/>s to the velocities they were pressed or released with.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.MidiKeyInput.#ctor(osu.Framework.Input.MidiKey,System.Byte,System.Boolean)">
            <summary>
            Creates a <see cref="T:osu.Framework.Input.StateChanges.MidiKeyInput"/> for a single key state.
            </summary>
            <param name="button">The <see cref="T:osu.Framework.Input.MidiKey"/> whose state changed.</param>
            <param name="velocity">The velocity with which with the input was performed.</param>
            <param name="isPressed">Whether <paramref name="button"/> was pressed or released.</param>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.MidiKeyInput.#ctor(osu.Framework.Input.States.MidiState,osu.Framework.Input.States.MidiState)">
            <summary>
            Creates a <see cref="T:osu.Framework.Input.StateChanges.MidiKeyInput"/> from the difference of two <see cref="T:osu.Framework.Input.States.MidiState"/>s.
            </summary>
            <remarks>
            Buttons that are pressed in <paramref name="previousState"/> and not pressed in <paramref name="currentState"/> will be listed as <see cref="F:osu.Framework.Input.StateChanges.ButtonStateChangeKind.Released"/>.
            Buttons that are not pressed in <paramref name="previousState"/> and pressed in <paramref name="currentState"/> will be listed as <see cref="F:osu.Framework.Input.StateChanges.ButtonStateChangeKind.Pressed"/>.
            Key velocities from <paramref name="currentState"/> always take precedence over velocities from <paramref name="previousState"/>.
            </remarks>
            <param name="currentState">The newer <see cref="T:osu.Framework.Input.States.MidiState"/>.</param>
            <param name="previousState">The older <see cref="T:osu.Framework.Input.States.MidiState"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.MidiKeyInput.GetButtonStates(osu.Framework.Input.States.InputState)">
            <summary>
            Retrieves the <see cref="T:osu.Framework.Input.States.ButtonStates`1"/> from a <see cref="T:osu.Framework.Input.StateChanges.MidiKeyInput"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.MousePositionAbsoluteInput">
            <summary>
            Denotes an absolute change of mouse position.
            Pointing devices such as tablets provide absolute input.
            </summary>
            <remarks>
            This is the first input received from any pointing device.
            </remarks>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.MousePositionAbsoluteInput.Position">
            <summary>
            The position which will be assigned to the current position.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.MousePositionRelativeInput">
            <summary>
            Denotes a relative change of mouse position.
            Pointing devices such as mice provide relative positional input.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.MousePositionRelativeInput.Delta">
            <summary>
            The change in position. This will be added to the current position.
            When the current position is not valid, no changes will be made.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.MouseScrollRelativeInput">
            <summary>
            Denotes a relative change of mouse scroll.
            Pointing devices such as mice provide relative scroll input.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.MouseScrollRelativeInput.Delta">
            <summary>
            The change in scroll. This is added to the current scroll.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.MouseScrollRelativeInput.IsPrecise">
            <summary>
            Whether the change came from a device supporting precision scrolling.
            </summary>
            <remarks>
            In cases this is true, scroll events will generally map 1:1 to user's input, rather than incrementing in large "notches" (as expected of traditional scroll wheels).
            </remarks>
        </member>
        <member name="T:osu.Framework.Input.StateChanges.TouchInput">
            <summary>
            Denotes a change of a touch input.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.TouchInput.Touches">
            <summary>
            The list of touch structures each providing the source and position to move to.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.StateChanges.TouchInput.Activate">
            <summary>
            Whether to activate the provided <see cref="F:osu.Framework.Input.StateChanges.TouchInput.Touches"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.TouchInput.#ctor(osu.Framework.Input.Touch,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Input.StateChanges.TouchInput"/>.
            </summary>
            <param name="touch">The <see cref="T:osu.Framework.Input.Touch"/>.</param>
            <param name="activate">Whether to activate the provided <param ref="touch"/>, must be true if changing position only.</param>
        </member>
        <member name="M:osu.Framework.Input.StateChanges.TouchInput.#ctor(System.Collections.Generic.IEnumerable{osu.Framework.Input.Touch},System.Boolean)">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Input.StateChanges.TouchInput"/>.
            </summary>
            <param name="touches">The list of <see cref="T:osu.Framework.Input.Touch"/>es.</param>
            <param name="activate">Whether to activate the provided <param ref="touches"/>, must be true if changing position only.</param>
        </member>
        <member name="T:osu.Framework.Input.States.ButtonStates`1">
            <summary>
            Denotes multiple button states.
            </summary>
            <typeparam name="TButton">The type of button.</typeparam>
        </member>
        <member name="M:osu.Framework.Input.States.ButtonStates`1.IsPressed(`0)">
            <summary>
            Finds whether a <typeparamref name="TButton"/> is currently pressed.
            </summary>
            <param name="button">The <typeparamref name="TButton"/> to check.</param>
        </member>
        <member name="M:osu.Framework.Input.States.ButtonStates`1.SetPressed(`0,System.Boolean)">
            <summary>
            Sets the state of a <typeparamref name="TButton"/>.
            </summary>
            <param name="button">The <typeparamref name="TButton"/> to set the state of.</param>
            <param name="pressed">Whether <paramref name="button"/> should be pressed.</param>
            <returns>Whether the state of <paramref name="button"/> actually changed.</returns>
        </member>
        <member name="M:osu.Framework.Input.States.ButtonStates`1.EnumerateDifference(osu.Framework.Input.States.ButtonStates{`0})">
            <summary>
            Enumerates the differences between ourselves and a previous <see cref="T:osu.Framework.Input.States.ButtonStates`1"/>.
            </summary>
            <param name="lastButtons">The previous <see cref="T:osu.Framework.Input.States.ButtonStates`1"/>.</param>
        </member>
        <member name="M:osu.Framework.Input.States.ButtonStates`1.Set(osu.Framework.Input.States.ButtonStates{`0})">
            <summary>
            Copies the state of another <see cref="T:osu.Framework.Input.States.ButtonStates`1"/> to ourselves.
            </summary>
            <param name="other">The <see cref="T:osu.Framework.Input.States.ButtonStates`1"/> to copy.</param>
        </member>
        <member name="T:osu.Framework.Input.States.InputState">
            <summary>
            An object that stores all input states.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Mouse">
            <summary>
            The mouse state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Keyboard">
            <summary>
            The keyboard state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Touch">
            <summary>
            The touch state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Joystick">
            <summary>
            The joystick state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Midi">
            <summary>
            The midi state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.InputState.Tablet">
            <summary>
            The tablet state.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.States.InputState.#ctor(osu.Framework.Input.States.InputState)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Input.States.InputState"/> using the individual input states from another <see cref="T:osu.Framework.Input.States.InputState"/>.
            </summary>
            <param name="other">The <see cref="T:osu.Framework.Input.States.InputState"/> to take the individual input states from. Note that states are not cloned and will remain as references to the same objects.</param>
        </member>
        <member name="M:osu.Framework.Input.States.InputState.#ctor(osu.Framework.Input.States.MouseState,osu.Framework.Input.States.KeyboardState,osu.Framework.Input.States.TouchState,osu.Framework.Input.States.JoystickState,osu.Framework.Input.States.MidiState,osu.Framework.Input.States.TabletState)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Input.States.InputState"/> using given individual input states.
            </summary>
            <param name="mouse">The mouse state.</param>
            <param name="keyboard">The keyboard state.</param>
            <param name="touch">The touch state.</param>
            <param name="joystick">The joystick state.</param>
            <param name="midi">The midi state.</param>
            <param name="tablet">The tablet state.</param>
        </member>
        <member name="F:osu.Framework.Input.States.JoystickState.AxesValues">
            <summary>
            The array of current values associated to each axis source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.JoystickState.AxisDirectionButtons">
            <summary>
            Currently simulated <see cref="T:osu.Framework.Input.JoystickButton"/> for each <see cref="T:osu.Framework.Input.JoystickAxis"/>. <c>0</c> if no button press is simulated.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.States.JoystickState.GetAxes">
            <summary>
            Retrieves all <see cref="T:osu.Framework.Input.JoystickAxis"/> with their current value (regardless of inactive ones).
            </summary>
        </member>
        <member name="P:osu.Framework.Input.States.KeyboardState.ControlPressed">
            <summary>
            Whether left or right control key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.States.KeyboardState.AltPressed">
            <summary>
            Whether left or right alt key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.States.KeyboardState.ShiftPressed">
            <summary>
            Whether left or right shift key is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.States.KeyboardState.SuperPressed">
            <summary>
            Whether left or right super key (Win key on Windows, or Command key on Mac) is pressed.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.States.MouseState.LastSource">
            <summary>
            The last input source to make a change to the state.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.TouchState.MAX_TOUCH_COUNT">
            <summary>
            The maximum amount of touches this can handle.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.TouchState.ActiveSources">
            <summary>
            The list of currently active touch sources.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.States.TouchState.TouchPositions">
            <summary>
            The array to retrieve current touch positions from and set them.
            </summary>
            <remarks>
            Using <see cref="M:osu.Framework.Input.States.TouchState.GetTouchPosition(osu.Framework.Input.TouchSource)"/> is recommended for retrieving
            logically correct values, as this may contain already stale values.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.States.TouchState.GetTouchPosition(osu.Framework.Input.TouchSource)">
            <summary>
            Retrieves the current touch position of a specified <paramref name="source"/>.
            </summary>
            <param name="source">The touch source.</param>
            <returns>The touch position, or null if provided <paramref name="source"/> is not currently active.</returns>
        </member>
        <member name="M:osu.Framework.Input.States.TouchState.IsActive(osu.Framework.Input.TouchSource)">
            <summary>
            Whether the provided touch <paramref name="source"/> is active.
            </summary>
            <param name="source">The touch source to check for.</param>
        </member>
        <member name="M:osu.Framework.Input.States.TouchState.EnumerateDifference(osu.Framework.Input.States.TouchState)">
            <summary>
            Enumerates the difference between this state and a <param ref="previous"/> state.
            </summary>
            <param name="previous">The previous state.</param>
        </member>
        <member name="T:osu.Framework.Input.TextInputSource">
            <summary>
            A source from which we can retrieve user text input.
            Generally hides a native implementation from the game framework.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.TextInputSource.ImeActive">
            <summary>
            Whether IME is actively providing text composition through <see cref="E:osu.Framework.Input.TextInputSource.OnImeComposition"/> and accepting input from the user.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TextInputSource.activationCounter">
            <summary>
            Counts how many times consumers have activated this <see cref="T:osu.Framework.Input.TextInputSource"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.Activate(System.Boolean,osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Activates this <see cref="T:osu.Framework.Input.TextInputSource"/>.
            User text input can be acquired through <see cref="E:osu.Framework.Input.TextInputSource.OnTextInput"/>, <see cref="E:osu.Framework.Input.TextInputSource.OnImeComposition"/> and <see cref="E:osu.Framework.Input.TextInputSource.OnImeResult"/>.
            </summary>
            <param name="allowIme">Whether input using IME should be allowed.</param>
            <param name="imeRectangle">
            Rough location of where the text will be input, so the native implementation
            can adjust virtual keyboards and IME popups.
            </param>
            <remarks>
            Each <see cref="M:osu.Framework.Input.TextInputSource.Activate(System.Boolean,osu.Framework.Graphics.Primitives.RectangleF)"/> must be followed by a <see cref="M:osu.Framework.Input.TextInputSource.Deactivate"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.EnsureActivated(System.Boolean,System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})">
            <summary>
            Ensures that the native implementation that retrieves user text input is activated
            and that the user can start entering text.
            </summary>
            <param name="allowIme">Whether input using IME should be allowed.</param>
            <param name="imeRectangle">
            Rough location of where the text will be input, so the native implementation
            can adjust virtual keyboards and IME popups. Can be <c>null</c> to avoid changing
            the IME rectangle.
            </param>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.Deactivate">
            <summary>
            Deactivates this <see cref="T:osu.Framework.Input.TextInputSource"/>.
            </summary>
            <remarks>
            Should be called once text input is no longer needed.
            Each <see cref="M:osu.Framework.Input.TextInputSource.Deactivate"/> must be preceded by an <see cref="M:osu.Framework.Input.TextInputSource.Activate(System.Boolean,osu.Framework.Graphics.Primitives.RectangleF)"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.SetImeRectangle(osu.Framework.Graphics.Primitives.RectangleF)">
            <summary>
            Sets where the native implementation displays IME controls and other text input elements.
            </summary>
            <param name="rectangle">Should be provided in screen space.</param>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.ResetIme">
            <summary>
            Resets IME.
            This clears the current composition string and prepares it for new input.
            </summary>
        </member>
        <member name="E:osu.Framework.Input.TextInputSource.OnTextInput">
            <summary>
            Invoked on text input.
            </summary>
        </member>
        <member name="E:osu.Framework.Input.TextInputSource.OnImeComposition">
            <summary>
            Invoked when IME composition starts or changes.
            </summary>
            <remarks>Empty string for text means that the composition has been cancelled.</remarks>
        </member>
        <member name="E:osu.Framework.Input.TextInputSource.OnImeResult">
            <summary>
            Invoked when IME composition successfully completes.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.ActivateTextInput(System.Boolean)">
            <summary>
            Activates the native implementation that provides text input.
            Should be overriden per-platform.
            </summary>
            <param name="allowIme">Whether input using IME should be allowed.</param>
            <remarks>
            An active native implementation should call <see cref="M:osu.Framework.Input.TextInputSource.TriggerTextInput(System.String)"/> on new text input
            and forward IME composition events through <see cref="M:osu.Framework.Input.TextInputSource.TriggerImeComposition(System.String,System.Int32,System.Int32)"/> and <see cref="M:osu.Framework.Input.TextInputSource.TriggerImeResult(System.String)"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.EnsureTextInputActivated(System.Boolean)">
            <inheritdoc cref="M:osu.Framework.Input.TextInputSource.EnsureActivated(System.Boolean,System.Nullable{osu.Framework.Graphics.Primitives.RectangleF})"/>
            Should be overriden per-platform.
            <remarks>
            Only called if the native implementation has been activated with <see cref="M:osu.Framework.Input.TextInputSource.Activate(System.Boolean,osu.Framework.Graphics.Primitives.RectangleF)"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Input.TextInputSource.DeactivateTextInput">
            <summary>
            Deactivates the native implementation that provides text input.
            Should be overriden per-platform.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.TextInputSource.ImeCompositionDelegate">
            <summary>
            Fired on a new IME composition.
            </summary>
            <param name="text">The composition text.</param>
            <param name="start">The index of the selection start.</param>
            <param name="length">The length of the selection.</param>
            <remarks>Empty string for <paramref name="text"/> means that the composition has been cancelled.</remarks>
        </member>
        <member name="T:osu.Framework.Input.Touch">
            <summary>
            Represents a touch structure that provides a touch source and current position.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Touch.Source">
            <summary>
            The source of this touch.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.Touch.Position">
            <summary>
            The current position of this touch.
            </summary>
        </member>
        <member name="M:osu.Framework.Input.Touch.Equals(osu.Framework.Input.Touch)">
            <summary>
            Indicates whether the <see cref="F:osu.Framework.Input.Touch.Source"/> of this touch is equal to <see cref="F:osu.Framework.Input.Touch.Source"/> of the other touch.
            </summary>
            <param name="other">The other touch.</param>
        </member>
        <member name="T:osu.Framework.Input.TouchEventManager">
            <summary>
            A manager that manages states and events for a single touch.
            </summary>
        </member>
        <member name="P:osu.Framework.Input.TouchEventManager.HeldDrawable">
            <summary>
            The drawable from the input queue that handled a <see cref="T:osu.Framework.Input.Events.TouchDownEvent"/> corresponding to this touch source.
            </summary>
        </member>
        <member name="T:osu.Framework.Input.TouchSource">
            <summary>
            A collection of available touch sources used for touch input methods.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch1">
            <summary>
            The first touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch2">
            <summary>
            The second touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch3">
            <summary>
            The third touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch4">
            <summary>
            The fourth touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch5">
            <summary>
            The fifth touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch6">
            <summary>
            The sixth touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch7">
            <summary>
            The seventh touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch8">
            <summary>
            The eighth touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch9">
            <summary>
            The ninth touch source.
            </summary>
        </member>
        <member name="F:osu.Framework.Input.TouchSource.Touch10">
            <summary>
            The tenth and last available touch source.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.AsyncBufferStream.#ctor(System.IO.Stream,System.Int32,osu.Framework.IO.AsyncBufferStream)">
            <summary>
            A stream that buffers the underlying stream to contiguous memory, reading until the whole file is eventually memory-backed.
            </summary>
            <param name="stream">The underlying stream to read from.</param>
            <param name="blocksToReadAhead">The amount of blocks to read ahead of the read position.</param>
            <param name="shared">Another AsyncBufferStream which is backing the same underlying stream. Allows shared usage of memory-backing.</param>
        </member>
        <member name="T:osu.Framework.IO.Network.FileWebRequest">
            <summary>
            Downloads a file from the internet to a specified location
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Network.JsonWebRequest`1">
            <summary>
            A web request with a specific JSON response format.
            </summary>
            <typeparam name="T">the response format.</typeparam>
        </member>
        <member name="T:osu.Framework.IO.Network.RequestParameterType">
            <summary>
            Determines the type of a key-value parameter supplied to a <see cref="T:osu.Framework.IO.Network.WebRequest"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.RequestParameterType.Query">
            <summary>
            This parameter should be contained in the query string of the request URL.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.RequestParameterType.Form">
            <summary>
            This parameter should be placed in the body of the request, using the <c>multipart/form-data</c> MIME type.
            </summary>
        </member>
        <member name="E:osu.Framework.IO.Network.WebRequest.Started">
            <summary>
            Invoked when a response has been received, but not data has been received.
            </summary>
        </member>
        <member name="E:osu.Framework.IO.Network.WebRequest.Finished">
            <summary>
            Invoked when the <see cref="T:osu.Framework.IO.Network.WebRequest"/> has finished successfully.
            </summary>
        </member>
        <member name="E:osu.Framework.IO.Network.WebRequest.Failed">
            <summary>
            Invoked when the <see cref="T:osu.Framework.IO.Network.WebRequest"/> has failed.
            </summary>
        </member>
        <member name="E:osu.Framework.IO.Network.WebRequest.DownloadProgress">
            <summary>
            Invoked when the download progress has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.IO.Network.WebRequest.UploadProgress">
            <summary>
            Invoked when the upload progress has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.Aborted">
            <summary>
            Whether the <see cref="T:osu.Framework.IO.Network.WebRequest"/> was aborted due to an exception or a user abort request.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.ResponseStream">
            <summary>
            The response stream.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.Url">
            <summary>
            The URL of this request.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.Timeout">
            <summary>
            The amount of time from last sent or received data to trigger a timeout and abort the request.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.AllowRetryOnTimeout">
            <summary>
            Whether this request should internally retry (up to <see cref="F:osu.Framework.IO.Network.WebRequest.MAX_RETRIES"/> times) on a timeout before throwing an exception.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.ContentType">
            <summary>
            The content type when POST content is provided.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.Accept">
            <summary>
            The type of content expected by this web request.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.UserAgent">
            <summary>
            The value of the User-agent HTTP header.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.queryParameters">
            <summary>
            Query string parameters.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.formParameters">
            <summary>
            Form parameters.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.files">
            <summary>
            FILE parameters.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.headers">
            <summary>
            The request headers.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.AllowInsecureRequests">
            <summary>
            Whether non-SSL requests should be allowed. Defaults to disabled.
            In the default state, http:// requests will be automatically converted to https://.
            </summary>
            <remarks>
            Setting this overrides the <c>OSU_INSECURE_REQUESTS</c> environment variable.
            </remarks>
        </member>
        <member name="P:osu.Framework.IO.Network.WebRequest.Completed">
            <summary>
            Whether the <see cref="T:osu.Framework.IO.Network.WebRequest"/> has been run.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.GetResponseString">
            <summary>
            Retrieve the full response body as a UTF8 encoded string.
            </summary>
            <returns>
            The response body.
            Can be <see langword="null"/> if the request hasn't yet <see cref="P:osu.Framework.IO.Network.WebRequest.Completed"/>, or if it has been <see cref="P:osu.Framework.IO.Network.WebRequest.Aborted"/>.
            </returns>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.GetResponseData">
            <summary>
            Retrieve the full response body as an array of bytes.
            </summary>
            <returns>
            The response body.
            Can be <see langword="null"/> if the request hasn't yet <see cref="P:osu.Framework.IO.Network.WebRequest.Completed"/>, or if it has been <see cref="P:osu.Framework.IO.Network.WebRequest.Aborted"/>.
            </returns>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.PerformAsync(System.Threading.CancellationToken)">
            <summary>
            Performs the request asynchronously.
            </summary>
            <param name="cancellationToken">A token to cancel the request.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.Perform">
            <summary>
            Performs the request synchronously.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.PrePerform">
            <summary>
            Task to run direct before performing the request.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.ProcessResponse">
            <summary>
            Performs any post-processing of the response.
            Exceptions thrown in this method will be passed to <see cref="E:osu.Framework.IO.Network.WebRequest.Failed"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.Abort">
            <summary>
            Forcefully abort the request.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.String)">
            <summary>
            Adds a raw POST body to this request.
            This may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddFile(System.String,System.Byte[])"/> and <see cref="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String,osu.Framework.IO.Network.RequestParameterType)"/>.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.Byte[])">
            <summary>
            Adds a raw POST body to this request.
            This may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddFile(System.String,System.Byte[])"/> and <see cref="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String,osu.Framework.IO.Network.RequestParameterType)"/>.
            </summary>
            <param name="bytes">The raw data.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.IO.Stream)">
            <summary>
            Adds a raw POST body to this request.
            This may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddFile(System.String,System.Byte[])"/>
            and <see cref="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String,osu.Framework.IO.Network.RequestParameterType)"/> with the request type of <see cref="F:osu.Framework.IO.Network.RequestParameterType.Form"/>.
            </summary>
            <param name="stream">The stream containing the raw data. This stream will _not_ be finalized by this request.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddFile(System.String,System.Byte[])">
            <summary>
            Add a new FILE parameter to this request. Replaces any existing file with the same name.
            This may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.IO.Stream)"/>. GET requests may not contain files.
            </summary>
            <param name="name">The name of the file. This becomes the name of the file in a multi-part form POST content.</param>
            <param name="data">The file data.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String)">
            <summary>
            <para>
            Add a new parameter to this request. Replaces any existing parameter with the same name.
            </para>
            <para>
            If this request's <see cref="F:osu.Framework.IO.Network.WebRequest.Method"/> supports a request body (<c>POST, PUT, DELETE, PATCH</c>), a <see cref="F:osu.Framework.IO.Network.RequestParameterType.Form"/> parameter will be added;
            otherwise, a <see cref="F:osu.Framework.IO.Network.RequestParameterType.Query"/> parameter will be added.
            For more fine-grained control over the parameter type, use the <see cref="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String,osu.Framework.IO.Network.RequestParameterType)"/> overload.
            </para>
            <para>
            <see cref="F:osu.Framework.IO.Network.RequestParameterType.Form"/> parameters may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.IO.Stream)"/>.
            </para>
            </summary>
            <remarks>
            Values added to the request URL query string are automatically percent-encoded before sending the request.
            </remarks>
            <param name="name">The name of the parameter.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddParameter(System.String,System.String,osu.Framework.IO.Network.RequestParameterType)">
            <summary>
            Add a new parameter to this request. Replaces any existing parameter with the same name.
            <see cref="F:osu.Framework.IO.Network.RequestParameterType.Form"/> parameters may not be used in conjunction with <see cref="M:osu.Framework.IO.Network.WebRequest.AddRaw(System.IO.Stream)"/>.
            </summary>
            <remarks>
            Values added to the request URL query string are automatically percent-encoded before sending the request.
            </remarks>
            <param name="name">The name of the parameter.</param>
            <param name="value">The parameter value.</param>
            <param name="type">The type of the request parameter.</param>
        </member>
        <member name="M:osu.Framework.IO.Network.WebRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds a new header to this request. Replaces any existing header with the same name.
            </summary>
            <param name="name">The name of the header.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.useIPv6">
            <summary>
            Whether IPv6 should be preferred. Value may change based on runtime failures.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Network.WebRequest.hasResolvedIPv6Availability">
            <summary>
            Whether the initial IPv6 check has been performed (to determine whether v6 is available or not).
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Serialization.BindableJsonConverter">
            <summary>
            A converter used for serializing/deserializing <see cref="T:osu.Framework.Bindables.Bindable`1"/> objects.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Serialization.ISerializableBindable">
            <summary>
            An interface which allows <see cref="T:osu.Framework.Bindables.Bindable`1"/> to be json serialized/deserialized.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Serialization.ISerializableSortedList">
            <summary>
            An interface which allows <see cref="T:osu.Framework.Lists.SortedList`1"/> to be json serialized/deserialized.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Serialization.SortedListJsonConverter">
            <summary>
            A converter used for serializing/deserializing <see cref="T:osu.Framework.Lists.SortedList`1"/> objects.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Serialization.Vector2Converter">
            <summary>
            A type of <see cref="T:Newtonsoft.Json.JsonConverter"/> that serializes only the X and Y coordinates of a <see cref="T:osuTK.Vector2"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.DllResourceStore.GetAvailableResources">
            <summary>
            Retrieve a list of available resources provided by this store.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Stores.FontStore.namespacedGlyphCache">
            <summary>
            A local cache to avoid string allocation overhead. Can be changed to (string,char)=>string if this ever becomes an issue,
            but as long as we directly inherit <see cref="T:osu.Framework.Graphics.Textures.TextureStore"/> this is a slight optimisation.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.FontStore.#ctor(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload},System.Single)">
            <summary>
            Construct a font store to be added to a parent font store via <see cref="M:osu.Framework.IO.Stores.FontStore.AddStore(osu.Framework.Graphics.Textures.ITextureStore)"/>.
            </summary>
            <param name="renderer">The renderer to create textures with.</param>
            <param name="store">The texture source.</param>
            <param name="scaleAdjust">The raw pixel height of the font. Can be used to apply a global scale or metric to font usages.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.FontStore.#ctor(osu.Framework.Graphics.Rendering.IRenderer,osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload},System.Single,osu.Framework.Graphics.Textures.TextureFilteringMode)">
            <summary>
            Construct a font store with a custom filtering mode to be added to a parent font store via <see cref="M:osu.Framework.IO.Stores.FontStore.AddStore(osu.Framework.Graphics.Textures.ITextureStore)"/>.
            All fonts that use the specified filter mode should be nested inside this store to make optimal use of texture atlases.
            </summary>
            <param name="renderer">The renderer to create textures with.</param>
            <param name="store">The texture source.</param>
            <param name="scaleAdjust">The raw pixel height of the font. Can be used to apply a global scale or metric to font usages.</param>
            <param name="minFilterMode">The texture minification filtering mode to use.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.FontStore.queueLoad(osu.Framework.IO.Stores.IGlyphStore)">
            <summary>
            Append child stores to a single threaded load task.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Stores.GlyphStore">
            <summary>
            A basic glyph store that will load font sprite sheets every character retrieval.
            </summary>
        </member>
        <member name="F:osu.Framework.IO.Stores.GlyphStore.font_cache">
            <summary>
            This is a rare usage of a static framework-wide cache.
            In normal execution font instances are held locally by font stores and this will add no overhead or improvement.
            It exists specifically to avoid overheads of parsing fonts repeatedly in unit tests.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.GlyphStore.#ctor(osu.Framework.IO.Stores.ResourceStore{System.Byte[]},System.String,osu.Framework.IO.Stores.IResourceStore{osu.Framework.Graphics.Textures.TextureUpload})">
            <summary>
            Create a new glyph store.
            </summary>
            <param name="store">The store to provide font resources.</param>
            <param name="assetName">The base name of the font.</param>
            <param name="textureLoader">An optional platform-specific store for loading textures. Should load for the store provided in <param ref="param"/>.</param>
        </member>
        <member name="T:osu.Framework.IO.Stores.IGlyphStore">
            <summary>
            Interface for a <see cref="T:osu.Framework.IO.Stores.IResourceStore`1"/> of <see cref="T:osu.Framework.Text.CharacterGlyph"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Stores.IGlyphStore.FontName">
            <summary>
            The font's full name to be used for lookups.
            </summary>
        </member>
        <member name="P:osu.Framework.IO.Stores.IGlyphStore.Baseline">
            <summary>
            The font's baseline position, or <see langword="null"/> if not available (i.e. font not loaded or failed to load).
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.IGlyphStore.LoadFontAsync">
            <summary>
            Loads glyph information for consumption asynchronously.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.IGlyphStore.HasGlyph(System.Char)">
            <summary>
            Whether a glyph exists for the specified character in this store.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.IGlyphStore.Get(System.Char)">
            <summary>
            Retrieves a <see cref="T:osu.Framework.Text.CharacterGlyph"/> that contains associated spacing information for a character.
            </summary>
            <param name="character">The character to retrieve the <see cref="T:osu.Framework.Text.CharacterGlyph"/> for.</param>
            <returns>The <see cref="T:osu.Framework.Text.CharacterGlyph"/> containing associated spacing information for <paramref name="character"/>.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.IGlyphStore.GetKerning(System.Char,System.Char)">
            <summary>
            Retrieves the kerning for a pair of characters.
            </summary>
            <param name="left">The character to the left.</param>
            <param name="right">The character to the right.</param>
            <returns>The kerning.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.IResourceStore`1.Get(System.String)">
            <summary>
            Retrieves an object from the store.
            </summary>
            <param name="name">The name of the object.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.IResourceStore`1.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an object from the store asynchronously.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.IResourceStore`1.GetAvailableResources">
            <summary>
            Gets a collection of string representations of the resources available in this store.
            </summary>
            <returns>String representations of the resources available.</returns>
        </member>
        <member name="F:osu.Framework.IO.Stores.ResourceStoreExtensions.system_filename_ignore_list">
            <summary>
            List of substrings that indicate a file should generally be ignored as noise
            (usually due to representing no useful data and being autogenerated by the OS).
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStoreExtensions.LogIfNonBackgroundThread``1(osu.Framework.IO.Stores.IResourceStore{``0},System.String)">
            <summary>
            Outputs a message to the log if a resource was not retrieved on a non-background thread.
            </summary>
            <param name="store">The store which the resources was retrieved from.</param>
            <param name="resourceName">The resource retrieved.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStoreExtensions.ExcludeSystemFileNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove common noise filenames generated by OS / host systems.
            </summary>
            <param name="source">A list of filenames.</param>
            <returns>A list of filenames excluding common system files.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.NamespacedResourceStore`1.#ctor(osu.Framework.IO.Stores.IResourceStore{`0},System.String)">
            <summary>
            Initializes a resource store with a single store.
            </summary>
            <param name="store">The store.</param>
            <param name="ns">The namespace to add.</param>
        </member>
        <member name="T:osu.Framework.IO.Stores.RawCachingGlyphStore">
            <summary>
            A glyph store which caches font sprite sheets as raw pixels to disk on first use.
            </summary>
            <remarks>
            This results in memory efficient lookups with good performance on solid state backed devices.
            Consider <see cref="T:osu.Framework.IO.Stores.TimedExpiryGlyphStore"/> if disk IO is limited and memory usage is not an issue.
            </remarks>
        </member>
        <member name="P:osu.Framework.IO.Stores.RawCachingGlyphStore.CacheStorage">
            <summary>
            A storage backing to be used for storing decompressed glyph sheets.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.#ctor">
            <summary>
            Initializes a resource store with no stores.
            </summary>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.#ctor(osu.Framework.IO.Stores.IResourceStore{`0})">
            <summary>
            Initializes a resource store with a single store.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.#ctor(osu.Framework.IO.Stores.IResourceStore{`0}[])">
            <summary>
            Initializes a resource store with a collection of stores.
            </summary>
            <param name="stores">The collection of stores.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.NotifyChanged(System.String)">
            <summary>
            Notifies a bound delegate that the resource has changed.
            </summary>
            <param name="name">The resource that has changed.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.AddStore(osu.Framework.IO.Stores.IResourceStore{`0})">
            <summary>
            Adds a nested resource store to this store.
            </summary>
            <param name="store">The store to add.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.RemoveStore(osu.Framework.IO.Stores.IResourceStore{`0})">
            <summary>
            Removes a store from this store.
            </summary>
            <param name="store">The store to remove.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.Get(System.String)">
            <summary>
            Retrieves an object from the store.
            </summary>
            <param name="name">The name of the object.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.BindReload(System.String,System.Action)">
            <summary>
            Binds a reload function to an object held by the store.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="onReload">The reload function to bind.</param>
        </member>
        <member name="M:osu.Framework.IO.Stores.ResourceStore`1.AddExtension(System.String)">
            <summary>
            Add a file extension to automatically append to any lookups on this store.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Stores.StorageBackedResourceStore">
            <summary>
            A resource store that uses an underlying <see cref="T:osu.Framework.Platform.Storage"/> backing.
            </summary>
        </member>
        <member name="T:osu.Framework.IO.Stores.TimedExpiryGlyphStore">
            <summary>
            A glyph store which caches font sprite sheets in memory temporary, to allow for more efficient retrieval.
            </summary>
            <remarks>
            This store has a higher memory overhead than <see cref="T:osu.Framework.IO.Stores.RawCachingGlyphStore"/>, but better performance and zero disk footprint.
            </remarks>
        </member>
        <member name="T:osu.Framework.IStateful`1">
            <summary>
            An object which has a state and allows external consumers to change the current state.
            </summary>
            <typeparam name="T">Generally an Enum type local to the class implementing this interface.</typeparam>
        </member>
        <member name="E:osu.Framework.IStateful`1.StateChanged">
            <summary>
            Invoked when the state of this <see cref="T:osu.Framework.IStateful`1"/> has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.IStateful`1.State">
            <summary>
            The current state of this object.
            </summary>
        </member>
        <member name="T:osu.Framework.Layout.InvalidationSource">
            <summary>
            Indicates the source of an invalidation of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.InvalidationSource.Self">
            <summary>
            The invalidation originates from the current <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.InvalidationSource.Parent">
            <summary>
            The invalidation originates from a parent in the supertree of the current <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.InvalidationSource.Child">
            <summary>
            The invalidation originates from a child in the subtree of the current <see cref="T:osu.Framework.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.InvalidationSource.Default">
            <summary>
            The default invalidation source. Deconstructs into <see cref="F:osu.Framework.Layout.InvalidationSource.Self"/> <code>or</code> <see cref="F:osu.Framework.Layout.InvalidationSource.Parent"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Layout.LayoutMember">
            <summary>
            A member that represents a part of the layout of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            Can be invalidated according to state changes in a <see cref="T:osu.Framework.Graphics.Drawable"/> (via <see cref="T:osu.Framework.Graphics.Invalidation"/> flags).
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.LayoutMember.Invalidation">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags this <see cref="T:osu.Framework.Layout.LayoutMember"/> responds to.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.LayoutMember.Conditions">
            <summary>
            Any extra conditions that must be satisfied before this <see cref="T:osu.Framework.Layout.LayoutMember"/> is invalidated.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.LayoutMember.Source">
            <summary>
            The source of <see cref="F:osu.Framework.Layout.LayoutMember.Invalidation"/> this <see cref="T:osu.Framework.Layout.LayoutMember"/> responds to.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.LayoutMember.Parent">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> containing this <see cref="T:osu.Framework.Layout.LayoutMember"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Layout.LayoutMember.Next">
            <summary>
            The next <see cref="T:osu.Framework.Layout.LayoutMember"/> in the list for <see cref="F:osu.Framework.Layout.LayoutMember.Parent"/>.
            This is iterated over during invalidation.
            </summary>
        </member>
        <member name="M:osu.Framework.Layout.LayoutMember.#ctor(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource,osu.Framework.Layout.InvalidationConditionDelegate)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Layout.LayoutMember"/>.
            </summary>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags that will invalidate this <see cref="T:osu.Framework.Layout.LayoutMember"/>.</param>
            <param name="source">The source of the invalidation.</param>
            <param name="conditions">Any extra conditions that must be satisfied before this <see cref="T:osu.Framework.Layout.LayoutMember"/> is invalidated.</param>
        </member>
        <member name="P:osu.Framework.Layout.LayoutMember.IsValid">
            <summary>
            Whether this <see cref="T:osu.Framework.Layout.LayoutMember"/> is valid.
            </summary>
        </member>
        <member name="M:osu.Framework.Layout.LayoutMember.Invalidate">
            <summary>
            Invalidates this <see cref="T:osu.Framework.Layout.LayoutMember"/>.
            </summary>
            <returns>Whether any invalidation occurred.</returns>
        </member>
        <member name="M:osu.Framework.Layout.LayoutMember.Validate">
            <summary>
            Validates this <see cref="T:osu.Framework.Layout.LayoutMember"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Layout.InvalidationConditionDelegate">
            <summary>
            The delegate that provides extra conditions for an invalidation to occur.
            </summary>
            <param name="source">The <see cref="T:osu.Framework.Graphics.Drawable"/> to be invalidated.</param>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags.</param>
        </member>
        <member name="T:osu.Framework.Layout.LayoutValue">
            <summary>
            A member that represents the validation state of the layout of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            Can be invalidated according to state changes in a <see cref="T:osu.Framework.Graphics.Drawable"/> (via <see cref="T:osu.Framework.Graphics.Invalidation"/> flags), and validated on-demand when the layout has been re-computed.
            </summary>
        </member>
        <member name="M:osu.Framework.Layout.LayoutValue.#ctor(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource,osu.Framework.Layout.InvalidationConditionDelegate)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Layout.LayoutValue"/>.
            </summary>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags that will invalidate this <see cref="T:osu.Framework.Layout.LayoutValue"/>.</param>
            <param name="source">The source of the invalidation.</param>
            <param name="conditions">Any extra conditions that must be satisfied before this <see cref="T:osu.Framework.Layout.LayoutValue"/> is invalidated.</param>
        </member>
        <member name="M:osu.Framework.Layout.LayoutValue.Validate">
            <summary>
            Validates this <see cref="T:osu.Framework.Layout.LayoutValue"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Layout.LayoutValue`1">
            <summary>
            A member that represents the validation state of a value in the layout of a <see cref="T:osu.Framework.Graphics.Drawable"/>.
            Can be invalidated according to state changes in a <see cref="T:osu.Framework.Graphics.Drawable"/> (via <see cref="T:osu.Framework.Graphics.Invalidation"/> flags), and validated when an up-to-date value is set.
            </summary>
            <typeparam name="T">The type of value stored.</typeparam>
        </member>
        <member name="M:osu.Framework.Layout.LayoutValue`1.#ctor(osu.Framework.Graphics.Invalidation,osu.Framework.Layout.InvalidationSource,osu.Framework.Layout.InvalidationConditionDelegate)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Layout.LayoutValue`1"/>.
            </summary>
            <param name="invalidation">The <see cref="T:osu.Framework.Graphics.Invalidation"/> flags that will invalidate this <see cref="T:osu.Framework.Layout.LayoutValue`1"/>.</param>
            <param name="source">The source of the invalidation.</param>
            <param name="conditions">Any extra conditions that must be satisfied before this <see cref="T:osu.Framework.Layout.LayoutValue`1"/> is invalidated.</param>
        </member>
        <member name="P:osu.Framework.Layout.LayoutValue`1.Value">
            <summary>
            Gets or sets the current value.
            </summary>
            <exception cref="T:System.InvalidOperationException">If accessed while <see cref="P:osu.Framework.Layout.LayoutMember.IsValid"/> is <code>false</code>.</exception>
        </member>
        <member name="T:osu.Framework.Lists.INotifyArrayChanged">
            <summary>
            Provides an event for notifying about array elements changing.
            </summary>
        </member>
        <member name="E:osu.Framework.Lists.INotifyArrayChanged.ArrayElementChanged">
            <summary>
            Invoked when an element of an array is changed.
            </summary>
        </member>
        <member name="T:osu.Framework.Lists.IWeakList`1">
            <summary>
            A slim interface for a list which stores weak references of objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Add(`0)">
            <summary>
            Adds an item to this list. The item is added as a weak reference.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Add(System.WeakReference{`0})">
            <summary>
            Adds a weak reference to this list.
            </summary>
            <param name="weakReference">The weak reference to add.</param>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Remove(`0)">
            <summary>
            Removes an item from this list.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>Whether the item was removed.</returns>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Remove(System.WeakReference{`0})">
            <summary>
            Removes a weak reference from this list.
            </summary>
            <param name="weakReference"></param>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.RemoveAt(System.Int32)">
            <summary>
            Removes an item at an index from this list.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Contains(`0)">
            <summary>
            Searches for an item in the list.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>Whether the item is alive and in this list.</returns>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Contains(System.WeakReference{`0})">
            <summary>
            Searches for a weak reference in the list.
            </summary>
            <param name="weakReference">The weak reference to search for.</param>
            <returns>Whether the weak reference is in the list.</returns>
        </member>
        <member name="M:osu.Framework.Lists.IWeakList`1.Clear">
            <summary>
            Clears all items from this list.
            </summary>
        </member>
        <member name="T:osu.Framework.Lists.LazyList`2">
            <summary>
            A list that lazily applies a transformation to elements of a source list to a target type when its indexed or iterated.
            </summary>
            <typeparam name="TSource">The type of the source elements.</typeparam>
            <typeparam name="TTarget">The type of the target elements.</typeparam>
        </member>
        <member name="P:osu.Framework.Lists.LazyList`2.Item(System.Int32)">
            <summary>
            Gets the element at the specified index from source, applies the transformation to it and returns the transformed element.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The transformed element at the specified index.</returns>
        </member>
        <member name="P:osu.Framework.Lists.LazyList`2.Count">
            <summary>
            The number of elements in this lazy list.
            </summary>
        </member>
        <member name="M:osu.Framework.Lists.LazyList`2.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Func{`0,`1})">
            <summary>
            Constructs a new lazy list from the given source list and with the given transformation.
            </summary>
            <param name="source">The source list to get elements from.</param>
            <param name="map"></param>
        </member>
        <member name="T:osu.Framework.Lists.LockedWeakList`1">
            <summary>
            A <see cref="T:osu.Framework.Lists.IWeakList`1"/> which locks all operations.
            </summary>
        </member>
        <member name="T:osu.Framework.Lists.ObservableArray`1">
            <summary>
            A wrapper for an array that provides notifications when elements are changed.
            </summary>
            <typeparam name="T">The type of elements stored in the array.</typeparam>
        </member>
        <member name="E:osu.Framework.Lists.ObservableArray`1.ArrayElementChanged">
            <summary>
            Invoked when an element of the array is changed via <see cref="P:osu.Framework.Lists.ObservableArray`1.Item(System.Int32)"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Lists.SlimReadOnlyListWrapper`1">
            <summary>
            A wrapper that provides a read-only view into a <see cref="T:System.Collections.Generic.List`1"/>.
            This can be instantiated via the <see cref="M:osu.Framework.Extensions.ListExtensions.ListExtensions.AsSlimReadOnly``1(System.Collections.Generic.List{``0})"/> extension method.
            </summary>
            <typeparam name="T">The type of elements contained by the list.</typeparam>
        </member>
        <member name="M:osu.Framework.Lists.SortedList`1.#ctor">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Lists.SortedList`1"/> with the default <typeparamref name="T"/> comparer.
            </summary>
        </member>
        <member name="M:osu.Framework.Lists.SortedList`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Lists.SortedList`1"/> with a custom comparison function.
            </summary>
            <param name="comparer">The comparison function.</param>
        </member>
        <member name="M:osu.Framework.Lists.SortedList`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Constructs a new <see cref="T:osu.Framework.Lists.SortedList`1"/> with a custom <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:osu.Framework.Lists.SortedList`1.addInternal(`0)">
            <summary>
            Adds the specified item internally without the interference of a possible derived class.
            </summary>
            <param name="value">The item to add.</param>
            <returns>The index of the item within this list.</returns>
        </member>
        <member name="M:osu.Framework.Lists.SortedList`1.Sort">
            <summary>
            Re-sorts this <see cref="T:osu.Framework.Lists.SortedList`1"/> by the comparer.
            </summary>
            <remarks>
            This can be used to re-sort the <see cref="T:osu.Framework.Lists.SortedList`1"/> if the comparer result has changed.
            </remarks>
        </member>
        <member name="T:osu.Framework.Lists.WeakList`1">
            <summary>
            A list maintaining weak reference of objects.
            </summary>
            <typeparam name="T">Type of items tracked by weak reference.</typeparam>
        </member>
        <member name="F:osu.Framework.Lists.WeakList`1.opportunistic_trim_threshold">
            <summary>
            The number of items that can be added or removed from this <see cref="T:osu.Framework.Lists.WeakList`1"/> before the next <see cref="M:osu.Framework.Lists.WeakList`1.Add(`0)"/> to cause the list to be trimmed.
            </summary>
        </member>
        <member name="F:osu.Framework.Lists.WeakList`1.countChangesSinceTrim">
            <summary>
            The number of items that have been added or removed from this <see cref="T:osu.Framework.Lists.WeakList`1"/> since it was last trimmed.
            Upon reaching the <see cref="F:osu.Framework.Lists.WeakList`1.opportunistic_trim_threshold"/>, this list will be trimmed on the next <see cref="M:osu.Framework.Lists.WeakList`1.Add(`0)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Lists.WeakList`1.InvalidatableWeakReference.ObjectHashCode">
            <summary>
            Hash code of the target of <see cref="F:osu.Framework.Lists.WeakList`1.InvalidatableWeakReference.Reference"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Lists.WeakList`1.ValidItemsEnumerator">
            <summary>
            An enumerator over only the valid items of a <see cref="T:osu.Framework.Lists.WeakList`1"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Lists.WeakList`1.ValidItemsEnumerator.#ctor(osu.Framework.Lists.WeakList{`0})">
            <summary>
            Creates a new <see cref="T:osu.Framework.Lists.WeakList`1.ValidItemsEnumerator"/>.
            </summary>
            <param name="weakList">The <see cref="T:osu.Framework.Lists.WeakList`1"/> to enumerate over.</param>
        </member>
        <member name="T:osu.Framework.Localisation.CaseTransformableString">
            <summary>
            A string which can apply case transformations to underlying localisable string.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.CaseTransformableString.Casing">
            <summary>
            The case to apply to the underlying data.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.CaseTransformableString.String">
            <summary>
            The underlying localisable string of this transformable string.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.CaseTransformableString.#ctor(osu.Framework.Localisation.LocalisableString,osu.Framework.Localisation.Casing)">
            <summary>
            Constructs a new transformable string with specified underlying localisable string and casing.
            </summary>
            <param name="str">The localisable string to apply case transformations on.</param>
            <param name="casing">The casing to use on the localisable string.</param>
        </member>
        <member name="T:osu.Framework.Localisation.Casing">
            <summary>
            Case applicable to the underlying localisable string of a <see cref="T:osu.Framework.Localisation.CaseTransformableString"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.Casing.Default">
            <summary>
            Use the string data case.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.Casing.UpperCase">
            <summary>
            Transform the string data to uppercase.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.Casing.TitleCase">
            <summary>
            Transform the string data to title case aka capitalized case
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.Casing.LowerCase">
            <summary>
            Transform the string data to lowercase.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.Casing.SentenceCase">
            <summary>
            Transform the string data to sentence case.
            </summary>
        </member>
        <member name="P:osu.Framework.Localisation.CultureInfoHelper.SystemCulture">
            <summary>
            The system-default <see cref="T:System.Globalization.CultureInfo"/> used for number, date, time and other string formatting.
            </summary>
        </member>
        <member name="P:osu.Framework.Localisation.CultureInfoHelper.SystemUICulture">
            <summary>
            The system-default <see cref="T:System.Globalization.CultureInfo"/> used for app languages/translations.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.CultureInfoHelper.TryGetCultureInfo(System.String,System.Globalization.CultureInfo@)">
            <summary>
            Wrapper around <see cref="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)"/> providing common behaviour and exception handling.
            </summary>
            <param name="name">Name of the culture.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> with the specified <paramref name="name"/>.</param>
            <returns>Whether the culture was successfully retrieved and a is .NET/OS predefined culture.</returns>
        </member>
        <member name="M:osu.Framework.Localisation.CultureInfoHelper.EnumerateParentCultures(System.Globalization.CultureInfo)">
            <summary>
            Enumerates all <see cref="P:System.Globalization.CultureInfo.Parent"/> cultures of this <see cref="T:System.Globalization.CultureInfo"/> (including itself, but excluding <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.CultureInfoHelper.ChangeSystemCulture(System.String,System.String)">
            <summary>
            For use in tests only.
            Temporarily changes <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemCulture"/> and <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemUICulture"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.CultureInfoHelper.ChangeSystemCulture(System.String)">
            <summary>
            For use in tests only.
            Temporarily changes <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemCulture"/> and <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemUICulture"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Localisation.ILocalisableStringData">
            <summary>
            An interface for <see cref="T:osu.Framework.Localisation.LocalisableString"/>'s data.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.ILocalisableStringData.GetLocalised(osu.Framework.Localisation.LocalisationParameters)">
            <summary>
            Gets a localised <see cref="T:System.String"/> using the given localisation store and other required data.
            </summary>
            <param name="parameters">Any parameters that control the localisation method.</param>
        </member>
        <member name="P:osu.Framework.Localisation.ILocalisationStore.EffectiveCulture">
            <summary>
            The <see cref="T:System.Globalization.CultureInfo"/> corresponding to the content of this <see cref="T:osu.Framework.Localisation.ILocalisationStore"/>
            and can be used for formatting numbers etc.
            </summary>
        </member>
        <member name="T:osu.Framework.Localisation.ILocalisedBindableString">
            <summary>
            An <see cref="T:osu.Framework.Bindables.IBindable`1"/> which has its value set depending on the current locale of the <see cref="T:osu.Framework.Localisation.LocalisationManager"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Localisation.ILocalisedBindableString.Text">
            <summary>
            Sets the original, un-localised text.
            </summary>
        </member>
        <member name="T:osu.Framework.Localisation.LocaleMapping">
            <summary>
            Maps a localisation store to a lookup string.
            Used by <see cref="T:osu.Framework.Localisation.LocalisationManager"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocaleMapping.#ctor(osu.Framework.Localisation.ILocalisationStore)">
            <summary>
            Create a locale mapping from a localisation store.
            </summary>
            <param name="store">The store to be used.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocaleMapping.#ctor(System.String,osu.Framework.Localisation.ILocalisationStore)">
            <summary>
            Create a locale mapping with a custom lookup name.
            </summary>
            <param name="name"></param>
            <param name="store">The store to be used.</param>
        </member>
        <member name="T:osu.Framework.Localisation.LocalisableDescriptionAttribute">
            <summary>
            Specifies a <see cref="T:osu.Framework.Localisation.LocalisableString"/>-based description for the target element.
            The description can be retrieved through <see cref="M:osu.Framework.Extensions.ExtensionMethods.GetLocalisableDescription``1(``0)"/>.
            </summary>
            <remarks>
            The C# language specification
            <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/attributes#attribute-parameter-types">
            only permits a limited set of parameter types for attributes,
            </a>
            and as such <see cref="T:osu.Framework.Localisation.LocalisableString"/> instances cannot be passed in directly.
            Therefore usages must pass both the target type in which the <see cref="T:osu.Framework.Localisation.LocalisableString"/> description is declared,
            as well as the name of the member which contains/returns the <see cref="T:osu.Framework.Localisation.LocalisableString"/> (using <see langword="nameof"/> for this is strongly encouraged).
            </remarks>
            <example>
            Assuming the following source class from which the <see cref="T:osu.Framework.Localisation.LocalisableString"/> description should be returned:
            <code>
            class Strings
            {
                public static LocalisableString Example => "example string";
            }
            </code>
            the attribute should be used in the following way:
            <code>
            [LocalisableDescription(typeof(Strings), nameof(Strings.Example))]
            </code>
            </example>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisableDescriptionAttribute.DeclaringType">
            <summary>
            The type declaring the static member providing the localisable description.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisableDescriptionAttribute.Name">
            <summary>
            The name of the static member providing the localisable description.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableDescriptionAttribute.#ctor(System.Type,System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Localisation.LocalisableDescriptionAttribute"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Localisation.LocalisableFormattableString">
            <summary>
            A localisable string with formatting support.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableFormattableString.#ctor(System.FormattableString)">
            <summary>
            Creates a <see cref="T:osu.Framework.Localisation.LocalisableFormattableString"/> with an <see cref="T:System.IFormattable"/> value and a format string.
            </summary>
            <param name="interpolation">The interpolated string containing format and arguments.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableFormattableString.#ctor(System.String,System.Object[])">
            <summary>
            Creates a <see cref="T:osu.Framework.Localisation.LocalisableFormattableString"/> with an <see cref="T:System.IFormattable"/> value and a format string.
            </summary>
            <remarks>
            Note that the <paramref name="args"/> parameter is intentionally not marked with <c>params</c> to avoid taking priority over the <see cref="M:osu.Framework.Localisation.LocalisableFormattableString.#ctor(System.FormattableString)"/> constructor.
            For more information, see https://github.com/dotnet/roslyn/issues/46.
            </remarks>
            <param name="format">The format string.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="T:osu.Framework.Localisation.LocalisableString">
            <summary>
            A descriptor representing text that can be localised and formatted.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisableString.Data">
            <summary>
            The underlying data.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Localisation.LocalisableString"/> with underlying string data.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.#ctor(osu.Framework.Localisation.ILocalisableStringData)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Localisation.LocalisableString"/> with underlying localisable string data.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.Format(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in a specified string with a localised string representation of a corresponding object in <paramref name="args"/>.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.Interpolate(System.FormattableString)">
            <summary>
            Creates a <see cref="T:osu.Framework.Localisation.LocalisableString"/> representation of the specified interpolated string.
            </summary>
            <param name="interpolation">The interpolated string containing format and arguments.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.IsNullOrEmpty(System.Nullable{osu.Framework.Localisation.LocalisableString})">
            <summary>
            Indicates whether the specified <see cref="T:osu.Framework.Localisation.LocalisableString"/> is <see langword="null"/> or an empty <see langword="string"/>.
            </summary>
            <remarks>
            Will always be false for non-<see langword="string"/> data (e.g. <see cref="T:osu.Framework.Localisation.TranslatableString"/>).
            </remarks>
            <param name="value">The <see cref="T:osu.Framework.Localisation.LocalisableString"/> to test.</param>
            <returns><see langword="true"/> if the <paramref name="value"/> parameter is <see langword="null"/> or an empty <see langword="string"/> (&quot;&quot;);
            otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisableString.IsNullOrWhiteSpace(System.Nullable{osu.Framework.Localisation.LocalisableString})">
            <summary>
            Indicates whether the specified <see cref="T:osu.Framework.Localisation.LocalisableString"/> is <see langword="null"/>, an empty <see langword="string"/>,
            or a <see langword="string"/> that consists of only white-space characters.
            </summary>
            <remarks>
            Will always be false for non-<see langword="string"/> data (e.g. <see cref="T:osu.Framework.Localisation.TranslatableString"/>).
            </remarks>
            <param name="value">The <see cref="T:osu.Framework.Localisation.LocalisableString"/> to test.</param>
            <returns><see langword="true"/> if the <paramref name="value"/> parameter is <see langword="null"/>, an empty <see langword="string"/> (&quot;&quot;),
            or a <see langword="string"/> that consists of only white-space characters.</returns>
        </member>
        <member name="T:osu.Framework.Localisation.LocalisableStringEqualityComparer">
            <summary>
            An equality comparer for the <see cref="T:osu.Framework.Localisation.LocalisableString"/> type.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisationManager.firstLocale">
            <summary>
            The first locale added to <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/>.
            Used as the fallback locale if there are no matches.
            </summary>
        </member>
        <member name="P:osu.Framework.Localisation.LocalisationManager.SystemDefaultLocaleMapping">
            <summary>
            The <see cref="T:osu.Framework.Localisation.LocaleMapping"/> that most closely matches the <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemUICulture"/>, or null iff <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/> is empty.
            </summary>
            <remarks>This property is cached.</remarks>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.AddLocaleMappings(System.Collections.Generic.IEnumerable{osu.Framework.Localisation.LocaleMapping})">
            <summary>
            Add multiple locale mappings. Should be used to add all available languages at initialisation.
            </summary>
            <param name="mappings">All available locale mappings.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.AddLanguage(System.String,osu.Framework.Localisation.ILocalisationStore)">
            <summary>
            Add a single language to this manager.
            </summary>
            <remarks>
            Use <see cref="M:osu.Framework.Localisation.LocalisationManager.AddLocaleMappings(System.Collections.Generic.IEnumerable{osu.Framework.Localisation.LocaleMapping})"/> as a more efficient way of bootstrapping all available locales.</remarks>
            <param name="language">The culture name to be added. Generally should match <see cref="P:System.Globalization.CultureInfo.Name"/>.</param>
            <param name="storage">A storage providing localisations for the specified language.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.GetLocalisedString(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Returns the appropriate <see cref="T:System.String"/> value for a <see cref="T:osu.Framework.Localisation.LocalisableString"/> given the currently valid <see cref="T:osu.Framework.Localisation.LocalisationParameters"/>.
            </summary>
            <remarks>
            The returned value is only valid until the next change to <see cref="P:osu.Framework.Localisation.LocalisationManager.CurrentParameters"/>.
            To facilitate tracking changes to the localised value across <see cref="P:osu.Framework.Localisation.LocalisationManager.CurrentParameters"/> changes, use <see cref="M:osu.Framework.Localisation.LocalisationManager.GetLocalisedBindableString(osu.Framework.Localisation.LocalisableString)"/>
            and subscribe to its <see cref="E:osu.Framework.Bindables.Bindable`1.ValueChanged"/> instead.
            </remarks>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.GetLocalisedBindableString(osu.Framework.Localisation.LocalisableString)">
            <summary>
            Creates an <see cref="T:osu.Framework.Localisation.ILocalisedBindableString"/> which automatically updates its text according to information provided in <see cref="P:osu.Framework.Localisation.ILocalisedBindableString.Text"/>.
            </summary>
            <returns>The <see cref="T:osu.Framework.Localisation.ILocalisedBindableString"/>.</returns>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.tryGetLocaleMappingForLocale(System.String,osu.Framework.Localisation.LocaleMapping@)">
            <summary>
            Updates <see cref="F:osu.Framework.Localisation.LocalisationManager.currentParameters"/> to the <paramref name="locale"/> matching one of the <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/>.
            </summary>
            <param name="locale">Current <see cref="F:osu.Framework.Configuration.FrameworkSetting.Locale"/>, can be <see cref="F:System.String.Empty"/> to return <see cref="P:osu.Framework.Localisation.LocalisationManager.SystemDefaultLocaleMapping"/>.</param>
            <param name="localeMapping">If valid, <see cref="T:osu.Framework.Localisation.LocaleMapping"/> with <see cref="F:osu.Framework.Localisation.LocaleMapping.Name"/> equal to <paramref name="locale"/>, or <see cref="P:osu.Framework.Localisation.LocalisationManager.SystemDefaultLocaleMapping"/>.</param>
            <returns><c>true</c> if the requested <paramref name="locale"/> is valid was found in <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/>.</returns>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationManager.getSystemDefaultLocaleMapping">
            <summary>
            Gets the <see cref="T:osu.Framework.Localisation.LocaleMapping"/> from <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/> that most closely matches <see cref="P:osu.Framework.Localisation.CultureInfoHelper.SystemUICulture"/>,
            or <see cref="F:osu.Framework.Localisation.LocalisationManager.firstLocale"/> if none match.
            </summary>
            <returns>A <see cref="T:osu.Framework.Localisation.LocaleMapping"/> from <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/>, or <c>null</c> iff <see cref="F:osu.Framework.Localisation.LocalisationManager.locales"/> is empty.</returns>
        </member>
        <member name="T:osu.Framework.Localisation.LocalisationParameters">
            <summary>
            A set of parameters that control the way strings are localised.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisationParameters.Store">
            <summary>
            The <see cref="T:osu.Framework.Localisation.ILocalisationStore"/> to be used for string lookups and culture-specific formatting.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.LocalisationParameters.PreferOriginalScript">
            <summary>
            Whether to prefer the "original" script of <see cref="T:osu.Framework.Localisation.RomanisableString"/>s.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationParameters.#ctor(osu.Framework.Localisation.LocalisationParameters)">
            <summary>
            Creates a new instance of <see cref="T:osu.Framework.Localisation.LocalisationParameters"/> based off another <see cref="T:osu.Framework.Localisation.LocalisationParameters"/>.
            </summary>
            <param name="parameters">The <see cref="T:osu.Framework.Localisation.LocalisationParameters"/> to copy values from.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationParameters.#ctor(osu.Framework.Localisation.ILocalisationStore,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:osu.Framework.Localisation.LocalisationParameters"/>.
            </summary>
            <param name="store">The <see cref="T:osu.Framework.Localisation.ILocalisationStore"/> to be used for string lookups and culture-specific formatting.</param>
            <param name="preferOriginalScript">Whether to prefer the "original" script of <see cref="T:osu.Framework.Localisation.RomanisableString"/>s.</param>
        </member>
        <member name="M:osu.Framework.Localisation.LocalisationParameters.With(osu.Framework.Localisation.ILocalisationStore,System.Nullable{System.Boolean})">
            <summary>
            Creates new <see cref="T:osu.Framework.Localisation.LocalisationParameters"/> from this <see cref="T:osu.Framework.Localisation.LocalisationParameters"/> with the provided fields changed.
            </summary>
            <returns>New <see cref="T:osu.Framework.Localisation.LocalisationParameters"/> based on this <see cref="T:osu.Framework.Localisation.LocalisationParameters"/>.</returns>
        </member>
        <member name="T:osu.Framework.Localisation.RomanisableString">
            <summary>
            A string that has a romanised fallback to allow a better experience for users that potentially can't read the original script.
            See <see cref="F:osu.Framework.Configuration.FrameworkSetting.ShowUnicode"/>, which can toggle the display of romanised variants.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.RomanisableString.Original">
            <summary>
            The string in its original script. May be null.
            </summary>
        </member>
        <member name="F:osu.Framework.Localisation.RomanisableString.Romanised">
            <summary>
            The romanised version of the string. May be null.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.RomanisableString.#ctor(System.String,System.String)">
            <summary>
            Construct a new romanisable string.
            </summary>
            <remarks>
            For flexibility, both of the provided strings are allowed to be null. If both are null, the returned string value from <see cref="M:osu.Framework.Localisation.RomanisableString.GetLocalised(osu.Framework.Localisation.LocalisationParameters)"/> will be <see cref="F:System.String.Empty"/>.
            </remarks>
            <param name="original">The string in its original script. If null, the <paramref name="romanised"/> version will always be used.</param>
            <param name="romanised">The romanised version of the string. If null, the <paramref name="original"/> version will always be used.</param>
        </member>
        <member name="M:osu.Framework.Localisation.RomanisableString.GetPreferred(System.Boolean)">
            <summary>
            Get the best match for this string based on a user preference for which should be displayed.
            </summary>
            <param name="preferUnicode">Whether to prefer the unicode (aka original) version where available.</param>
            <returns>The best match for the provided criteria.</returns>
        </member>
        <member name="T:osu.Framework.Localisation.TranslatableString">
            <summary>
            A string which can be translated using a key lookup.
            </summary>
        </member>
        <member name="M:osu.Framework.Localisation.TranslatableString.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Creates a <see cref="T:osu.Framework.Localisation.TranslatableString"/> using texts.
            </summary>
            <param name="key">The key for <see cref="T:osu.Framework.Localisation.LocalisationManager"/> to look up with.</param>
            <param name="fallback">The fallback string to use when no translation can be found.</param>
            <param name="args">Optional formattable arguments.</param>
        </member>
        <member name="M:osu.Framework.Localisation.TranslatableString.#ctor(System.String,System.FormattableString)">
            <summary>
            Creates a <see cref="T:osu.Framework.Localisation.TranslatableString"/> using interpolated string.
            Example usage:
            <code>
            new TranslatableString("played_count_self", $"You have played {count:N0} times!");
            </code>
            </summary>
            <param name="key">The key for <see cref="T:osu.Framework.Localisation.LocalisationManager"/> to look up with.</param>
            <param name="interpolation">The interpolated string containing fallback and formattable arguments.</param>
        </member>
        <member name="T:osu.Framework.Logging.Logger">
            <summary>
            This class allows statically (globally) configuring and using logging functionality.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.flush_sync_lock">
            <summary>
            Separate locking object for flushing so that we don't lock too long on the staticSyncLock object, since we have to
            hold this lock for the entire duration of the flush (waiting for I/O etc) before we can resume scheduling logs
            but other operations like GetLogger(), ApplyFilters() etc. can still be executed while a flush is happening.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.session_startup_timestamp">
            <summary>
            Logs are stored with a consistent unix timestamp prefix per session (across all loggers) for logical grouping of
            log files on disk.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.Enabled">
            <summary>
            Whether logging is enabled. Setting this to false will disable all logging.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.Level">
            <summary>
            The minimum log-level a logged message needs to have to be logged. Default is <see cref="F:osu.Framework.Logging.LogLevel.Verbose"/>. Please note that setting this to <see cref="F:osu.Framework.Logging.LogLevel.Debug"/>  will log input events, including keypresses when entering a password.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.GameIdentifier">
            <summary>
            An identifier for the game written to log file headers to indicate where the log file came from.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.Logger.VersionIdentifier">
            <summary>
            An identifier for the version written to log file headers to indicate where the log file came from.
            </summary>
        </member>
        <member name="P:osu.Framework.Logging.Logger.Storage">
            <summary>
            The storage to place logs inside.
            </summary>
        </member>
        <member name="P:osu.Framework.Logging.Logger.Target">
            <summary>
            The target for which this logger logs information. This will only be null if the logger has a name.
            </summary>
        </member>
        <member name="P:osu.Framework.Logging.Logger.Name">
            <summary>
            The name of the logger.
            </summary>
        </member>
        <member name="P:osu.Framework.Logging.Logger.Filename">
            <summary>
            Gets the name of the file that this logger is logging to.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.Logger.AddFilteredText(System.String)">
            <summary>
            Add a plain-text phrase which should always be filtered from logs. The filtered phrase will be replaced with asterisks (*).
            Useful for avoiding logging of credentials.
            See also <seealso cref="M:osu.Framework.Logging.Logger.ApplyFilters(System.String)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.Logger.ApplyFilters(System.String)">
            <summary>
            Removes phrases which should be filtered from logs.
            Useful for avoiding logging of credentials.
            See also <seealso cref="M:osu.Framework.Logging.Logger.AddFilteredText(System.String)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Error(System.Exception,System.String,osu.Framework.Logging.LoggingTarget,System.Boolean)">
            <summary>
            Logs the given exception with the given description to the specified logging target.
            </summary>
            <param name="e">The exception that should be logged.</param>
            <param name="description">The description of the error that should be logged with the exception.</param>
            <param name="target">The logging target (file).</param>
            <param name="recursive">Whether the inner exceptions of the given exception <paramref name="e"/> should be logged recursively.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Error(System.Exception,System.String,System.String,System.Boolean)">
            <summary>
            Logs the given exception with the given description to the logger with the given name.
            </summary>
            <param name="e">The exception that should be logged.</param>
            <param name="description">The description of the error that should be logged with the exception.</param>
            <param name="name">The logger name (file).</param>
            <param name="recursive">Whether the inner exceptions of the given exception <paramref name="e"/> should be logged recursively.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Log(System.String,osu.Framework.Logging.LoggingTarget,osu.Framework.Logging.LogLevel,System.Boolean)">
            <summary>
            Log an arbitrary string to the specified logging target.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="target">The logging target (file).</param>
            <param name="level">The verbosity level.</param>
            <param name="outputToListeners">Whether the message should be sent to listeners of <see cref="M:osu.Framework.Logging.Logger.Debug(System.String)"/> and <see cref="T:System.Console"/>. True by default.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Log(System.String,System.String,osu.Framework.Logging.LogLevel,System.Boolean)">
            <summary>
            Log an arbitrary string to the logger with the given name.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="name">The logger name (file).</param>
            <param name="level">The verbosity level.</param>
            <param name="outputToListeners">Whether the message should be sent to listeners of <see cref="M:osu.Framework.Logging.Logger.Debug(System.String)"/> and <see cref="T:System.Console"/>. True by default.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.LogPrint(System.String,osu.Framework.Logging.LoggingTarget,osu.Framework.Logging.LogLevel)">
            <summary>
            Logs a message to the specified logging target and also displays a print statement.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="target">The logging target (file).</param>
            <param name="level">The verbosity level.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.LogPrint(System.String,System.String,osu.Framework.Logging.LogLevel)">
            <summary>
            Logs a message to the logger with the given name and also displays a print statement.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="name">The logger name (file).</param>
            <param name="level">The verbosity level.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.GetLogger(osu.Framework.Logging.LoggingTarget)">
            <summary>
            For classes that regularly log to the same target, this method may be preferred over the static Log method.
            </summary>
            <param name="target">The logging target.</param>
            <returns>The logger responsible for the given logging target.</returns>
        </member>
        <member name="M:osu.Framework.Logging.Logger.GetLogger(System.String)">
            <summary>
            For classes that regularly log to the same target, this method may be preferred over the static Log method.
            </summary>
            <param name="name">The name of the custom logger.</param>
            <returns>The logger responsible for the given logging target.</returns>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Debug(System.String)">
            <summary>
            Logs a new message with the <see cref="F:osu.Framework.Logging.LogLevel.Debug"/> and will only be logged if your project is built in the Debug configuration. Please note that the default setting for <see cref="F:osu.Framework.Logging.Logger.Level"/> is <see cref="F:osu.Framework.Logging.LogLevel.Verbose"/> so unless you increase the <see cref="F:osu.Framework.Logging.Logger.Level"/> to <see cref="F:osu.Framework.Logging.LogLevel.Debug"/> messages printed with this method will not appear in the output.
            </summary>
            <param name="message">The message that should be logged.</param>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Add(System.String,osu.Framework.Logging.LogLevel,System.Exception,System.Boolean)">
            <summary>
            Log an arbitrary string to current log.
            </summary>
            <param name="message">The message to log. Can include newline (\n) characters to split into multiple lines.</param>
            <param name="level">The verbosity level.</param>
            <param name="exception">An optional related exception.</param>
            <param name="outputToListeners">Whether the message should be sent to listeners of <see cref="M:osu.Framework.Logging.Logger.Debug(System.String)"/> and <see cref="T:System.Console"/>. True by default.</param>
        </member>
        <member name="P:osu.Framework.Logging.Logger.OutputToListeners">
            <summary>
            Whether the output of this logger should be sent to listeners of <see cref="M:osu.Framework.Logging.Logger.Debug(System.String)"/> and <see cref="T:System.Console"/>.
            Defaults to true.
            </summary>
        </member>
        <member name="E:osu.Framework.Logging.Logger.NewEntry">
            <summary>
            Fires whenever any logger tries to log a new entry, but before the entry is actually written to the logfile.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.Logger.Flush">
            <summary>
            Pause execution until all logger writes have completed and file handles have been closed.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.Logger.FlushForShutdown">
            <summary>
            Perform a <see cref="M:osu.Framework.Logging.Logger.Flush"/> and unbind all events in preparation for game host shutdown.
            </summary>
        </member>
        <member name="T:osu.Framework.Logging.LogEntry">
            <summary>
            Captures information about a logged message.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogEntry.Level">
            <summary>
            The level for which the message was logged.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogEntry.Target">
            <summary>
            The target to which this message is being logged, or null if it is being logged to a custom named logger.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogEntry.LoggerName">
            <summary>
            The name of the logger to which this message is being logged, or null if it is being logged to a specific <see cref="T:osu.Framework.Logging.LoggingTarget"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogEntry.Message">
            <summary>
            The message that was logged.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogEntry.Exception">
            <summary>
            An optional related exception.
            </summary>
        </member>
        <member name="T:osu.Framework.Logging.LogLevel">
            <summary>
            The level on which a log-message is logged.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogLevel.Debug">
            <summary>
            Log-level for debugging-related log-messages. This is the lowest level (highest verbosity). Please note that this will log input events, including keypresses when entering a password.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogLevel.Verbose">
            <summary>
            Log-level for most log-messages. This is the second-lowest level (second-highest verbosity).
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogLevel.Important">
            <summary>
            Log-level for important log-messages. This is the second-highest level (second-lowest verbosity).
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LogLevel.Error">
            <summary>
            Log-level for error messages. This is the highest level (lowest verbosity).
            </summary>
        </member>
        <member name="T:osu.Framework.Logging.LoggingTarget">
            <summary>
            The target for logging. Different targets can have different logfiles, are displayed differently in the LogOverlay and are generally useful for organizing logs into groups.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Information">
            <summary>
            Logging target for general information. Everything logged with this target will not be written to a logfile.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Runtime">
            <summary>
            Logging target for information about the runtime.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Network">
            <summary>
            Logging target for network-related events.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Performance">
            <summary>
            Logging target for performance-related information.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Database">
            <summary>
            Logging target for database-related events.
            </summary>
        </member>
        <member name="F:osu.Framework.Logging.LoggingTarget.Input">
            <summary>
            Logging target for input-related information.
            </summary>
        </member>
        <member name="T:osu.Framework.Logging.RollingTime">
            <summary>
            Keep track of a finite list of timed events for the purpose of rate limiting.
            </summary>
        </member>
        <member name="M:osu.Framework.Logging.RollingTime.#ctor(System.Int32,System.Int32)">
            <summary>
            Make a new object that keeps track of time for a number of events.
            </summary>
            <param name="size">The number of events to track.</param>
            <param name="span">The time over which the number of events is governed.</param>
        </member>
        <member name="T:osu.Framework.Logging.ThrowingTraceListener">
            <summary>
            A <see cref="T:System.Diagnostics.TraceListener"/> that throws exceptions when a trace is hit.
            This allows consistent behaviour across runtimes (ie. under Mono where no winforms dialog is displayed on encountering an exception).
            </summary>
        </member>
        <member name="T:osu.Framework.Physics.IRigidBody">
            <summary>
            Contains physical state and methods necessary for rigid body simulation.
            </summary>
        </member>
        <member name="P:osu.Framework.Physics.IRigidBody.Simulation">
            <summary>
            The <see cref="T:osu.Framework.Graphics.Drawable"/> which is currently performing a simulation on this <see cref="T:osu.Framework.Physics.IRigidBody"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Physics.IRigidBody.Restitution">
            <summary>
            Controls how elastic the material is. A value of 1 means perfect elasticity
            (kinetic energy is fully preserved). A value of 0 means all energy is absorbed
            on collision, i.e. no rebound occurs at all.
            </summary>
        </member>
        <member name="P:osu.Framework.Physics.IRigidBody.FrictionCoefficient">
            <summary>
            How much friction happens between objects.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.VelocityAt(osuTK.Vector2)">
            <summary>
            Total velocity at a given location. Includes angular velocity.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.ApplyImpulse(osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Applies a given impulse attacking at a given position.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.CheckAndHandleCollisionWith(osu.Framework.Physics.IRigidBody)">
            <summary>
            Checks for and records all collisions with another body. If collisions were found,
            their aggregate is handled.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.Integrate(osuTK.Vector2,System.Single,System.Single)">
            <summary>
            Performs an integration step over time. More precisely, updates the
            physical state as dependent on time according to the forces and torques
            acting on this body.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.ReadState">
            <summary>
            Reads the positional and rotational state of this rigid body from its source.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.ApplyState">
            <summary>
            Applies the positional and rotational state of this rigid body to its source.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.IRigidBody.BodyContains(osuTK.Vector2)">
            <summary>
            Whether the given screen-space position is contained within the rigid body.
            </summary>
        </member>
        <member name="T:osu.Framework.Physics.RigidBodyExtensions">
            <summary>
            Helper extension methods operating on <see cref="T:osu.Framework.Physics.IRigidBody"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyExtensions.ImpulseDenominator(osu.Framework.Physics.IRigidBody,osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Helper function for code brevity in <see cref="M:osu.Framework.Physics.RigidBodyExtensions.ComputeImpulse(osu.Framework.Physics.IRigidBody,osu.Framework.Physics.IRigidBody,osuTK.Vector2,osuTK.Vector2)"/>.
            Can be moved into the function as a nested method once C# 7 is out.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyExtensions.ComputeImpulse(osu.Framework.Physics.IRigidBody,osu.Framework.Physics.IRigidBody,osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Computes the impulse of a collision of 2 rigid bodies, given the other body, the impact position,
            and the surface normal of this body at the impact position.
            </summary>
        </member>
        <member name="T:osu.Framework.Physics.RigidBodyContainer`1">
            <summary>
            Contains physical state and methods necessary for rigid body simulation.
            </summary>
        </member>
        <member name="P:osu.Framework.Physics.RigidBodyContainer`1.Restitution">
            <summary>
            Controls how elastic the material is. A value of 1 means perfect elasticity
            (kinetic energy is fully preserved). A value of 0 means all energy is absorbed
            on collision, i.e. no rebound occurs at all.
            </summary>
        </member>
        <member name="P:osu.Framework.Physics.RigidBodyContainer`1.FrictionCoefficient">
            <summary>
            How much friction happens between objects.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.VelocityAt(osuTK.Vector2)">
            <summary>
            Total velocity at a given location. Includes angular velocity.
            </summary>
        </member>
        <member name="F:osu.Framework.Physics.RigidBodyContainer`1.Vertices">
            <summary>
            Contains discrete positions on the surface of this shape used for collision detection.
            In the future this can be potentially replaced by closed-form solutions.
            </summary>
        </member>
        <member name="F:osu.Framework.Physics.RigidBodyContainer`1.Normals">
            <summary>
            Normals corresponding to the positions inside <see cref="F:osu.Framework.Physics.RigidBodyContainer`1.Vertices"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.ComputeI">
            <summary>
            Computes the moment of inertia.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.UpdateVertices">
            <summary>
            Populates <see cref="F:osu.Framework.Physics.RigidBodyContainer`1.Vertices"/> and <see cref="F:osu.Framework.Physics.RigidBodyContainer`1.Normals"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.ApplyImpulse(osuTK.Vector2,osuTK.Vector2)">
            <summary>
            Applies a given impulse attacking at a given position.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.CheckAndHandleCollisionWith(osu.Framework.Physics.IRigidBody)">
            <summary>
            Checks for and records all collisions with another body. If collisions were found,
            their aggregate is handled.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.Integrate(osuTK.Vector2,System.Single,System.Single)">
            <summary>
            Performs an integration step over time. More precisely, updates the
            physical state as dependent on time according to the forces and torques
            acting on this body.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.ReadState">
            <summary>
            Reads the positional and rotational state of this rigid body from its source.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.ApplyState">
            <summary>
            Applies the positional and rotational state of this rigid body to its source.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodyContainer`1.BodyContains(osuTK.Vector2)">
            <summary>
            Whether the given screen-space position is contained within the rigid body.
            </summary>
        </member>
        <member name="T:osu.Framework.Physics.RigidBodySimulation">
            <summary>
            Applies rigid body simulation to all children.
            </summary>
        </member>
        <member name="T:osu.Framework.Physics.RigidBodySimulation`1">
            <summary>
            Applies rigid body simulation to all children.
            </summary>
        </member>
        <member name="F:osu.Framework.Physics.RigidBodySimulation`1.SimulationSpeed">
            <summary>
            The relative speed at which the simulation runs. A value of 1 means it runs as fast
            as the rest of the game.
            </summary>
        </member>
        <member name="F:osu.Framework.Physics.RigidBodySimulation`1.Gravity">
            <summary>
            The downward acceleration to apply on all children.
            </summary>
        </member>
        <member name="M:osu.Framework.Physics.RigidBodySimulation`1.integrate(System.Single)">
            <summary>
            Advances the simulation by a time step.
            </summary>
            <param name="dt">The time step to advance the simulation by.</param>
        </member>
        <member name="T:osu.Framework.Platform.Clipboard">
            <summary>
            This class allows placing and retrieving data from the clipboard
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Clipboard.GetText">
            <summary>
            Retrieve text from the clipboard.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Clipboard.SetText(System.String)">
            <summary>
            Copy text to the clipboard.
            </summary>
            <param name="text">Text to copy to the clipboard</param>
        </member>
        <member name="M:osu.Framework.Platform.Clipboard.GetImage``1">
            <summary>
            Retrieve an image from the clipboard.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Clipboard.SetImage(SixLabors.ImageSharp.Image)">
            <summary>
            Copy the image to the clipboard.
            </summary>
            <param name="image">The image to copy to the clipboard</param>
            <returns>Whether the image was successfully copied or not</returns>
        </member>
        <member name="T:osu.Framework.Platform.CursorState">
            <summary>
            Describes our supported states of the OS cursor.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.CursorState.Default">
            <summary>
            The OS cursor is always visible and can move anywhere.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.CursorState.Hidden">
            <summary>
            The OS cursor is hidden while hovering the <see cref="T:osu.Framework.Platform.IWindow"/>, but can still move anywhere.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.CursorState.Confined">
            <summary>
            The OS cursor is confined to the <see cref="T:osu.Framework.Platform.IWindow"/> while the window is in focus.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.CursorState.HiddenAndConfined">
            <summary>
            The OS cursor is hidden while hovering the <see cref="T:osu.Framework.Platform.IWindow"/>.
            It is confined to the <see cref="T:osu.Framework.Platform.IWindow"/> while the window is in focus and can move freely otherwise.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Display">
            <summary>
            Represents a physical display device on the current system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.Display.Name">
            <summary>
            The name of the display, if available. Usually the manufacturer.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.Display.Bounds">
            <summary>
            The current rectangle of the display in screen space.
            Non-zero X and Y values represent a non-primary monitor, and indicate its position
            relative to the primary monitor.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.Display.DisplayModes">
            <summary>
            The available <see cref="T:osu.Framework.Platform.DisplayMode"/>s on this display, or empty if the display mode cannot be configured (e.g. mobile displays).
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.Display.Index">
            <summary>
            The zero-based index of the <see cref="T:osu.Framework.Platform.Display"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Display.FindDisplayMode(System.Drawing.Size,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Attempts to find a <see cref="T:osu.Framework.Platform.DisplayMode"/> for the given <see cref="T:osu.Framework.Platform.Display"/> that
            closely matches the requested parameters.
            </summary>
            <param name="size">The <see cref="T:System.Drawing.Size"/> to match.</param>
            <param name="bitsPerPixel">The bits per pixel to match. If null, the highest available bits per pixel will be used.</param>
            <param name="refreshRate">The refresh rate in hertz. If null, the highest available refresh rate will be used.</param>
        </member>
        <member name="T:osu.Framework.Platform.DisplayMode">
            <summary>
            Represents a display mode on a given <see cref="T:osu.Framework.Platform.Display"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.DisplayMode.Format">
            <summary>
            The pixel format of the display mode, if available.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.DisplayMode.Size">
            <summary>
            The dimensions of the screen resolution in pixels.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.DisplayMode.BitsPerPixel">
            <summary>
            The number of bits that represent the colour value for each pixel.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.DisplayMode.RefreshRate">
            <summary>
            The refresh rate in hertz.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.DisplayMode.DisplayIndex">
            <summary>
            The index of the display this mode belongs to as determined by the windowing backend.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.FlushingStream">
            <summary>
            A <see cref="T:System.IO.FileStream"/> which always flushes to disk on disposal.
            </summary>
            <remarks>
            This adds a considerable overhead, but is required to avoid files being potentially written to disk in a corrupt state.
            See https://stackoverflow.com/questions/49260358/what-could-cause-an-xml-file-to-be-filled-with-null-characters/52751216#52751216.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.RequireWindowExists">
            <summary>
            Whether <see cref="P:osu.Framework.Platform.GameHost.Window"/> needs to be non-null for startup to succeed.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.AllowBenchmarkUnlimitedFrames">
            <summary>
            Whether "unlimited" frame limiter should be allowed to exceed sane limits.
            Only use this for benchmarking purposes (see <see cref="F:osu.Framework.Platform.GameHost.maximum_sane_fps"/> for further reasoning).
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GameHost.IsActive">
            <summary>
            Whether the <see cref="T:osu.Framework.Platform.IWindow"/> is active (in the foreground).
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GameHost.AllowScreenSuspension">
            <summary>
            Disable any system level timers that might dim or turn off the screen.
            </summary>
            <remarks>
            To preserve battery life on mobile devices, this should be left on whenever possible.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.IsPrimaryInstance">
            <summary>
            For IPC messaging purposes, whether this <see cref="T:osu.Framework.Platform.GameHost"/> is the primary (bound) host.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.GameHost.Activated">
            <summary>
            Invoked when the game window is activated. Always invoked from the update thread.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.GameHost.Deactivated">
            <summary>
            Invoked when the game window is deactivated. Always invoked from the update thread.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.GameHost.ExitRequested">
            <summary>
            Invoked when an exit was requested. Always invoked from the update thread.
            </summary>
            <remarks>
            Usually invoked when the window close (X) button or another platform-native exit action has been pressed.
            </remarks>
        </member>
        <member name="E:osu.Framework.Platform.GameHost.ExceptionThrown">
            <summary>
            An unhandled exception was thrown. Return true to ignore and continue running.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.OnScreenKeyboardOverlapsGameWindow">
            <summary>
            Whether the on screen keyboard covers a portion of the game window when presented to the user.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.CanExit">
            <summary>
            Whether this host can exit (mobile platforms, for instance, do not support exiting the app).
            </summary>
            <remarks>Also see <see cref="P:osu.Framework.Platform.GameHost.CanSuspendToBackground"/>.</remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.CanSuspendToBackground">
            <summary>
            Whether this host can suspend and minimize to background.
            </summary>
            <remarks>
            This and <see cref="M:osu.Framework.Platform.GameHost.SuspendToBackground"/> are an alternative way to exit on hosts that have <see cref="P:osu.Framework.Platform.GameHost.CanExit"/> <c>false</c>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.OpenFileExternally(System.String)">
            <summary>
            Requests that a file be opened externally with an associated application, if available.
            </summary>
            <remarks>
            Some platforms do not support interacting with files externally (ie. mobile or sandboxed platforms), check the return value as to whether it succeeded.
            </remarks>
            <param name="filename">The absolute path to the file which should be opened.</param>
            <returns>Whether the file was successfully opened.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.PresentFileExternally(System.String)">
            <summary>
            Requests to present a file externally in the platform's native file browser.
            </summary>
            <remarks>
            This will open the parent folder and, (if available) highlight the file.
            Some platforms do not support interacting with files externally (ie. mobile or sandboxed platforms), check the return value as to whether it succeeded.
            </remarks>
            <example>
                <para>"C:\Windows\explorer.exe" -> opens 'C:\Windows' and highlights 'explorer.exe' in the window.</para>
                <para>"C:\Windows\System32" -> opens 'C:\Windows' and highlights 'System32' in the window.</para>
                <para>"C:\Windows\System32\" -> opens 'C:\Windows\System32' and highlights nothing.</para>
            </example>
            <param name="filename">The absolute path to the file/folder to be shown in its parent folder.</param>
            <returns>Whether the file was successfully presented.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.OpenUrlExternally(System.String)">
            <summary>
            Requests that a URL be opened externally in a web browser, if available.
            </summary>
            <param name="url">The URL of the page which should be opened.</param>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.CreateWindow(osu.Framework.Platform.GraphicsSurfaceType)">
            <summary>
            Creates the game window for the host.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.InitialFileSelectorPath">
            <summary>
            The default initial path when requesting a user to select a file/folder.
            </summary>
            <remarks>
            Provides a sane starting point for user-accessible storage.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.GetStorage(System.String)">
            <summary>
            Retrieve a storage for the specified location.
            </summary>
            <param name="path">The absolute path to be used as a root for the storage.</param>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.UserStoragePaths">
            <summary>
            All valid user storage paths in order of usage priority.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.Storage">
            <summary>
            The main storage as proposed by the host game.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.CacheStorage">
            <summary>
            An auxiliary cache storage which is fixed in the default game directory.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.CapsLockEnabled">
            <summary>
            If caps-lock is enabled on the system, false if not overwritten by a subclass
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.RegisterThread(osu.Framework.Threading.GameThread)">
            <summary>
            Register a thread to be monitored and tracked by this <see cref="T:osu.Framework.Platform.GameHost"/>
            </summary>
            <param name="thread">The thread.</param>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.UnregisterThread(osu.Framework.Threading.GameThread)">
            <summary>
            Unregister a previously registered thread.<see cref="T:osu.Framework.Platform.GameHost"/>
            </summary>
            <param name="thread">The thread.</param>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.MaximumUpdateHz">
            <summary>
            The target number of update frames per second when the game window is active.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.MaximumDrawHz">
            <summary>
            The target number of draw frames per second when the game window is active.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.MaximumInactiveHz">
            <summary>
            The target number of updates per second when the game window is inactive.
            This is applied to all threads.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.Name">
            <summary>
            The name of the game to be hosted.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.Collect">
            <summary>
            Performs a GC collection and frees all framework caches.
            This is a blocking call and should not be invoked during periods of user activity unless memory is critical.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.abortExecutionFromException(System.Object,System.Exception,System.Boolean)">
            <summary>
            Give the running application a last change to handle an otherwise unhandled exception, and potentially ignore it.
            </summary>
            <param name="sender">The source, generally a <see cref="T:osu.Framework.Threading.GameThread"/>.</param>
            <param name="exception">The unhandled exception.</param>
            <param name="isTerminating">Whether the CLR is terminating.</param>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.Swap">
            <summary>
            Swap the buffers.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.TakeScreenshotAsync">
            <summary>
            Takes a screenshot of the game. The returned <see cref="T:SixLabors.ImageSharp.Image`1"/> must be disposed by the caller when applicable.
            </summary>
            <returns>The screenshot as an <see cref="T:SixLabors.ImageSharp.Image`1"/>.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.Exit">
            <summary>
            Schedules the game to exit in the next frame.
            </summary>
            <remarks>Consider using <see cref="M:osu.Framework.Platform.GameHost.SuspendToBackground"/> on mobile platforms that can't exit normally.</remarks>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.SuspendToBackground">
            <summary>
            Suspends and minimizes the game to background.
            </summary>
            <remarks>
            This is provided as an alternative to <see cref="M:osu.Framework.Platform.GameHost.Exit"/> on hosts that can't exit (see <see cref="P:osu.Framework.Platform.GameHost.CanExit"/>).
            Should only be called if <see cref="P:osu.Framework.Platform.GameHost.CanSuspendToBackground"/> is <c>true</c>.
            </remarks>
            <returns><c>true</c> if the game was successfully suspended and minimized.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.PerformExit(System.Boolean)">
            <summary>
            Schedules the game to exit in the next frame (or immediately if <paramref name="immediately"/> is true).
            </summary>
            <remarks>
            Will never be called if <see cref="P:osu.Framework.Platform.GameHost.CanExit"/> is <see langword="false"/>.
            </remarks>
            <param name="immediately">If true, exits the game immediately.  If false (default), schedules the game to exit in the next frame.</param>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.ResolvedRenderer">
            <summary>
            The renderer which the game host is currently running with.
            </summary>
            <remarks>
            This is similar to <see cref="P:osu.Framework.Platform.IGraphicsSurface.Type"/> except that this is expressed as a <see cref="T:osu.Framework.Configuration.RendererType"/> rather than a <see cref="T:osu.Framework.Platform.GraphicsSurfaceType"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.GetPreferredRenderersForCurrentPlatform">
            <summary>
            All valid <see cref="T:osu.Framework.Configuration.RendererType"/>s for the current platform, in order of how stable and performant they are deemed to be.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.GetDefaultGameStorage">
            <summary>
            Finds the default <see cref="P:osu.Framework.Platform.GameHost.Storage"/> for the game to be used if <see cref="M:osu.Framework.Game.CreateStorage(osu.Framework.Platform.GameHost,osu.Framework.Platform.Storage)"/> is not overridden.
            </summary>
            <returns>The <see cref="P:osu.Framework.Platform.GameHost.Storage"/>.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.Suspend">
            <summary>
            Pauses all active threads. Call <see cref="M:osu.Framework.Platform.GameHost.Resume"/> to resume execution.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.Resume">
            <summary>
            Resumes all of the current paused threads after <see cref="M:osu.Framework.Platform.GameHost.Suspend"/> was called.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.SetupForRun">
            <summary>
            Prepare this game host for <see cref="M:osu.Framework.Platform.GameHost.Run(osu.Framework.Game)"/>.
            <remarks>
            <see cref="P:osu.Framework.Platform.GameHost.Storage"/> is available here.
            </remarks>
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.ResetInputHandlers">
            <summary>
            Reset all input handlers' settings to a default state.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.SceneGraphClock">
            <summary>
            The clock which is to be used by the scene graph (will be assigned to <see cref="F:osu.Framework.Platform.GameHost.Root"/>).
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GameHost.maximum_sane_fps">
             <summary>
             Games using osu!framework can generally run at *very* high frame rates when not much is going on.
            
             This can be counter-productive due to the induced allocation and GPU overhead.
             - Allocation overhead can lead to excess garbage collection
             - GPU overhead can lead to unexpected pipeline blocking (and stutters as a result).
               Also, in general graphics card manufacturers do not test their hardware at insane frame rates and
               therefore drivers are not optimised to handle this kind of throughput.
             - We only harvest input at 1000hz, so running any higher has zero benefits.
            
             We limit things to the same rate we poll input at, to keep both gamers and their systems happy
             and (more) stutter-free.
             </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.CreateAvailableInputHandlers">
            <summary>
            Construct all input handlers for this host. The order here decides the priority given to handlers, with the earliest occurring having higher priority.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.GameHost.PlatformKeyBindings">
            <summary>
            Defines the platform-specific key bindings that will be used by <see cref="T:osu.Framework.Input.PlatformActionContainer"/>.
            Should be overridden per-platform to provide native key bindings.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.CreateTextureLoaderStore(osu.Framework.IO.Stores.IResourceStore{System.Byte[]})">
            <summary>
            Create a texture loader store based on an underlying data store.
            </summary>
            <param name="underlyingStore">The underlying provider of texture data (in arbitrary image formats).</param>
            <returns>A texture loader store.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.CreateVideoDecoder(System.IO.Stream)">
            <summary>
            Create a <see cref="T:osu.Framework.Graphics.Video.VideoDecoder"/> with the given stream. May be overridden by platforms that require a different
            decoder implementation.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to decode.</param>
            <returns>An instance of <see cref="T:osu.Framework.Graphics.Video.VideoDecoder"/> initialised with the given stream.</returns>
        </member>
        <member name="M:osu.Framework.Platform.GameHost.CreateThreadRunner(osu.Framework.Threading.InputThread)">
            <summary>
            Creates the <see cref="T:osu.Framework.Platform.ThreadRunner"/> to run the threads of this <see cref="T:osu.Framework.Platform.GameHost"/>.
            </summary>
            <param name="mainThread">The main thread.</param>
            <returns>The <see cref="T:osu.Framework.Platform.ThreadRunner"/>.</returns>
        </member>
        <member name="T:osu.Framework.Platform.ExecutionState">
            <summary>
            The game's execution states. All of these states can only be present once per <see cref="T:osu.Framework.Platform.GameHost"/>.
            Note: The order of values in this enum matters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.ExecutionState.Idle">
            <summary>
            <see cref="M:osu.Framework.Platform.GameHost.Run(osu.Framework.Game)"/> has not been invoked yet.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.ExecutionState.Stopped">
            <summary>
            The game's execution has completely stopped.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.ExecutionState.Stopping">
            <summary>
            The user has invoked <see cref="M:osu.Framework.Platform.GameHost.Exit"/>, or the window has been called.
            The game is currently awaiting to stop all execution on the correct thread.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.ExecutionState.Running">
            <summary>
            <see cref="M:osu.Framework.Platform.GameHost.Run(osu.Framework.Game)"/> has been invoked.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.GraphicsSurfaceType">
            <summary>
            The graphics surface of an <see cref="T:osu.Framework.Platform.IWindow"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GraphicsSurfaceType.OpenGL">
            <summary>
            An OpenGL graphics surface. The window must implement <see cref="T:osu.Framework.Platform.IOpenGLGraphicsSurface"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GraphicsSurfaceType.Metal">
            <summary>
            A Metal graphics surface. The window must implement <see cref="T:osu.Framework.Platform.IMetalGraphicsSurface"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GraphicsSurfaceType.Vulkan">
            <summary>
            A Vulkan graphics surface.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.GraphicsSurfaceType.Direct3D11">
            <summary>
            A Direct3D11 graphics surface.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.HeadlessClipboard">
            <summary>
            Virtual clipboard for use in headless execution.
            </summary>
            <remarks>
            Stores all data in-memory, so the host OS clipboard is not affected.
            </remarks>
        </member>
        <member name="T:osu.Framework.Platform.HeadlessGameHost">
            <summary>
            A GameHost which doesn't require a graphical or sound device.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.HeadlessGameHost.FastClock.#ctor(System.Double)">
            <summary>
            A clock which increments each time <see cref="P:osu.Framework.Platform.HeadlessGameHost.FastClock.CurrentTime"/> is requested.
            Run fast. Run consistent.
            </summary>
            <param name="increment">Milliseconds we should increment the clock by each time the time is requested.</param>
        </member>
        <member name="P:osu.Framework.Platform.IAndroidGraphicsSurface.JniEnvHandle">
            <summary>
            Returns JNI environment handle.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IAndroidGraphicsSurface.SurfaceHandle">
            <summary>
            Android Surface handle.
            </summary>
            <remarks>https://developer.android.com/reference/android/view/Surface.html</remarks>
        </member>
        <member name="M:osu.Framework.Platform.IconGroup.findClosestEntry(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Finds the closest icon entry index that is less than or equal to the requested size and bit depth.
            Icon size takes priority over bit depth since a scaled 32-bit icon will look better than a correctly-sized 8-bit icon.
            </summary>
            <param name="width">The maximum desired width in pixels.</param>
            <param name="height">The maximum desired height in pixels.</param>
            <param name="bpp">The maximum desired bit depth.</param>
            <param name="requireRawData">If true, only icon entries that provide raw PNG data will be considered.</param>
            <returns>The index of the icon in the icon directory, or -1 if a valid icon could not be found.</returns>
        </member>
        <member name="M:osu.Framework.Platform.IconGroup.CreateIcon(System.Int32,System.Int32,System.Int32)">
            <summary>
            Attempts to create a Windows-specific icon matching the requested dimensions as closely as possible.
            Will return null if a matching size could not be found.
            </summary>
            <param name="width">The maximum desired width in pixels.</param>
            <param name="height">The maximum desired height in pixels.</param>
            <param name="bpp">The maximum desired bit count. Defaults to 32 bit.</param>
            <returns>An <see cref="T:osu.Framework.Platform.Windows.Native.Icon"/> instance, or null if a valid size could not be found.</returns>
            <exception cref="T:System.InvalidOperationException">If the native icon handle could not be created.</exception>
        </member>
        <member name="M:osu.Framework.Platform.IconGroup.LoadRawIcon(System.Int32,System.Int32,System.Int32)">
            <summary>
            Attempts to load the raw PNG data from a supported icon, matching the requested dimensions as closely as possible.
            Not all icons in a .ico file are stored as raw PNG data. Will return null if a matching raw PNG could not be found.
            </summary>
            <param name="width">The maximum desired width in pixels.</param>
            <param name="height">The maximum desired height in pixels.</param>
            <param name="bpp">The maximum desired bit count. Defaults to 32 bit.</param>
            <returns>A byte array of raw PNG data, or null if a valid size could not be found.</returns>
        </member>
        <member name="T:osu.Framework.Platform.IGraphicsSurface">
            <summary>
            Represents the graphics API surface provided by an <see cref="T:osu.Framework.Platform.IWindow"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IGraphicsSurface.WindowHandle">
            <summary>
            A pointer representing a handle to this window, provided by the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IGraphicsSurface.Type">
            <summary>
            The type of surface.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IGraphicsSurface.Initialise">
            <summary>
            Performs an initialisation of the graphics backend after <see cref="T:osu.Framework.Platform.IWindow"/> has been created.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IGraphicsSurface.GetDrawableSize">
            <summary>
            Returns the drawable size of the window provided by the graphics backend.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IIpcHost.MessageReceived">
            <summary>
            Invoked when a message is received by this IPC server.
            Returns either a response in the form of an <see cref="T:osu.Framework.Platform.IpcMessage"/>, or <c>null</c> for no response.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IIpcHost.SendMessageAsync(osu.Framework.Platform.IpcMessage)">
            <summary>
            Send a message to the IPC server.
            </summary>
            <param name="ipcMessage">The message to send.</param>
        </member>
        <member name="P:osu.Framework.Platform.ILinuxGraphicsSurface.IsWayland">
            <summary>
            Whether the current display server is Wayland.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.ILinuxGraphicsSurface.DisplayHandle">
            <summary>
            A pointer representing a handle to the display containing this window, provided by the operating system.
            This is specific to X11/Wayland subsystems.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.IMetalGraphicsSurface">
            <summary>
            Represents Metal-specific graphics API provided by an <see cref="T:osu.Framework.Platform.IWindow"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IMetalGraphicsSurface.CreateMetalView">
            <summary>
            Creates an NSView backed with a Metal layer.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.IOpenGLGraphicsSurface">
            <summary>
            Represents OpenGL-specific graphics API provided by an <see cref="T:osu.Framework.Platform.IWindow"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IOpenGLGraphicsSurface.VerticalSync">
            <summary>
            Enables or disables vertical sync.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IOpenGLGraphicsSurface.WindowContext">
            <summary>
            Returns the graphics context associated with the window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IOpenGLGraphicsSurface.CurrentContext">
            <summary>
            Returns the current graphics context.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IOpenGLGraphicsSurface.BackbufferFramebuffer">
            <summary>
            The main framebuffer object, or null if unknown.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.SwapBuffers">
            <summary>
            Swaps the back buffer with the front buffer.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.CreateContext">
            <summary>
            Creates a new graphics context associated with this window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.MakeCurrent(System.IntPtr)">
            <summary>
            Marks the specified context as current.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.ClearCurrent">
            <summary>
            Clears the current graphics context.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.DeleteContext(System.IntPtr)">
            <summary>
            Deletes the specified context.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IOpenGLGraphicsSurface.GetProcAddress(System.String)">
            <summary>
            Returns a pointer to the named OpenGL function.
            </summary>
            <param name="symbol">The symbolic name of the OpenGL function.</param>
        </member>
        <member name="T:osu.Framework.Platform.TextEditingDelegate">
            <summary>
            Fired when text is edited, usually via IME composition.
            </summary>
            <param name="text">The composition text.</param>
            <param name="start">The index of the selection start.</param>
            <param name="length">The length of the selection.</param>
        </member>
        <member name="T:osu.Framework.Platform.IWindow">
            <summary>
            Interface representation of the game window, intended to hide any implementation-specific code.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.GraphicsSurface">
            <summary>
            The graphics API for this window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.CycleMode">
            <summary>
            Cycles through the available <see cref="P:osu.Framework.Platform.IWindow.WindowMode"/>s as determined by <see cref="P:osu.Framework.Platform.IWindow.SupportedWindowModes"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.SetupWindow(osu.Framework.Configuration.FrameworkConfigManager)">
            <summary>
            Configures the <see cref="T:osu.Framework.Platform.IWindow"/> based on the provided <see cref="T:osu.Framework.Configuration.FrameworkConfigManager"/>.
            </summary>
            <param name="config">The configuration manager to use.</param>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Create">
            <summary>
            Creates the concrete window implementation.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.Update">
            <summary>
            Invoked once every window event loop.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.ExitRequested">
            <summary>
            Invoked when the window close (X) button or another platform-native exit action has been pressed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.Exited">
            <summary>
            Invoked when the <see cref="T:osu.Framework.Platform.IWindow"/> has closed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.Suspended">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been suspended.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.Resumed">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been resumed from suspension.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.LowOnMemory">
            <summary>
            Invoked when the operating system is low on memory, in order for the application to free some.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.Resized">
            <summary>
            Invoked when the <see cref="T:osu.Framework.Platform.IWindow"/> client size has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.KeymapChanged">
            <summary>
            Invoked when the system keyboard layout has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.DragDrop">
            <summary>
            Invoked when the user drops a file into the window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.CursorInWindow">
            <summary>
            Whether the OS cursor is currently contained within the game window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.CursorState">
            <summary>
            Controls the state of the OS cursor.
            </summary>
            <remarks>If the cursor is <see cref="F:osu.Framework.Platform.CursorState.Confined"/>, <see cref="P:osu.Framework.Platform.IWindow.CursorConfineRect"/> will be used.</remarks>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.CursorConfineRect">
            <summary>
            Area to which the mouse cursor is confined to when <see cref="P:osu.Framework.Platform.IWindow.CursorState"/> is <see cref="F:osu.Framework.Platform.CursorState.Confined"/>.
            </summary>
            <remarks>
            Will confine to the whole window by default (or when set to <c>null</c>).
            Supported fully on desktop platforms, and on Android when relative mode is enabled.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.WindowState">
            <summary>
            Controls the state of the window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.DefaultWindowMode">
            <summary>
            Returns the default <see cref="P:osu.Framework.Platform.IWindow.WindowMode"/> for the implementation.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.IsActive">
            <summary>
            Whether this <see cref="T:osu.Framework.Platform.IWindow"/> is active (in the foreground).
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.SafeAreaPadding">
            <summary>
            Provides a <see cref="T:osu.Framework.Bindables.BindableSafeArea"/> that can be used to keep track of the "safe area" insets on mobile
            devices. This usually corresponds to areas of the screen hidden under notches and rounded corners.
            The safe area insets are provided by the operating system and dynamically change as the user rotates the device.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.SupportedWindowModes">
            <summary>
            The <see cref="P:osu.Framework.Platform.IWindow.WindowMode"/>s supported by this <see cref="T:osu.Framework.Platform.IWindow"/> implementation.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.WindowMode">
            <summary>
            Provides a <see cref="T:osu.Framework.Bindables.Bindable`1"/> that manages the current window mode.
            Supported window modes for the current platform can be retrieved via <see cref="P:osu.Framework.Platform.IWindow.SupportedWindowModes"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.Displays">
            <summary>
            Contains information about the current physical displays.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.IWindow.DisplaysChanged">
            <summary>
            Invoked when <see cref="P:osu.Framework.Platform.IWindow.Displays"/> has changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.PrimaryDisplay">
            <summary>
            Gets the <see cref="T:osu.Framework.Platform.Display"/> that has been set as "primary" or "default" in the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.CurrentDisplayBindable">
            <summary>
            Exposes the <see cref="T:osu.Framework.Platform.Display"/> that this window is currently on as a <see cref="T:osu.Framework.Bindables.Bindable`1"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.CurrentDisplayMode">
            <summary>
            The <see cref="T:osu.Framework.Platform.DisplayMode"/> for the display that this window is currently on.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Close">
            <summary>
            Forcefully closes the window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Raise">
            <summary>
            Attempts to raise the window, bringing it above other windows and requesting input focus.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Hide">
            <summary>
            Attempts to hide the window, making it invisible and hidden from the taskbar.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Show">
            <summary>
            Attempts to show the window, making it visible.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Flash(System.Boolean)">
            <summary>
            Attempts to flash the window in order to request the user's attention.
            </summary>
            <remarks>
            On platforms which don't support any kind of flashing (ie. mobile), this will be a no-op.
            </remarks>
            <param name="flashUntilFocused">
            When <c>true</c>, the window will flash until it is focused again.
            When <c>false</c> it will only flash momentarily.
            </param>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.CancelFlash">
            <summary>
            Attempts to cancel any window flash requested with <see cref="M:osu.Framework.Platform.IWindow.Flash(System.Boolean)"/>.
            </summary>
            <remarks>
            On platforms which don't support any kind of flashing (ie. mobile), this will be a no-op.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.EnableScreenSuspension">
            <summary>
            Enable any system level timers that might dim or turn off the screen.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.DisableScreenSuspension">
            <summary>
            Disable any system level timers that might dim or turn off the screen.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.Run">
            <summary>
            Start the window's run loop.
            Is a blocking call on desktop platforms, and a non-blocking call on mobile platforms.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.OnDraw">
            <summary>
            Invoked once a draw session has finished.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.Focused">
            <summary>
            Whether the window currently has focus.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.SetIconFromStream(System.IO.Stream)">
            <summary>
            Sets the window icon to the provided <paramref name="imageStream"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.PointToClient(System.Drawing.Point)">
            <summary>
            Convert a screen based coordinate to local window space.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:osu.Framework.Platform.IWindow.PointToScreen(System.Drawing.Point)">
            <summary>
            Convert a window based coordinate to global screen space.
            </summary>
            <param name="point"></param>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.ClientSize">
            <summary>
            The client size of the window (excluding any window decoration/border).
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.MinSize">
            <summary>
            The minimum size of the window.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when setting a negative size, or a size greater than <see cref="P:osu.Framework.Platform.IWindow.MaxSize"/>.</exception>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.MaxSize">
            <summary>
            The maximum size of the window.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when setting a negative or zero size, or a size less than <see cref="P:osu.Framework.Platform.IWindow.MinSize"/>.</exception>
        </member>
        <member name="P:osu.Framework.Platform.IWindow.Title">
            <summary>
            The window title.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Linux.LinuxGameHost.BypassCompositor">
            <summary>
            If SDL disables the compositor.
            </summary>
            <remarks>
            On Linux, SDL will disable the compositor by default.
            Since not all applications want to do that, we can specify it manually.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.Linux.Native.Library.Load(System.String,osu.Framework.Platform.Linux.Native.Library.LoadFlags)">
             <summary>
             Loads a library with flags to use with dlopen. Uses <see cref="T:osu.Framework.Platform.Linux.Native.Library.LoadFlags"/> for the flags
            
             Uses NATIVE_DLL_SEARCH_DIRECTORIES and then ld.so for library paths
             </summary>
             <param name="library">Full name of the library</param>
             <param name="flags">See 'man dlopen' for more information.</param>
        </member>
        <member name="P:osu.Framework.Platform.MacOS.MacOSGameHost.KeyBindings">
            <summary>
            <see cref="P:osu.Framework.Platform.MacOS.MacOSGameHost.PlatformKeyBindings"/> for macOS and iOS.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.MacOS.Native.Class.SwizzleMethod(System.IntPtr,System.String,System.String,System.Delegate)">
            <summary>
            Performs method swizzling for a given selector, using a given delegate implementation.
            </summary>
            <remarks>
            This essentially adds a new Objective-C method, then swaps the implementation with an existing one.
            Returns a selector to the newly registered method, which has the original implementation of
            <paramref name="selector"/> before swizzling.
            https://nshipster.com/method-swizzling/
            </remarks>
            <param name="classHandle">The Objective-C class which should have a method swizzled.</param>
            <param name="selector">The selector to swizzle.</param>
            <param name="typeString">The type encoding of the selector.</param>
            <param name="action">The delegate to use as the new implementation.</param>
            <returns>A selector for the newly registered method, containing the old implementation.</returns>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.ASCII">
            <summary>
            7-bit ASCII encoding within 8 bit chars.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.NEXTSTEP">
            <summary>
            8-bit ASCII encoding with NEXTSTEP extensions.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.JapaneseEUC">
            <summary>
            8-bit EUC encoding for Japanese text.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF8">
            <summary>
            8-bit representation of Unicode characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.ISOLatin1">
            <summary>
            8-bit ISO Latin 1 encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.Symbol">
            <summary>
            8-bit Adobe Symbol encoding vector.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.NonLossyASCII">
            <summary>
            7-bit verbose ASCII to represent all Unicode characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.ShiftJIS">
            <summary>
            8-bit Shift-JIS encoding for Japanese text.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.ISOLatin2">
            <summary>
            8-bit ISO Latin 2 encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.Unicode">
            <summary>
            The canonical Unicode encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.WindowsCP1251">
            <summary>
            Microsoft Windows codepage 1251, encoding Cyrillic characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.WindowsCP1252">
            <summary>
            Microsoft Windows codepage 1252, encoding Latin 1 characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.WindowsCP1253">
            <summary>
            Microsoft Windows codepage 1253, encoding Greek characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.WindowsCP1254">
            <summary>
            Microsoft Windows codepage 1254, encoding Turkish characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.WindowsCP1250">
            <summary>
            Microsoft Windows codepage 1250, encoding Latin 2 characters.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.ISO2022JP">
            <summary>
            ISO 2022 Japanese encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.MacOSRoman">
            <summary>
            Classing Macintosh Roman encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF16">
            <summary>
            16-bit UTF encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF16BigEndian">
            <summary>
            <see cref="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF16"/> encoding with explicit endianness.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF16LittleEndian">
            <summary>
            <see cref="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF16"/> encoding with explicit endianness.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF32">
            <summary>
            32-bit UTF encoding.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF32BigEndian">
            <summary>
            <see cref="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF32"/> encoding with explicit endianness.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF32LittleEndian">
            <summary>
            <see cref="F:osu.Framework.Platform.MacOS.Native.NSStringEncoding.UTF32"/> encoding with explicit endianness.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.MacOS.SDL2MacOSWindow">
            <summary>
            macOS-specific subclass of <see cref="T:osu.Framework.Platform.SDL2.SDL2Window"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.MacOS.SDL2MacOSWindow.scrollWheel(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Swizzled replacement of [SDLView scrollWheel:(NSEvent *)] that checks for precise scrolling deltas.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.MacOS.SDL3MacOSWindow">
            <summary>
            macOS-specific subclass of <see cref="T:osu.Framework.Platform.SDL3.SDL3Window"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.MacOS.SDL3MacOSWindow.scrollWheel(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Swizzled replacement of [SDLView scrollWheel:(NSEvent *)] that checks for precise scrolling deltas.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.NativeMemoryTracker">
            <summary>
            Track native memory allocations via <see cref="T:osu.Framework.Statistics.GlobalStatistics"/>.
            Also adds memory pressure automatically.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.NativeMemoryTracker.AddMemory(System.Object,System.Int64)">
            <summary>
            Add new tracked native memory.
            </summary>
            <param name="source">The object responsible for this allocation.</param>
            <param name="amount">The number of bytes allocated.</param>
            <returns>A lease which should be disposed when memory is released.</returns>
        </member>
        <member name="M:osu.Framework.Platform.NativeMemoryTracker.removeMemory(System.Object,System.Int64)">
            <summary>
            Remove previously tracked native memory.
            </summary>
            <param name="source">The object responsible for this allocation.</param>
            <param name="amount">The number of bytes allocated.</param>
        </member>
        <member name="T:osu.Framework.Platform.NativeMemoryTracker.NativeMemoryLease">
            <summary>
            A leased on a native memory allocation. Should be disposed when the associated memory is freed.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.SDL2.SDL2ControllerBindings">
            <summary>
            Maintain a copy of the SDL-provided bindings for the given controller.
            Used to determine whether a given event's joystick button or axis is unmapped.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2ControllerBindings.ButtonBindings">
            <summary>
            Bindings returned from <see cref="M:SDL2.SDL.SDL_GameControllerGetBindForButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)"/>, indexed by <see cref="T:SDL2.SDL.SDL_GameControllerButton"/>.
            Empty if the joystick does not have a corresponding ControllerHandle.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2ControllerBindings.AxisBindings">
            <summary>
            Bindings returned from <see cref="M:SDL2.SDL.SDL_GameControllerGetBindForAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)"/>, indexed by <see cref="T:SDL2.SDL.SDL_GameControllerAxis"/>.
            Empty if the joystick does not have a corresponding ControllerHandle.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Extensions.ToScancode(osu.Framework.Input.Bindings.InputKey)">
            <summary>
            Returns the corresponding <see cref="T:SDL2.SDL.SDL_Scancode"/> for a given <see cref="T:osu.Framework.Input.Bindings.InputKey"/>.
            </summary>
            <param name="inputKey">
            Should be a keyboard key.
            </param>
            <returns>
            The corresponding <see cref="T:SDL2.SDL.SDL_Scancode"/> if the <see cref="T:osu.Framework.Input.Bindings.InputKey"/> is valid.
            <see cref="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_UNKNOWN"/> otherwise.
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Extensions.TryGetStringFromBytePointer(System.Byte*,System.String@)">
            <summary>
            Converts a UTF-8 byte pointer to a string.
            </summary>
            <remarks>Most commonly used with SDL text events.</remarks>
            <param name="bytePointer">Pointer to UTF-8 encoded byte array.</param>
            <param name="str">The resulting string</param>
            <returns><c>true</c> if the <paramref name="bytePointer"/> was successfully converted to a string.</returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Extensions.ReadableString(SDL2.SDL.SDL_DisplayMode)">
            <summary>
            Gets the readable string for this <see cref="T:SDL2.SDL.SDL_DisplayMode"/>.
            </summary>
            <returns>
            <c>string</c> in the format of <c>1920x1080@60</c>.
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Extensions.GetAndClearError">
            <summary>
            Gets the SDL error, and then clears it.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Extensions.TryGetTouchName(SDL2.SDL.SDL_TouchFingerEvent,System.String@)">
            <summary>
            Gets the <paramref name="name"/> of the touch device for this <see cref="T:SDL2.SDL.SDL_TouchFingerEvent"/>.
            </summary>
            <remarks>
            On Windows, this will return <c>"touch"</c> for touchscreen events or <c>"pen"</c> for pen/tablet events.
            </remarks>
        </member>
        <member name="T:osu.Framework.Platform.SDL2.SDL2Structs.SDL_SysWMmsg">
            <summary>
            Member <c>msg</c> of <see cref="T:SDL2.SDL.SDL_SysWMEvent"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.SDL2.SDL2Window">
            <summary>
            Default implementation of a window, using SDL for windowing and graphics support.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Exists">
            <summary>
            Returns true if window has been created.
            Returns false if the window has not yet been created, or has been closed.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.commandScheduler">
            <summary>
            Scheduler for actions to run before the next event loop.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.EventScheduler">
            <summary>
            Scheduler for actions to run at the end of the current event loop.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Title">
            <summary>
            Gets and sets the window title.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.IsWayland">
            <summary>
            Whether the current display server is Wayland.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.WindowHandle">
            <summary>
            Gets the native window handle as provided by the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.ObjectHandle">
            <summary>
            Represents a handle to this <see cref="T:osu.Framework.Platform.SDL2.SDL2Window"/> instance, used for unmanaged callbacks.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.Run">
            <summary>
            Starts the window's run loop.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.RunMainLoop">
             <summary>
             Runs the main window loop.
             </summary>
             <remarks>
             By default this will block and indefinitely call <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.RunFrame"/> as long as the window <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Exists"/>.
             Once the main loop finished running, cleanup logic will run.
            
             This may be overridden for special use cases, like mobile platforms which delegate execution of frames to the OS
             and don't require any kind of exit logic to exist.
             </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.RunFrame">
            <summary>
            Run a single frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.HandleEventFromFilter(SDL2.SDL.SDL_Event)">
            <summary>
            Handles <see cref="T:SDL2.SDL.SDL_Event"/>s fired from the SDL event filter.
            </summary>
            <remarks>
            As per SDL's recommendation, application events should always be handled via the event filter.
            See: https://wiki.libsdl.org/SDL2/SDL_EventType#android_ios_and_winrt_events
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.Close">
            <summary>
            Forcefully closes the window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.setSDLIcon(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            Attempts to set the window's icon to the specified image.
            </summary>
            <param name="image">An <see cref="T:SixLabors.ImageSharp.Image`1"/> to set as the window icon.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.ScheduleEvent(System.Action)">
            <summary>
            Adds an <see cref="T:System.Action"/> to the <see cref="T:osu.Framework.Threading.Scheduler"/> expected to handle event callbacks.
            </summary>
            <param name="action">The <see cref="T:System.Action"/> to execute.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.pollSDLEvents">
            <summary>
            Poll for all pending events.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.HandleEvent(SDL2.SDL.SDL_Event)">
            <summary>
            Handles <see cref="T:SDL2.SDL.SDL_Event"/>s polled on the main thread.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Update">
            <summary>
            Invoked once every window event loop.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Suspended">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been suspended.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Resumed">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been resumed from suspension.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.LowOnMemory">
            <summary>
            Invoked when the operating system is low on memory, in order for the application to free some.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.ExitRequested">
            <summary>
            Invoked when the window close (X) button or another platform-native exit action has been pressed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Exited">
            <summary>
            Invoked when the window is about to close.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.DragDrop">
            <summary>
            Invoked when the user drops a file into the window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.RelativeMouseMode">
            <summary>
            Set the state of SDL2's RelativeMouseMode (https://wiki.libsdl.org/SDL_SetRelativeMouseMode).
            On all platforms, this will lock the mouse to the window (although escaping by setting <see cref="F:osu.Framework.Platform.SDL2.SDL2Window.ConfineMouseMode"/> is still possible via a local implementation).
            On windows, this will use raw input if available.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.MouseAutoCapture">
            <summary>
            Controls whether the mouse is automatically captured when buttons are pressed and the cursor is outside the window.
            Only works with <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.RelativeMouseMode"/> disabled.
            </summary>
            <remarks>
            If the cursor leaves the window while it's captured, <see cref="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_LEAVE"/> is not sent until the button(s) are released.
            And if the cursor leaves and enters the window while captured, <see cref="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_ENTER"/> is not sent either.
            We disable relative mode when the cursor exits window bounds (not on the event), but we only enable it again on <see cref="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_ENTER"/>.
            The above culminate in <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.RelativeMouseMode"/> staying off when the cursor leaves and enters the window bounds when any buttons are pressed.
            This is an invalid state, as the cursor is inside the window, and <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.RelativeMouseMode"/> is off.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.CursorStateBindable">
            <summary>
            Provides a bindable that controls the window's <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.CursorStateBindable"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.updateCursorConfinement">
            <summary>
            Updates OS cursor confinement based on the current <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.CursorState"/>, <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.CursorConfineRect"/> and <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.RelativeMouseMode"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.ConfineMouseMode">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.ConfineMouseMode"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.ResetIme">
            <summary>
            Resets internal state of the platform-native IME.
            This will clear its composition text and prepare it for new input.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.populateJoysticks">
            <summary>
            Populates <see cref="F:osu.Framework.Platform.SDL2.SDL2Window.controllers"/> with joysticks that are already connected.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask">
            <summary>
            Button mask as returned from <see cref="M:SDL2.SDL.SDL_GetGlobalMouseState(System.Int32@,System.Int32@)"/> and <see cref="M:SDL2.SDL.SDL_BUTTON(System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask.Left">
            <see cref="F:SDL2.SDL.SDL_BUTTON_LMASK"/>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask.Middle">
            <see cref="F:SDL2.SDL.SDL_BUTTON_MMASK"/>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask.Right">
            <see cref="F:SDL2.SDL.SDL_BUTTON_RMASK"/>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask.X1">
            <see cref="F:SDL2.SDL.SDL_BUTTON_X1MASK"/>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.SDLButtonMask.X2">
            <see cref="F:SDL2.SDL.SDL_BUTTON_X2MASK"/>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.UpdateMousePosition(osuTK.Vector2)">
            <summary>
            Update the host window manager's cursor position based on a location relative to window coordinates.
            </summary>
            <param name="mousePosition">A position inside the window.</param>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseEntered">
            <summary>
            Invoked when the mouse cursor enters the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseLeft">
            <summary>
            Invoked when the mouse cursor leaves the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseWheel">
            <summary>
            Invoked when the user scrolls the mouse wheel over the window.
            </summary>
            <remarks>
            Delta is positive when mouse wheel scrolled to the up or left, in non-"natural" scroll mode (ie. the classic way).
            </remarks>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseMove">
            <summary>
            Invoked when the user moves the mouse cursor within the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseMoveRelative">
            <summary>
            Invoked when the user moves the mouse cursor within the window (via relative / raw input).
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseDown">
            <summary>
            Invoked when the user presses a mouse button.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.MouseUp">
            <summary>
            Invoked when the user releases a mouse button.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.KeyDown">
            <summary>
            Invoked when the user presses a key.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.KeyUp">
            <summary>
            Invoked when the user releases a key.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.TextInput">
            <summary>
            Invoked when the user enters text.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.TextEditing">
            <summary>
            Invoked when an IME text editing event occurs.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.KeymapChanged">
            <inheritdoc cref="E:osu.Framework.Platform.IWindow.KeymapChanged"/>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.JoystickAxisChanged">
            <summary>
            Invoked when a joystick axis changes.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.JoystickButtonDown">
            <summary>
            Invoked when the user presses a button on a joystick.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.JoystickButtonUp">
            <summary>
            Invoked when the user releases a button on a joystick.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.TouchDown">
            <summary>
            Invoked when a finger moves or touches a touchscreen.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.TouchUp">
            <summary>
            Invoked when a finger leaves the touchscreen.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Focused">
            <summary>
            Whether the window currently has focus.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.SupportedWindowModes">
            <inheritdoc />
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Position">
            <summary>
            Returns or sets the window's position in screen space. Only valid when in <see cref="F:osu.Framework.Configuration.WindowMode.Windowed"/>
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Resizable">
            <summary>
            Returns or sets whether the window is resizable or not. Only valid when in <see cref="F:osu.Framework.Platform.WindowState.Normal"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Size">
            <summary>
            Returns or sets the window's internal size, before scaling.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.WindowMode">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowMode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Visible">
            <summary>
            Enables or disables the window visibility.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.WindowState">
            <summary>
            Returns or sets the window's current <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.WindowState"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.windowMaximised">
            <summary>
            Stores whether the window used to be in maximised state or not.
            Used to properly decide what window state to pick when switching to windowed mode (see <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.WindowMode"/> change event)
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.ClientSize">
            <summary>
            Returns the drawable area, after scaling.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.Displays">
            <summary>
            Queries the physical displays and their supported resolutions.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.fetchDisplays">
            <summary>
            Updates <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Displays"/> with the latest display information reported by SDL.
            </summary>
            <remarks>
            Has no effect on values of
            <see cref="F:osu.Framework.Platform.SDL2.SDL2Window.currentDisplay"/> /
            <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.CurrentDisplayBindable"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.assertDisplaysMatchSDL">
            <summary>
            Asserts that the current <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Displays"/> match the actual displays as reported by
            </summary>
            <remarks>
            This assert is not fatal, as the <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Displays"/> will get updated sooner or later
            in <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.handleDisplayEvent(SDL2.SDL.SDL_DisplayEvent)"/> or <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.handleWindowEvent(SDL2.SDL.SDL_WindowEvent)"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.PrimaryDisplay">
            <summary>
            Gets the <see cref="T:osu.Framework.Platform.Display"/> that has been set as "primary" or "default" in the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL2.SDL2Window.CurrentDisplayMode">
            <summary>
            The <see cref="T:osu.Framework.Platform.DisplayMode"/> for the display that this window is currently on.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.sizeFullscreen">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.SizeFullscreen"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.sizeWindowed">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedSize"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.windowPositionX">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedPositionX"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.windowPositionY">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedPositionY"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.windowDisplayIndexBindable">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.LastDisplayDevice"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.fetchWindowSize">
            <summary>
            Updates <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Size"/> and <see cref="P:osu.Framework.Platform.SDL2.SDL2Window.Scale"/> according to SDL state.
            </summary>
            <returns>Whether the window size has been changed after updating.</returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.invalidateWindowSpecifics">
            <summary>
            Invalidates the the state of the window.
            This forces <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.updateAndFetchWindowSpecifics"/> to run before the next event loop.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.updateAndFetchWindowSpecifics">
            <summary>
            Should be run on a regular basis to check for external window state changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)">
            <summary>
            Should be run after a local window state change, to propagate the correct SDL actions.
            </summary>
            <remarks>
            Call sites need to set <see cref="F:osu.Framework.Platform.SDL2.SDL2Window.updatingWindowStateAndSize"/> appropriately.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.ensureWindowOnDisplay(osu.Framework.Platform.Display)">
            <summary>
            Ensures that the window is located on the provided <see cref="T:osu.Framework.Platform.Display"/>.
            </summary>
            <param name="display">The <see cref="T:osu.Framework.Platform.Display"/> to center the window on.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.moveWindowTo(osu.Framework.Platform.Display,osuTK.Vector2)">
            <summary>
            Moves the window to be centred around the normalised <paramref name="newPosition"/> on a <paramref name="display"/>.
            </summary>
            <param name="display">The <see cref="T:osu.Framework.Platform.Display"/> to move the window to.</param>
            <param name="newPosition">Relative position on the display, normalised to <c>[-0.5, 1.5]</c>.</param>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.storingSizeToConfig">
            <summary>
            Set to <c>true</c> while the window size is being stored to config to avoid bindable feedback.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL2.SDL2Window.updatingWindowStateAndSize">
            <summary>
            Set when <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)"/> is in progress to avoid <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.fetchWindowSize"/> being called with invalid data.
            </summary>
            <remarks>
            Since <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)"/> is a multi-step process, intermediary windows size changes might be invalid.
            This is usually not a problem, but since <see cref="M:osu.Framework.Platform.SDL2.SDL2Window.HandleEventFromFilter(SDL2.SDL.SDL_Event)"/> runs out-of-band, invalid data might appear in those events.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL2.SDL2Window.SetBorderless(osu.Framework.Platform.Display)">
            <summary>
            Prepare display of a borderless window.
            </summary>
            <param name="display">The display to make the window fullscreen borderless on.</param>
            <returns>
            The size of the borderless window's draw area.
            </returns>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Resized">
            <summary>
            Invoked after the window has resized.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.WindowStateChanged">
            <summary>
            Invoked after the window's state has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL2.SDL2Window.Moved">
            <summary>
            Invoked when the window moves.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Clipboard.supportedImageMimeTypes">
            <summary>
            Supported formats for decoding images from the clipboard.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Clipboard.imageFormat">
            <summary>
            Format used for encoding (saving) images to the clipboard.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.SDL3.SDL3Clipboard.SpanDecoder`1">
            <summary>
            Decodes data from a native memory span. Return null or throw an exception if the data couldn't be decoded.
            </summary>
            <typeparam name="T">Type of decoded data.</typeparam>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.dataProvider">
            <summary>
            Provider of data suitable for the <see cref="F:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.MimeType"/>.
            </summary>
            <remarks>Called when another application requests that mime type from the OS clipboard.</remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.Address">
            <summary>
            Address of the <see cref="T:System.ReadOnlyMemory`1"/> returned by the <see cref="F:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.dataProvider"/>.
            </summary>
            <remarks>Pinned and suitable for passing to unmanaged code.</remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.DataLength">
            <summary>
            Length of the <see cref="T:System.ReadOnlyMemory`1"/> returned by the <see cref="F:osu.Framework.Platform.SDL3.SDL3Clipboard.ClipboardCallbackContext.dataProvider"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.SDL3.SDL3ControllerBindings">
            <summary>
            Maintain a copy of the SDL-provided bindings for the given controller.
            Used to determine whether a given event's joystick button or axis is unmapped.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3ControllerBindings.Bindings">
            <summary>
            Bindings returned from <see cref="M:SDL.SDL3.SDL_GetGamepadBindings(SDL.SDL_Gamepad*)"/>.
            Empty if the joystick does not have a corresponding GamepadHandle.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Extensions.ToScancode(osu.Framework.Input.Bindings.InputKey)">
            <summary>
            Returns the corresponding <see cref="T:SDL.SDL_Scancode"/> for a given <see cref="T:osu.Framework.Input.Bindings.InputKey"/>.
            </summary>
            <param name="inputKey">
            Should be a keyboard key.
            </param>
            <returns>
            The corresponding <see cref="T:SDL.SDL_Scancode"/> if the <see cref="T:osu.Framework.Input.Bindings.InputKey"/> is valid.
            <see cref="F:SDL.SDL_Scancode.SDL_SCANCODE_UNKNOWN"/> otherwise.
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Extensions.ReadableString(SDL.SDL_DisplayMode)">
            <summary>
            Gets the readable string for this <see cref="T:SDL.SDL_DisplayMode"/>.
            </summary>
            <returns>
            <c>string</c> in the format of <c>1920x1080@60</c>.
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Extensions.GetAndClearError">
            <summary>
            Gets the SDL error, and then clears it.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Extensions.TryGetTouchName(SDL.SDL_TouchFingerEvent,System.String@)">
            <summary>
            Gets the <paramref name="name"/> of the touch device for this <see cref="T:SDL.SDL_TouchFingerEvent"/>.
            </summary>
            <remarks>
            On Windows, this will return <c>"touch"</c> for touchscreen events or <c>"pen"</c> for pen/tablet events.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3ReadableKeyCombinationProvider.TryGetNameFromKeycode(SDL.SDL_Keycode,System.String@)">
            <summary>
            Provides overrides for some keys that we want displayed differently from SDL_GetKeyName().
            </summary>
            <remarks>
            Should be overriden per-platform to provide platform-specific names for applicable keys.
            </remarks>
        </member>
        <member name="T:osu.Framework.Platform.SDL3.SDL3Window">
            <summary>
            Default implementation of a window, using SDL for windowing and graphics support.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Exists">
            <summary>
            Returns true if window has been created.
            Returns false if the window has not yet been created, or has been closed.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.commandScheduler">
            <summary>
            Scheduler for actions to run before the next event loop.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.EventScheduler">
            <summary>
            Scheduler for actions to run at the end of the current event loop.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Title">
            <summary>
            Gets and sets the window title.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.IsWayland">
            <summary>
            Whether the current display server is Wayland.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.WindowHandle">
            <summary>
            Gets the native window handle as provided by the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.ObjectHandle">
            <summary>
            Represents a handle to this <see cref="T:osu.Framework.Platform.SDL3.SDL3Window"/> instance, used for unmanaged callbacks.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.Run">
            <summary>
            Starts the window's run loop.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.RunMainLoop">
             <summary>
             Runs the main window loop.
             </summary>
             <remarks>
             By default this will block and indefinitely call <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.RunFrame"/> as long as the window <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Exists"/>.
             Once the main loop finished running, cleanup logic will run.
            
             This may be overridden for special use cases, like mobile platforms which delegate execution of frames to the OS
             and don't require any kind of exit logic to exist.
             </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.RunFrame">
            <summary>
            Run a single frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.HandleEventFromFilter(SDL.SDL_Event)">
            <summary>
            Handles <see cref="T:SDL.SDL_Event"/>s fired from the SDL event filter.
            </summary>
            <remarks>
            As per SDL's recommendation, application events should always be handled via the event filter.
            See: https://wiki.libsdl.org/SDL3/SDL_EventType#android_ios_and_winrt_events
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.Close">
            <summary>
            Forcefully closes the window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.setSDLIcon(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            Attempts to set the window's icon to the specified image.
            </summary>
            <param name="image">An <see cref="T:SixLabors.ImageSharp.Image`1"/> to set as the window icon.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.ScheduleEvent(System.Action)">
            <summary>
            Adds an <see cref="T:System.Action"/> to the <see cref="T:osu.Framework.Threading.Scheduler"/> expected to handle event callbacks.
            </summary>
            <param name="action">The <see cref="T:System.Action"/> to execute.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.pollSDLEvents">
            <summary>
            Poll for all pending events.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.HandleEvent(SDL.SDL_Event)">
            <summary>
            Handles <see cref="T:SDL.SDL_Event"/>s polled on the main thread.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Update">
            <summary>
            Invoked once every window event loop.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Suspended">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been suspended.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Resumed">
            <summary>
            Invoked when the application associated with this <see cref="T:osu.Framework.Platform.IWindow"/> has been resumed from suspension.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.LowOnMemory">
            <summary>
            Invoked when the operating system is low on memory, in order for the application to free some.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.ExitRequested">
            <summary>
            Invoked when the window close (X) button or another platform-native exit action has been pressed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Exited">
            <summary>
            Invoked when the window is about to close.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.DragDrop">
            <summary>
            Invoked when the user drops a file into the window.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.RelativeMouseMode">
            <summary>
            Set the state of SDL3's RelativeMouseMode (https://wiki.libsdl.org/SDL_SetRelativeMouseMode).
            On all platforms, this will lock the mouse to the window (although escaping by setting <see cref="F:osu.Framework.Platform.SDL3.SDL3Window.ConfineMouseMode"/> is still possible via a local implementation).
            On windows, this will use raw input if available.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.MouseAutoCapture">
            <summary>
            Controls whether the mouse is automatically captured when buttons are pressed and the cursor is outside the window.
            Only works with <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.RelativeMouseMode"/> disabled.
            </summary>
            <remarks>
            If the cursor leaves the window while it's captured, <see cref="F:SDL.SDL_EventType.SDL_EVENT_WINDOW_MOUSE_LEAVE"/> is not sent until the button(s) are released.
            And if the cursor leaves and enters the window while captured, <see cref="F:SDL.SDL_EventType.SDL_EVENT_WINDOW_MOUSE_ENTER"/> is not sent either.
            We disable relative mode when the cursor exits window bounds (not on the event), but we only enable it again on <see cref="F:SDL.SDL_EventType.SDL_EVENT_WINDOW_MOUSE_ENTER"/>.
            The above culminate in <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.RelativeMouseMode"/> staying off when the cursor leaves and enters the window bounds when any buttons are pressed.
            This is an invalid state, as the cursor is inside the window, and <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.RelativeMouseMode"/> is off.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.CursorStateBindable">
            <summary>
            Provides a bindable that controls the window's <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.CursorStateBindable"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.updateCursorConfinement">
            <summary>
            Updates OS cursor confinement based on the current <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.CursorState"/>, <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.CursorConfineRect"/> and <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.RelativeMouseMode"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.ConfineMouseMode">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.ConfineMouseMode"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.ResetIme">
            <summary>
            Resets internal state of the platform-native IME.
            This will clear its composition text and prepare it for new input.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.populateJoysticks">
            <summary>
            Populates <see cref="F:osu.Framework.Platform.SDL3.SDL3Window.controllers"/> with joysticks that are already connected.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.UpdateMousePosition(osuTK.Vector2)">
            <summary>
            Update the host window manager's cursor position based on a location relative to window coordinates.
            </summary>
            <param name="mousePosition">A position inside the window.</param>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseEntered">
            <summary>
            Invoked when the mouse cursor enters the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseLeft">
            <summary>
            Invoked when the mouse cursor leaves the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseWheel">
            <summary>
            Invoked when the user scrolls the mouse wheel over the window.
            </summary>
            <remarks>
            Delta is positive when mouse wheel scrolled to the up or left, in non-"natural" scroll mode (ie. the classic way).
            </remarks>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseMove">
            <summary>
            Invoked when the user moves the mouse cursor within the window.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseMoveRelative">
            <summary>
            Invoked when the user moves the mouse cursor within the window (via relative / raw input).
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseDown">
            <summary>
            Invoked when the user presses a mouse button.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.MouseUp">
            <summary>
            Invoked when the user releases a mouse button.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.KeyDown">
            <summary>
            Invoked when the user presses a key.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.KeyUp">
            <summary>
            Invoked when the user releases a key.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.TextInput">
            <summary>
            Invoked when the user enters text.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.TextEditing">
            <summary>
            Invoked when an IME text editing event occurs.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.KeymapChanged">
            <inheritdoc cref="E:osu.Framework.Platform.IWindow.KeymapChanged"/>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.JoystickAxisChanged">
            <summary>
            Invoked when a joystick axis changes.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.JoystickButtonDown">
            <summary>
            Invoked when the user presses a button on a joystick.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.JoystickButtonUp">
            <summary>
            Invoked when the user releases a button on a joystick.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.TouchDown">
            <summary>
            Invoked when a finger moves or touches a touchscreen.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.TouchUp">
            <summary>
            Invoked when a finger leaves the touchscreen.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Focused">
            <summary>
            Whether the window currently has focus.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.SupportedWindowModes">
            <inheritdoc />
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Position">
            <summary>
            Returns or sets the window's position in screen space. Only valid when in <see cref="F:osu.Framework.Configuration.WindowMode.Windowed"/>
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Resizable">
            <summary>
            Returns or sets whether the window is resizable or not. Only valid when in <see cref="F:osu.Framework.Platform.WindowState.Normal"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Size">
            <summary>
            Returns or sets the window's internal size, before scaling.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.WindowMode">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowMode"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Visible">
            <summary>
            Enables or disables the window visibility.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.WindowState">
            <summary>
            Returns or sets the window's current <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.WindowState"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.windowMaximised">
            <summary>
            Stores whether the window used to be in maximised state or not.
            Used to properly decide what window state to pick when switching to windowed mode (see <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.WindowMode"/> change event)
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.ClientSize">
            <summary>
            Returns the drawable area, after scaling.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.Displays">
            <summary>
            Queries the physical displays and their supported resolutions.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.fetchDisplays">
            <summary>
            Updates <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Displays"/> with the latest display information reported by SDL.
            </summary>
            <remarks>
            Has no effect on values of
            <see cref="F:osu.Framework.Platform.SDL3.SDL3Window.currentDisplay"/> /
            <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.CurrentDisplayBindable"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.assertDisplaysMatchSDL">
            <summary>
            Asserts that the current <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Displays"/> match the actual displays as reported by SDL.
            </summary>
            <remarks>
            This assert is not fatal, as the <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Displays"/> will get updated sooner or later
            in <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.handleDisplayEvent(SDL.SDL_DisplayEvent)"/> or <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.handleWindowEvent(SDL.SDL_WindowEvent)"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.PrimaryDisplay">
            <summary>
            Gets the <see cref="T:osu.Framework.Platform.Display"/> that has been set as "primary" or "default" in the operating system.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.SDL3.SDL3Window.CurrentDisplayMode">
            <summary>
            The <see cref="T:osu.Framework.Platform.DisplayMode"/> for the display that this window is currently on.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.sizeFullscreen">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.SizeFullscreen"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.sizeWindowed">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedSize"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.windowPositionX">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedPositionX"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.windowPositionY">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.WindowedPositionY"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.windowDisplayIndexBindable">
            <summary>
            Bound to <see cref="F:osu.Framework.Configuration.FrameworkSetting.LastDisplayDevice"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.fetchWindowSize">
            <summary>
            Updates <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Size"/> and <see cref="P:osu.Framework.Platform.SDL3.SDL3Window.Scale"/> according to SDL state.
            </summary>
            <returns>Whether the window size has been changed after updating.</returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.invalidateWindowSpecifics">
            <summary>
            Invalidates the the state of the window.
            This forces <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.updateAndFetchWindowSpecifics"/> to run before the next event loop.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.updateAndFetchWindowSpecifics">
            <summary>
            Should be run on a regular basis to check for external window state changes.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)">
            <summary>
            Should be run after a local window state change, to propagate the correct SDL actions.
            </summary>
            <remarks>
            Call sites need to set <see cref="F:osu.Framework.Platform.SDL3.SDL3Window.updatingWindowStateAndSize"/> appropriately.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.ensureWindowOnDisplay(osu.Framework.Platform.Display)">
            <summary>
            Ensures that the window is located on the provided <see cref="T:osu.Framework.Platform.Display"/>.
            </summary>
            <param name="display">The <see cref="T:osu.Framework.Platform.Display"/> to center the window on.</param>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.moveWindowTo(osu.Framework.Platform.Display,osuTK.Vector2)">
            <summary>
            Moves the window to be centred around the normalised <paramref name="newPosition"/> on a <paramref name="display"/>.
            </summary>
            <param name="display">The <see cref="T:osu.Framework.Platform.Display"/> to move the window to.</param>
            <param name="newPosition">Relative position on the display, normalised to <c>[-0.5, 1.5]</c>.</param>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.storingSizeToConfig">
            <summary>
            Set to <c>true</c> while the window size is being stored to config to avoid bindable feedback.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.SDL3.SDL3Window.updatingWindowStateAndSize">
            <summary>
            Set when <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)"/> is in progress to avoid <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.fetchWindowSize"/> being called with invalid data.
            </summary>
            <remarks>
            Since <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.UpdateWindowStateAndSize(osu.Framework.Platform.WindowState,osu.Framework.Platform.Display,osu.Framework.Platform.DisplayMode)"/> is a multi-step process, intermediary windows size changes might be invalid.
            This is usually not a problem, but since <see cref="M:osu.Framework.Platform.SDL3.SDL3Window.HandleEventFromFilter(SDL.SDL_Event)"/> runs out-of-band, invalid data might appear in those events.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.SetBorderless(osu.Framework.Platform.Display)">
            <summary>
            Prepare display of a borderless window.
            </summary>
            <param name="display">The display to make the window fullscreen borderless on.</param>
            <returns>
            The size of the borderless window's draw area.
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.SDL3.SDL3Window.tryGetDisplayAtIndex(System.Int32,SDL.SDL_DisplayID@)">
            <summary>
            Gets the <see cref="T:SDL.SDL_DisplayID"/> of the display at the specified index.
            </summary>
            <param name="index">Index of the display.</param>
            <param name="displayID">The <see cref="T:SDL.SDL_DisplayID"/> of the display at the specified index.</param>
            <returns><c>true</c> if the display at the requested index is available, <c>false</c> otherwise.</returns>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Resized">
            <summary>
            Invoked after the window has resized.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.WindowStateChanged">
            <summary>
            Invoked after the window's state has changed.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.SDL3.SDL3Window.Moved">
            <summary>
            Invoked when the window moves.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Storage.GetFullPath(System.String,System.Boolean)">
            <summary>
            Get a usable filesystem path for the provided incomplete path.
            </summary>
            <param name="path">An incomplete path, usually provided as user input.</param>
            <param name="createIfNotExisting">Create the path if it doesn't already exist.</param>
            <returns>A usable filesystem path.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.Exists(System.String)">
            <summary>
            Check whether a file exists at the specified path.
            </summary>
            <param name="path">The path to check.</param>
            <returns>Whether a file exists.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.ExistsDirectory(System.String)">
            <summary>
            Check whether a directory exists at the specified path.
            </summary>
            <param name="path">The path to check.</param>
            <returns>Whether a directory exists.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.DeleteDirectory(System.String)">
            <summary>
            Delete a directory and all its contents recursively.
            </summary>
            <param name="path">The path of the directory to delete.</param>
        </member>
        <member name="M:osu.Framework.Platform.Storage.Delete(System.String)">
            <summary>
            Delete a file.
            </summary>
            <param name="path">The path of the file to delete.</param>
        </member>
        <member name="M:osu.Framework.Platform.Storage.GetDirectories(System.String)">
            <summary>
            Retrieve a list of directories at the specified path.
            </summary>
            <param name="path">The path to list.</param>
            <returns>A list of directories in the path, relative to the path of this storage.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.GetFiles(System.String,System.String)">
            <summary>
            Retrieve a list of files at the specified path.
            </summary>
            <param name="path">The path to list.</param>
            <param name="pattern">An optional search pattern. Accepts "*" wildcard.</param>
            <returns>A list of files in the path, relative to the path of this storage.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.GetStorageForDirectory(System.String)">
            <summary>
            Retrieve a <see cref="T:osu.Framework.Platform.Storage"/> for a contained directory.
            Creates the path if not existing.
            </summary>
            <param name="path">The subdirectory to use as a root.</param>
            <returns>A more specific storage.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.Move(System.String,System.String)">
            <summary>
            Move a file from one location to another. File must exist. Destination will be overwritten if exists.
            </summary>
            <param name="from">The file path to move.</param>
            <param name="to">The destination path.</param>
        </member>
        <member name="M:osu.Framework.Platform.Storage.CreateFileSafely(System.String)">
            <summary>
            Create a new file on disk, using a temporary file to write to before moving to the final location to ensure a half-written file cannot exist at the specified location.
            </summary>
            <remarks>
            If the target file path already exists, it will be deleted before attempting to write a new version.
            </remarks>
            <param name="path">The path of the file to create or overwrite.</param>
            <returns>A stream associated with the requested path. Will only exist at the specified location after the stream is disposed.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.GetStream(System.String,System.IO.FileAccess,System.IO.FileMode)">
            <summary>
            Retrieve a stream from an underlying file inside this storage.
            </summary>
            <param name="path">The path of the file.</param>
            <param name="access">The access requirements.</param>
            <param name="mode">The mode in which the file should be opened.</param>
            <returns>A stream associated with the requested path.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.OpenFileExternally(System.String)">
            <summary>
            Requests that a file be opened externally with an associated application, if available.
            </summary>
            <param name="filename">The relative path to the file which should be opened.</param>
            <returns>Whether the file was successfully opened.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.PresentExternally">
            <summary>
            Opens a native file browser window to the root path of this storage.
            </summary>
            <returns>Whether the storage was successfully presented.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Storage.PresentFileExternally(System.String)">
            <summary>
            Requests to present a file externally in the platform's native file browser.
            </summary>
            <remarks>
            This will open the parent folder and, (if available) highlight the file.
            </remarks>
            <param name="filename">Relative path to the file.</param>
            <returns>Whether the file was successfully presented.</returns>
        </member>
        <member name="T:osu.Framework.Platform.Storage.SafeWriteStream">
            <summary>
            Uses a temporary file to ensure a file is written to completion before existing at its specified location.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.TcpIpcProvider">
            <summary>
            An inter-process communication provider that runs over a specified TCP port, binding to the loopback address.
            This single class handles both binding as a server, or messaging another bound instance that is acting as a server.
            </summary>
        </member>
        <member name="E:osu.Framework.Platform.TcpIpcProvider.MessageReceived">
            <summary>
            Invoked when a message is received when running as a server.
            Returns either a response in the form of an <see cref="T:osu.Framework.Platform.IpcMessage"/>, or <c>null</c> for no response.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.TcpIpcProvider.#ctor(System.Int32)">
            <summary>
            Create a new provider.
            </summary>
            <param name="port">The port to operate on.</param>
        </member>
        <member name="M:osu.Framework.Platform.TcpIpcProvider.Bind">
            <summary>
            Attempt to bind to the TCP port as a server, and start listening for incoming connections if successful.
            </summary>
            <returns>
            Whether the bind was successful.
            If <c>false</c>, another instance is likely already running (and can be messaged using <see cref="M:osu.Framework.Platform.TcpIpcProvider.SendMessageAsync(osu.Framework.Platform.IpcMessage)"/> or <see cref="M:osu.Framework.Platform.TcpIpcProvider.SendMessageWithResponseAsync(osu.Framework.Platform.IpcMessage)"/>).
            </returns>
        </member>
        <member name="M:osu.Framework.Platform.TcpIpcProvider.SendMessageAsync(osu.Framework.Platform.IpcMessage)">
            <summary>
            Send a message to the IPC server.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:osu.Framework.Platform.TcpIpcProvider.SendMessageWithResponseAsync(osu.Framework.Platform.IpcMessage)">
            <summary>
            Send a message to the IPC server.
            </summary>
            <param name="message">The message to send.</param>
            <returns>The response from the server.</returns>
        </member>
        <member name="T:osu.Framework.Platform.ThreadRunner">
            <summary>
            Runs a game host in a specific threading mode.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.ThreadRunner.#ctor(osu.Framework.Threading.InputThread)">
            <summary>
            Construct a new ThreadRunner instance.
            </summary>
            <param name="mainThread">The main window thread. Used for input in multi-threaded execution; all game logic in single-threaded execution.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:osu.Framework.Platform.ThreadRunner.AddThread(osu.Framework.Threading.GameThread)">
            <summary>
            Add a new non-main thread. In single-threaded execution, threads will be executed in the order they are added.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.ThreadRunner.RemoveThread(osu.Framework.Threading.GameThread)">
            <summary>
            Remove a non-main thread.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.ThreadRunner.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the current culture of all threads to the supplied <paramref name="culture"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.WindowState">
            <summary>
            Enumerates the available window states in the operating system.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.WindowState.Normal">
            <summary>
            The window is movable and takes up a subsection of the screen.
            This is the default state.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.WindowState.Fullscreen">
            <summary>
            The window is running in exclusive fullscreen and is potentially using a
            different resolution to the desktop.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.WindowState.FullscreenBorderless">
            <summary>
            The window is running in non-exclusive fullscreen, where it expands to fill the screen
            at the native desktop resolution.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.WindowState.Maximised">
            <summary>
            The window is running in maximised mode, usually triggered by clicking the operating
            system's maximise button.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.WindowState.Minimised">
            <summary>
            The window is running in minimised mode, usually triggered by clicking the operating
            system's minimise button.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.FullscreenCapability.Unknown">
            <summary>
            Fullscreen capability is unknown.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.FullscreenCapability.Incapable">
            <summary>
            Unable to enter exclusive fullscreen.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.FullscreenCapability.Capable">
            <summary>
            Able to enter exclusive fullscreen.
            </summary>
        </member>
        <member name="P:osu.Framework.Platform.Windows.IWindowsWindow.LastMousePosition">
            <summary>
            The last mouse position as reported by <see cref="M:osu.Framework.Platform.Windows.WindowsMouseHandler.FeedbackMousePositionChange(osuTK.Vector2,System.Boolean)"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm">
            <summary>
            Static class for interacting with the Input Method Manager,
            the interface between applications and the IME.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.CancelComposition(System.IntPtr)">
            <summary>
            Cancels the currently active IME composition (if any).
            Resets the internal composition string and hides the candidate window.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.SetImeAllowed(System.IntPtr,System.Boolean)">
            <summary>
            Sets whether IME is allowed.
            </summary>
            <remarks>
            If IME is disallowed, text input is active and a language that uses IME is selected,
            then IME will be forced into alphanumeric mode, behaving as normal keyboard input (no compositing will happen).
            </remarks>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.InputContext">
            <summary>
            Provides an IMC (Input Method Context) allowing interaction with the IMM (Input Method Manager).
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.InputContext.handle">
            <summary>
            The IMM handle, used as the <c>hImc</c> param of native functions.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.TryGetImeComposition(System.String@,System.Int32@,System.Int32@)">
            <summary>
            Gets the current composition text and selection.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.TryGetImeResult(System.String@)">
            <summary>
            Gets the current result text.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.CancelComposition">
            <summary>
            Cancels the currently active IME composition (if any).
            </summary>
            <remarks>
            Resets the internal composition string and hides the candidate window.
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.tryGetCompositionSize(osu.Framework.Platform.Windows.Native.Imm.CompositionString,System.Int32@)">
            <summary>
            Get the <paramref name="size"/> of the corresponding <paramref name="compositionString"/> from the IMM.
            </summary>
            <remarks>
            The size has a different meaning, depending on the provided <paramref name="compositionString"/>:
              <list type="bullet">
                <item>For most <see cref="T:osu.Framework.Platform.Windows.Native.Imm.CompositionString"/>s, returns the size of buffer required to store the data.</item>
                <item>For <see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_CURSORPOS"/>, returns the cursor position in the current composition text.</item>
              </list>
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.tryGetCompositionString(osu.Framework.Platform.Windows.Native.Imm.CompositionString,System.Int32@,System.Byte[]@)">
            <summary>
            Get the <paramref name="size"/> and <paramref name="data"/> of the corresponding <paramref name="compositionString"/> from the IMM.
            </summary>
            <remarks>
            The <paramref name="size"/> and <paramref name="data"/> have different meanings, depending on the provided <paramref name="compositionString"/>:
              <list type="bullet">
                <item>For <see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPSTR"/> and <see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTSTR"/> data is UTF-16 encoded text.</item>
                <item>For <see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPATTR"/> .</item>
              </list>
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.tryGetCompositionText(osu.Framework.Platform.Windows.Native.Imm.CompositionString,System.String@)">
            <summary>
            Gets the text of the current composition (<see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPSTR"/>) or result (<see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTSTR"/>).
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.isTargetAttribute(System.Byte)">
            <summary>
            Determines whether or not the given attribute represents a target (a.k.a. a selection).
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.tryGetCompositionTargetRange(System.Int32@,System.Int32@)">
            <summary>
            Gets the target range that's selected by the user in the current composition string.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Imm.InputContext.handleInvalidOrClosed">
            <summary>
            Checks whether the <see cref="F:osu.Framework.Platform.Windows.Native.Imm.InputContext.handle"/> is invalid or closed.
            </summary>
            <remarks>Should be checked before calling native functions with the <see cref="F:osu.Framework.Platform.Windows.Native.Imm.InputContext.handle"/>.</remarks>
            <returns><c>true</c> if the handle is invalid.</returns>
            <exception cref="T:System.ObjectDisposedException">Thrown if the <see cref="F:osu.Framework.Platform.Windows.Native.Imm.InputContext.handle"/> was disposed/closed.</exception>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.CompositionString">
            <summary>
            IME composition string values.
            <c>lParam</c> values of <see cref="F:osu.Framework.Platform.Windows.Native.Imm.WM_IME_COMPOSITION"/> event.
            Parameter <c>dwIndex</c> of <see cref="M:osu.Framework.Platform.Windows.Native.Imm.ImmGetCompositionString(osu.Framework.Platform.Windows.Native.Imm.InputContextHandle,osu.Framework.Platform.Windows.Native.Imm.CompositionString,System.Byte[],System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPREADSTR">
            <summary>
            Retrieve or update the reading string of the current composition.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPREADATTR">
            <summary>
            Retrieve or update the <see cref="T:osu.Framework.Platform.Windows.Native.Imm.Attribute"/>s of the reading string of the current composition.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPREADCLAUSE">
            <summary>
            Retrieve or update the clause information of the reading string of the composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPSTR">
            <summary>
            Retrieve or update the current composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPATTR">
            <summary>
            Retrieve or update the <see cref="T:osu.Framework.Platform.Windows.Native.Imm.Attribute"/>s of the composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPCLAUSE">
            <summary>
            Retrieve or update clause information of the composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_CURSORPOS">
            <summary>
            Retrieve or update the cursor position in composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_DELTASTART">
            <summary>
            Retrieve or update the starting position of any changes in composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTREADSTR">
            <summary>
            Retrieve or update the reading string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTREADCLAUSE">
            <summary>
            Retrieve or update clause information of the result string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTSTR">
            <summary>
            Retrieve or update the string of the composition result.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_RESULTCLAUSE">
            <summary>
            Retrieve or update clause information of the result string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.CS_INSERTCHAR">
            <summary>
            Insert the wParam composition character at the current insertion point.
            An application should display the composition character if it processes this message.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.CS_NOMOVECARET">
            <summary>
            Do not move the caret position as a result of processing the message.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.Attribute">
            <summary>
            Attribute for each character in the current composition string (<see cref="F:osu.Framework.Platform.Windows.Native.Imm.CompositionString.GCS_COMPSTR"/>).
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_INPUT">
            <summary>
            Character being entered by the user. The IME has yet to convert this character.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_TARGET_CONVERTED">
            <summary>
            Character selected by the user and then converted by the IME.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_CONVERTED">
            <summary>
            Character that the IME has already converted.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_TARGET_NOTCONVERTED">
            <summary>
            Character being converted. The user has selected this character but the IME has not yet converted it.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_INPUT_ERROR">
            <summary>
            An error character that the IME cannot convert. For example, the IME cannot put together some consonants.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.Attribute.ATTR_FIXEDCONVERTED">
            <summary>
            Character that the IME will no longer convert.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.NotificationCode">
            <summary>
            dwAction for <see cref="M:osu.Framework.Platform.Windows.Native.Imm.ImmNotifyIME(osu.Framework.Platform.Windows.Native.Imm.InputContextHandle,osu.Framework.Platform.Windows.Native.Imm.NotificationCode,System.UInt32,System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_OPENCANDIDATE">
            <summary>
            An application directs the IME to open a candidate list.
            The dwIndex parameter specifies the index of the list to open, and dwValue is not used.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_CLOSECANDIDATE">
            <summary>
            An application directs the IME to close a candidate list.
            The dwIndex parameter specifies an index of the list to close, and dwValue is not used.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_SELECTCANDIDATESTR">
            <summary>
            An application has selected one of the candidates.
            The dwIndex parameter specifies an index of a candidate list to be selected.
            The dwValue parameter specifies an index of a candidate string in the selected candidate list.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_CHANGECANDIDATELIST">
            <summary>
            An application changed the current selected candidate.
            The dwIndex parameter specifies an index of a candidate list to be selected and dwValue is not used.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_COMPOSITIONSTR">
            <summary>
            An application directs the IME to carry out an action on the composition string.
            The dwIndex parameter can be from <see cref="T:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_SETCANDIDATE_PAGESTART">
            <summary>
            The application changes the page starting index of a candidate list.
            The dwIndex parameter specifies the candidate list to be changed and must have a value in the range 0 to 3.
            The dwValue parameter specifies the new page start index.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_SETCANDIDATE_PAGESIZE">
            <summary>
            The application changes the page size of a candidate list.
            The dwIndex parameter specifies the candidate list to be changed and must have a value in the range 0 to 3.
            The dwValue parameter specifies the new page size.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_IMEMENUSELECTED">
            <summary>
            An application directs the IME to allow the application to handle the specified menu.
            The dwIndex parameter specifies the ID of the menu and dwValue is an application-defined value for that menu item.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction">
            <summary>
            dwIndex for <see cref="M:osu.Framework.Platform.Windows.Native.Imm.ImmNotifyIME(osu.Framework.Platform.Windows.Native.Imm.InputContextHandle,osu.Framework.Platform.Windows.Native.Imm.NotificationCode,System.UInt32,System.UInt32)"/> when using <see cref="F:osu.Framework.Platform.Windows.Native.Imm.NotificationCode.NI_COMPOSITIONSTR"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction.CPS_COMPLETE">
            <summary>
            Set the composition string as the result string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction.CPS_CONVERT">
            <summary>
            Convert the composition string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction.CPS_REVERT">
            <summary>
            Cancel the current composition string and set the composition string to be the unconverted string.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.CompositionStringAction.CPS_CANCEL">
            <summary>
            Clear the composition string and set the status to no composition string.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.Imm.AssociationFlags">
            <summary>
            Flags specifying the type of association between the window and the input method context.
            dwFlags for <see cref="M:osu.Framework.Platform.Windows.Native.Imm.ImmAssociateContextEx(System.IntPtr,System.IntPtr,osu.Framework.Platform.Windows.Native.Imm.AssociationFlags)"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.AssociationFlags.IACE_CHILDREN">
            <summary>
            Associate the input method context to the child windows of the specified window only.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.AssociationFlags.IACE_DEFAULT">
            <summary>
            Restore the default input method context of the window.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Imm.AssociationFlags.IACE_IGNORENOCONTEXT">
            <summary>
            Do not associate the input method context with windows that are not associated with any input method context.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.Input.touch_flag">
            <summary>
            Flag distinguishing touch input from mouse input in <see cref="F:osu.Framework.Platform.Windows.Native.Input.WM_INPUT"/> events.
            </summary>
            <remarks>
            https://docs.microsoft.com/en-us/windows/win32/tablet/system-events-and-mouse-messages
            <para>Additionally, the eighth bit, masked by 0x80, is used to differentiate touch input from pen input (0 = pen, 1 = touch).</para>
            </remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Input.IsTouchEvent(System.Int64)">
            <summary>
            https://docs.microsoft.com/en-us/windows/win32/tablet/system-events-and-mouse-messages
            </summary>
            <param name="dw"><see cref="M:osu.Framework.Platform.Windows.Native.Input.GetMessageExtraInfo"/> for the current <see cref="F:osu.Framework.Platform.Windows.Native.Input.WM_INPUT"/> event.</param>
            <returns><c>true</c> if this <see cref="F:osu.Framework.Platform.Windows.Native.Input.WM_INPUT"/> event is from a finger touch, <c>false</c> if it's from mouse or pen input.</returns>
        </member>
        <member name="M:osu.Framework.Platform.Windows.Native.Input.HasTouchFlag(System.Int64)">
            <param name="extraInformation"><see cref="F:osu.Framework.Platform.Windows.Native.RawMouse.ExtraInformation"/> or <see cref="M:osu.Framework.Platform.Windows.Native.Input.GetMessageExtraInfo"/></param>
            <returns>Whether <paramref name="extraInformation"/> has the <see cref="F:osu.Framework.Platform.Windows.Native.Input.touch_flag"/> set.</returns>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawInputData">
            <summary>
            Value type for raw input.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputData.Header">
            <summary>Header for the data.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputData.Mouse">
            <summary>Mouse raw input data.</summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawMouse">
            <summary>
            Contains information about the state of the mouse.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.Flags">
            <summary>
            The mouse state.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.ButtonFlags">
            <summary>
            Flags for the event.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.ButtonData">
            <summary>
            If the mouse wheel is moved, this will contain the delta amount.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.RawButtons">
            <summary>
            Raw button data.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.LastX">
            <summary>
            The motion in the X direction. This is signed relative motion or
            absolute motion, depending on the value of usFlags.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.LastY">
            <summary>
            The motion in the Y direction. This is signed relative motion or absolute motion,
            depending on the value of usFlags.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouse.ExtraInformation">
            <summary>
            The device-specific additional information for the event.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawMouseFlags">
            <summary>
            Enumeration containing the flags for raw mouse data.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseFlags.MoveRelative">
            <summary>Relative to the last position.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseFlags.MoveAbsolute">
            <summary>Absolute positioning.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseFlags.VirtualDesktop">
            <summary>Coordinate data is mapped to a virtual desktop.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseFlags.AttributesChanged">
            <summary>Attributes for the mouse have changed.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseFlags.MoveNoCoalesce">
            <summary>WM_MOUSEMOVE and WM_INPUT don't coalesce</summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawMouseButtons">
            <summary>
            Enumeration containing the button data for raw mouse input.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.None">
            <summary>No button.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.LeftDown">
            <summary>Left (button 1) down.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.LeftUp">
            <summary>Left (button 1) up.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.RightDown">
            <summary>Right (button 2) down.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.RightUp">
            <summary>Right (button 2) up.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.MiddleDown">
            <summary>Middle (button 3) down.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.MiddleUp">
            <summary>Middle (button 3) up.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.Button4Down">
            <summary>Button 4 down.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.Button4Up">
            <summary>Button 4 up.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.Button5Down">
            <summary>Button 5 down.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.Button5Up">
            <summary>Button 5 up.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawMouseButtons.MouseWheel">
            <summary>Mouse wheel moved.</summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawInputCommand">
            <summary>
            Enumeration contanining the command types to issue.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputCommand.Input">
            <summary>
            Get input data.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputCommand.Header">
            <summary>
            Get header data.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawInputType">
            <summary>
            Enumeration containing the type device the raw input is coming from.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputType.Mouse">
            <summary>
            Mouse input.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputType.Keyboard">
            <summary>
            Keyboard input.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputType.HID">
            <summary>
            Another device that is not the keyboard or the mouse.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawInputHeader">
            <summary>
            Value type for a raw input header.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputHeader.Type">
            <summary>Type of device the input is coming from.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputHeader.Size">
            <summary>Size of the packet of data.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputHeader.Device">
            <summary>Handle to the device sending the data.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputHeader.wParam">
            <summary>wParam from the window message.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDevice.UsagePage">
            <summary>Top level collection Usage page for the raw input device.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDevice.Usage">
            <summary>Top level collection Usage for the raw input device. </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDevice.Flags">
            <summary>Mode flag that specifies how to interpret the information provided by UsagePage and Usage.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDevice.WindowHandle">
            <summary>Handle to the target device. If NULL, it follows the keyboard focus.</summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags">
            <summary>Enumeration containing flags for a raw input device.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.None">
            <summary>No flags.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.Remove">
            <summary>If set, this removes the top level collection from the inclusion list. This tells the operating system to stop reading from a device which matches the top level collection.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.Exclude">
            <summary>If set, this specifies the top level collections to exclude when reading a complete usage page. This flag only affects a TLC whose usage page is already specified with PageOnly.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.PageOnly">
            <summary>If set, this specifies all devices whose top level collection is from the specified usUsagePage. Note that Usage must be zero. To exclude a particular top level collection, use Exclude.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.NoLegacy">
            <summary>If set, this prevents any devices specified by UsagePage or Usage from generating legacy messages. This is only for the mouse and keyboard.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.InputSink">
            <summary>If set, this enables the caller to receive the input even when the caller is not in the foreground. Note that WindowHandle must be specified.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.CaptureMouse">
            <summary>If set, the mouse button click does not activate the other window.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.NoHotKeys">
            <summary>If set, the application-defined keyboard device hotkeys are not handled. However, the system hotkeys; for example, ALT+TAB and CTRL+ALT+DEL, are still handled. By default, all keyboard hotkeys are handled. NoHotKeys can be specified even if NoLegacy is not specified and WindowHandle is NULL.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.Native.RawInputDeviceFlags.AppKeys">
            <summary>If set, application keys are handled.  NoLegacy must be specified.  Keyboard only.</summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.applyBorderlessWindowHack">
            <summary>
            Whether to apply the <see cref="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.windows_borderless_width_hack"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.SDL2WindowsWindow.warpCursorFromFocusLoss">
            <summary>
            If required, warps the OS cursor to match the framework cursor position.
            </summary>
            <remarks>
            The normal warp in <see cref="M:osu.Framework.Input.Handlers.Mouse.MouseHandler.transferLastPositionToHostCursor"/> doesn't work in fullscreen,
            as it is called when the window has already lost focus and is minimized.
            So we do an out-of-band warp, immediately after receiving the <see cref="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.wm_killfocus"/> message.
            </remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.imeCompositionActive">
            <summary>
            Whether IME composition is active.
            </summary>
            <remarks>Used for blocking SDL IME results since we handle those ourselves.</remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.lastImeResult">
            <summary>
            The last IME result.
            </summary>
            <remarks>
            Used for blocking SDL IME results since we handle those ourselves.
            Cleared when the SDL events are blocked.
            </remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL2WindowsWindow.windows_borderless_width_hack">
            <summary>
            Amount of extra width added to window size when in borderless mode on Windows.
            Some drivers require this to avoid the window switching to exclusive fullscreen automatically.
            </summary>
            <remarks>Used on <see cref="F:osu.Framework.Platform.GraphicsSurfaceType.OpenGL"/> and <see cref="F:osu.Framework.Platform.GraphicsSurfaceType.Vulkan"/>.</remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.SDL2WindowsWindow.SetIconFromGroup(osu.Framework.Platform.IconGroup)">
            <summary>
            On Windows, SDL will use the same image for both large and small icons (scaled as necessary).
            This can look bad if scaling down a large image, so we use the Windows API directly so as
            to get a cleaner icon set than SDL can provide.
            If called before the window has been created, or we do not find two separate icon sizes, we fall back to the base method.
            </summary>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL3WindowsWindow.applyBorderlessWindowHack">
            <summary>
            Whether to apply the <see cref="F:osu.Framework.Platform.Windows.SDL3WindowsWindow.windows_borderless_width_hack"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Platform.Windows.SDL3WindowsWindow.warpCursorFromFocusLoss">
            <summary>
            If required, warps the OS cursor to match the framework cursor position.
            </summary>
            <remarks>
            The normal warp in <see cref="M:osu.Framework.Input.Handlers.Mouse.MouseHandler.transferLastPositionToHostCursor"/> doesn't work in fullscreen,
            as it is called when the window has already lost focus and is minimized.
            So we do an out-of-band warp, immediately after receiving the <see cref="F:SDL.SDL_EventType.SDL_EVENT_WINDOW_FOCUS_LOST"/> message.
            </remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL3WindowsWindow.imeCompositionActive">
            <summary>
            Whether IME composition is active.
            </summary>
            <remarks>Used for blocking SDL IME results since we handle those ourselves.</remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL3WindowsWindow.lastImeResult">
            <summary>
            The last IME result.
            </summary>
            <remarks>
            Used for blocking SDL IME results since we handle those ourselves.
            Cleared when the SDL events are blocked.
            </remarks>
        </member>
        <member name="F:osu.Framework.Platform.Windows.SDL3WindowsWindow.windows_borderless_width_hack">
            <summary>
            Amount of extra width added to window size when in borderless mode on Windows.
            Some drivers require this to avoid the window switching to exclusive fullscreen automatically.
            </summary>
            <remarks>Used on <see cref="F:osu.Framework.Platform.GraphicsSurfaceType.OpenGL"/> and <see cref="F:osu.Framework.Platform.GraphicsSurfaceType.Vulkan"/>.</remarks>
        </member>
        <member name="M:osu.Framework.Platform.Windows.SDL3WindowsWindow.SetIconFromGroup(osu.Framework.Platform.IconGroup)">
            <summary>
            On Windows, SDL will use the same image for both large and small icons (scaled as necessary).
            This can look bad if scaling down a large image, so we use the Windows API directly so as
            to get a cleaner icon set than SDL can provide.
            If called before the window has been created, or we do not find two separate icon sizes, we fall back to the base method.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.TimePeriod">
            <summary>
            Set the windows multimedia timer to a specific accuracy.
            </summary>
        </member>
        <member name="T:osu.Framework.Platform.Windows.WindowsMouseHandler">
            <summary>
            A windows specific mouse input handler which overrides the SDL3 implementation of raw input.
            This is done to better handle quirks of some devices.
            </summary>
        </member>
        <member name="P:osu.Framework.RuntimeInfo.StartupDirectory">
            <summary>
            The absolute path to the startup directory of this game.
            </summary>
        </member>
        <member name="M:osu.Framework.RuntimeInfo.GetFrameworkAssemblyPath">
            <summary>
            Returns the absolute path of osu.Framework.dll.
            </summary>
        </member>
        <member name="P:osu.Framework.RuntimeInfo.EntryAssembly">
            <summary>
            Gets the entry assembly.
            When running under NUnit, the assembly of the current test will be returned instead.
            </summary>
            <returns>The entry assembly.</returns>
        </member>
        <member name="P:osu.Framework.Screens.IScreen.ValidForResume">
            <summary>
            Whether this <see cref="T:osu.Framework.Screens.IScreen"/> can be resumed.
            </summary>
        </member>
        <member name="P:osu.Framework.Screens.IScreen.ValidForPush">
            <summary>
            Whether this <see cref="T:osu.Framework.Screens.IScreen"/> can be pushed.
            </summary>
        </member>
        <member name="M:osu.Framework.Screens.IScreen.OnEntering(osu.Framework.Screens.ScreenTransitionEvent)">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Screens.IScreen"/> is entering from a parent <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Screens.ScreenTransitionEvent"/> containing information about the screen event.</param>
        </member>
        <member name="M:osu.Framework.Screens.IScreen.OnExiting(osu.Framework.Screens.ScreenExitEvent)">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Screens.IScreen"/> is exiting to a parent <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Screens.ScreenExitEvent"/> containing information about the screen event.</param>
            <returns>True to cancel the exit process.</returns>
        </member>
        <member name="M:osu.Framework.Screens.IScreen.OnResuming(osu.Framework.Screens.ScreenTransitionEvent)">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Screens.IScreen"/> is entered from a child <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Screens.ScreenTransitionEvent"/> containing information about the screen event.</param>
        </member>
        <member name="M:osu.Framework.Screens.IScreen.OnSuspending(osu.Framework.Screens.ScreenTransitionEvent)">
            <summary>
            Invoked when this <see cref="T:osu.Framework.Screens.IScreen"/> is exited to a child <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="e">The <see cref="T:osu.Framework.Screens.ScreenTransitionEvent"/> containing information about the screen event.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.Push(osu.Framework.Screens.IScreen,osu.Framework.Screens.IScreen)">
            <summary>
            Pushes an <see cref="T:osu.Framework.Screens.IScreen"/> to another.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to push to.</param>
            <param name="newScreen">The <see cref="T:osu.Framework.Screens.IScreen"/> to push.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.Exit(osu.Framework.Screens.IScreen)">
            <summary>
            Exits from an <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to exit from.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.MakeCurrent(osu.Framework.Screens.IScreen)">
            <summary>
            Makes an <see cref="T:osu.Framework.Screens.IScreen"/> the current screen, exiting all child <see cref="T:osu.Framework.Screens.IScreen"/>s along the way.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to make current.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.IsCurrentScreen(osu.Framework.Screens.IScreen)">
            <summary>
            Retrieves whether an <see cref="T:osu.Framework.Screens.IScreen"/> is the current screen.
            This will return false on all <see cref="T:osu.Framework.Screens.IScreen"/>s while a child <see cref="T:osu.Framework.Screens.IScreen"/> is loading.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to check.</param>
            <returns>True if <paramref name="screen"/> is the current screen.</returns>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.GetChildScreen(osu.Framework.Screens.IScreen)">
            <summary>
            Retrieves the child <see cref="T:osu.Framework.Screens.IScreen"/> of an <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to retrieve the child of.</param>
            <returns>The child <see cref="T:osu.Framework.Screens.IScreen"/> of <paramref name="screen"/>, or null if <paramref name="screen"/> has no child.</returns>
        </member>
        <member name="M:osu.Framework.Screens.ScreenExtensions.GetParentScreen(osu.Framework.Screens.IScreen)">
            <summary>
            Retrieves the parent <see cref="T:osu.Framework.Screens.IScreen"/> of an <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to retrieve the parent of.</param>
            <returns>The parent <see cref="T:osu.Framework.Screens.IScreen"/> of <paramref name="screen"/>, or null if <paramref name="screen"/> has no parent.</returns>
        </member>
        <member name="T:osu.Framework.Screens.ScreenExitEvent">
            <summary>
            Denotes a screen exit event.
            </summary>
        </member>
        <member name="P:osu.Framework.Screens.ScreenExitEvent.Destination">
            <summary>
            The final <see cref="T:osu.Framework.Screens.IScreen"/> of this exit operation.
            </summary>
        </member>
        <member name="T:osu.Framework.Screens.ScreenStack">
            <summary>
            A component which provides functionality for displaying and handling transitions between multiple <see cref="T:osu.Framework.Screens.IScreen"/>s.
            </summary>
        </member>
        <member name="E:osu.Framework.Screens.ScreenStack.ScreenPushed">
            <summary>
            Invoked when <see cref="M:osu.Framework.Screens.ScreenExtensions.Push(osu.Framework.Screens.IScreen,osu.Framework.Screens.IScreen)"/> is called on a <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
        </member>
        <member name="E:osu.Framework.Screens.ScreenStack.ScreenExited">
            <summary>
            Invoked when <see cref="M:osu.Framework.Screens.ScreenExtensions.Exit(osu.Framework.Screens.IScreen)"/> is called on a <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Screens.ScreenStack.CurrentScreen">
            <summary>
            The currently-active <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Screens.ScreenStack.exited">
            <summary>
            Screens which are exited and require manual cleanup.
            </summary>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.#ctor(osu.Framework.Screens.IScreen,System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Screens.ScreenStack"/>, and immediately pushes a <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="baseScreen">The initial <see cref="T:osu.Framework.Screens.IScreen"/> to be loaded</param>
            <param name="suspendImmediately">Whether <see cref="M:osu.Framework.Screens.IScreen.OnSuspending(osu.Framework.Screens.ScreenTransitionEvent)"/> should be called immediately, or wait for the next screen to be loaded first.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.#ctor(System.Boolean)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Screens.ScreenStack"/> with no active <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="suspendImmediately">Whether <see cref="M:osu.Framework.Screens.IScreen.OnSuspending(osu.Framework.Screens.ScreenTransitionEvent)"/> should be called immediately, or wait for the next screen to be loaded first.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.Push(osu.Framework.Screens.IScreen)">
            <summary>
            Pushes a <see cref="T:osu.Framework.Screens.IScreen"/> to this <see cref="T:osu.Framework.Screens.ScreenStack"/>.
            </summary>
            <remarks>
            An <see cref="T:osu.Framework.Screens.IScreen"/> cannot be pushed multiple times.
            </remarks>
            <param name="screen">The <see cref="T:osu.Framework.Screens.IScreen"/> to push.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.Exit">
            <summary>
            Exits the current <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.finishPush(osu.Framework.Screens.IScreen,osu.Framework.Screens.IScreen)">
            <summary>
            Complete push of a loaded screen.
            </summary>
            <param name="parent">The screen to push to.</param>
            <param name="child">The new screen being pushed.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.suspend(osu.Framework.Screens.IScreen,osu.Framework.Screens.IScreen)">
            <summary>
            Complete suspend of a screen in the stack.
            </summary>
            <param name="from">The screen being suspended.</param>
            <param name="to">The screen being entered.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.LoadScreen(osu.Framework.Graphics.Containers.CompositeDrawable,osu.Framework.Graphics.Drawable,System.Action)">
            <summary>
            Loads a <see cref="T:osu.Framework.Screens.IScreen"/> through a <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/>.
            </summary>
            <param name="loader">The <see cref="T:osu.Framework.Graphics.Containers.CompositeDrawable"/> to load <paramref name="toLoad"/> with.</param>
            <param name="toLoad">The <see cref="T:osu.Framework.Screens.IScreen"/> to load.</param>
            <param name="continuation">The <see cref="T:System.Action"/> to invoke after <paramref name="toLoad"/> has finished loading.</param>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.exitFrom(osu.Framework.Screens.IScreen,System.Boolean,System.Boolean,osu.Framework.Screens.IScreen)">
            <summary>
            Exits the current <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="source">The <see cref="T:osu.Framework.Screens.IScreen"/> which last exited.</param>
            <param name="shouldFireExitEvent">Whether <see cref="M:osu.Framework.Screens.IScreen.OnExiting(osu.Framework.Screens.ScreenExitEvent)"/> should be fired on the exiting screen.</param>
            <param name="shouldFireResumeEvent">Whether <see cref="M:osu.Framework.Screens.IScreen.OnResuming(osu.Framework.Screens.ScreenTransitionEvent)"/> should be fired on the resuming screen.</param>
            <param name="destination">The final <see cref="T:osu.Framework.Screens.IScreen"/> of an exit operation.</param>
            <returns>Whether the exit was blocked.</returns>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.onExited(osu.Framework.Screens.IScreen,osu.Framework.Screens.IScreen)">
            <summary>
            Unbind and return leases for all <see cref="T:osu.Framework.Bindables.Bindable`1"/>s managed by the exiting screen.
            </summary>
            <remarks>
            While all bindables will eventually be cleaned up by disposal logic, this is too late as
            leases could potentially be in a leased state during exiting transitions.
            This method should be called after exiting is confirmed to ensure a correct leased state before <see cref="M:osu.Framework.Screens.IScreen.OnResuming(osu.Framework.Screens.ScreenTransitionEvent)"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Screens.ScreenStack.resumeFrom(osu.Framework.Screens.IScreen)">
            <summary>
            Resumes the current <see cref="T:osu.Framework.Screens.IScreen"/>.
            </summary>
            <param name="source">The <see cref="T:osu.Framework.Screens.IScreen"/> which exited.</param>
        </member>
        <member name="T:osu.Framework.Screens.ScreenChangedDelegate">
            <param name="lastScreen">The <see cref="T:osu.Framework.Screens.IScreen"/> that was exited or suspended.</param>
            <param name="newScreen">The <see cref="T:osu.Framework.Screens.IScreen"/> that was pushed or resumed.</param>
        </member>
        <member name="T:osu.Framework.Screens.ScreenTransitionEvent">
            <summary>
            Denotes a screen transition event.
            </summary>
        </member>
        <member name="P:osu.Framework.Screens.ScreenTransitionEvent.Last">
            <summary>
            The <see cref="T:osu.Framework.Screens.IScreen"/> which has been transitioned from.
            </summary>
        </member>
        <member name="P:osu.Framework.Screens.ScreenTransitionEvent.Next">
            <summary>
            The <see cref="T:osu.Framework.Screens.IScreen"/> which has been transitioned to.
            </summary>
        </member>
        <member name="T:osu.Framework.Statistics.BackgroundStackTraceCollector">
            <summary>
            Spawn a thread to collect real-time stack traces of the targeted thread.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.BackgroundStackTraceCollector.#ctor(System.Threading.Thread,osu.Framework.Timing.StopwatchClock,System.String)">
            <summary>
            Create a collector for the target thread. Starts in a disabled state (see <see cref="P:osu.Framework.Statistics.BackgroundStackTraceCollector.Enabled"/>.
            </summary>
            <param name="targetThread">The thread to monitor.</param>
            <param name="clock">The clock to use for elapsed time checks.</param>
            <param name="threadName">A name used for tracking purposes. Can be used to track potentially changing threads under a single name.</param>
        </member>
        <member name="P:osu.Framework.Statistics.BackgroundStackTraceCollector.Enabled">
            <summary>
            Whether this collector is currently running.
            </summary>
        </member>
        <member name="F:osu.Framework.Statistics.StatisticsCounterType.CCL">
            <summary>
            See <see cref="M:osu.Framework.Graphics.Containers.CompositeDrawable.CheckChildrenLife"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Statistics.GlobalStatistics">
            <summary>
            A store that can be used to track application-wide statistics and monitor runtime components.
            </summary>
        </member>
        <member name="E:osu.Framework.Statistics.GlobalStatistics.StatisticsChanged">
            <summary>
            An event which is raised when the available statistics change.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.GlobalStatistics.Get``1(System.String,System.String)">
            <summary>
            Retrieve a <see cref="T:osu.Framework.Statistics.IGlobalStatistic"/> of specified type.
            If no matching statistic already exists, a new instance is created and registered automatically.
            </summary>
            <param name="group">The group specification.</param>
            <param name="name">The name specification.</param>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="M:osu.Framework.Statistics.GlobalStatistics.Clear(System.String)">
            <summary>
            Clear all statistics.
            </summary>
            <param name="group">An optional group identifier, limiting the clear operation to the matching group.</param>
        </member>
        <member name="M:osu.Framework.Statistics.GlobalStatistics.Remove(osu.Framework.Statistics.IGlobalStatistic)">
            <summary>
            Remove a specific statistic.
            </summary>
            <param name="statistic">The statistic to remove.</param>
        </member>
        <member name="M:osu.Framework.Statistics.GlobalStatistics.register(osu.Framework.Statistics.IGlobalStatistic)">
            <summary>
            Register a new statistic type.
            </summary>
            <param name="stat">The statistic to register.</param>
        </member>
        <member name="P:osu.Framework.Statistics.IGlobalStatistic.Group">
            <summary>
            Statistic's visual grouping.
            </summary>
        </member>
        <member name="P:osu.Framework.Statistics.IGlobalStatistic.Name">
            <summary>
            Statistic's identifier.
            </summary>
        </member>
        <member name="P:osu.Framework.Statistics.IGlobalStatistic.DisplayValue">
            <summary>
            Human readable value.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.IGlobalStatistic.Clear">
            <summary>
            Clear the value of this statistic.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.PerformanceMonitor.MakeCurrent">
            <summary>
            Switch target thread to <see cref="P:System.Threading.Thread.CurrentThread"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.PerformanceMonitor.BeginCollecting(osu.Framework.Statistics.PerformanceCollectionType)">
            <summary>
            Start collecting a type of passing time.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.PerformanceMonitor.endCollecting(osu.Framework.Statistics.PerformanceCollectionType)">
            <summary>
            End collecting a type of passing time (that was previously started).
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:osu.Framework.Statistics.PerformanceMonitor.NewFrame">
            <summary>
            Resets all frame statistics. Run exactly once per frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.TypePerformanceMonitor.BeginCollecting(System.Object)">
            <summary>
            Start collecting time for a specific object type.
            </summary>
        </member>
        <member name="M:osu.Framework.Statistics.TypePerformanceMonitor.EndCollecting(System.Object)">
            <summary>
            End collecting time for a specific object type.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.Dependencies.CachedNullableProvider">
            <summary>
            Used for internal <see cref="T:osu.Framework.Allocation.DependencyContainer"/> testing purposes.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.Dependencies.CachedStructProvider">
            <summary>
            This is used for internal <see cref="T:osu.Framework.Allocation.DependencyContainer"/> testing purposes.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.Dependencies.PartialCachedNullableProvider">
            <summary>
            Used for internal <see cref="T:osu.Framework.Allocation.DependencyContainer"/> testing purposes.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.Dependencies.PartialCachedStructProvider">
            <summary>
            This is used for internal <see cref="T:osu.Framework.Allocation.DependencyContainer"/> testing purposes.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.Drawables.Steps.StepButton.Reset">
            <summary>
            Reset this step to a default state.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.GridTestScene">
            <summary>
            An abstract test case which exposes small cells arranged in a grid.
            Useful for displaying multiple configurations of a tested component at a glance.
            </summary>
        </member>
        <member name="F:osu.Framework.Testing.GridTestScene.Rows">
            <summary>
            The amount of rows in the grid.
            </summary>
        </member>
        <member name="F:osu.Framework.Testing.GridTestScene.Cols">
            <summary>
            The amount of columns in the grid.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.GridTestScene.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a grid test case with the given dimensions.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.HeadlessTestAttribute">
            <summary>
            Denotes a "visual" test which should only be run in a headless context.
            This will stop the test from showing up in a <see cref="T:osu.Framework.Testing.TestBrowser"/>.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.HotReloadCallbackReceiver">
            <summary>
            Receives callbacks upon .NET Hot Reloads.
            </summary>
        </member>
        <member name="P:osu.Framework.Testing.Input.ManualInputManager.ShowVisualCursorGuide">
            <summary>
            Whether to show a visible cursor tracking position and clicks.
            Generally should be enabled unless it blocks the test's content.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.PressKey(osuTK.Input.Key)">
            <summary>
            Press a key down. Release with <see cref="M:osu.Framework.Testing.Input.ManualInputManager.ReleaseKey(osuTK.Input.Key)"/>.
            </summary>
            <remarks>
            To press and release a key immediately, use <see cref="M:osu.Framework.Testing.Input.ManualInputManager.Key(osuTK.Input.Key)"/>.
            </remarks>
            <param name="key">The key to press.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.ReleaseKey(osuTK.Input.Key)">
            <summary>
            Release a pressed key.
            </summary>
            <param name="key">The key to release.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.Key(osuTK.Input.Key)">
            <summary>
            Press and release the specified key.
            </summary>
            <param name="key">The key to actuate.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.Keys(osu.Framework.Input.PlatformAction)">
            <summary>
            Press and release the keys in the specified <see cref="T:osu.Framework.Input.PlatformAction"/>.
            </summary>
            <param name="action">The platform action to actuate.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.Click(osuTK.Input.MouseButton)">
            <summary>
            Press and release the specified button.
            </summary>
            <param name="button">The button to press and release.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.PressButton(osuTK.Input.MouseButton)">
            <summary>
            Press a mouse button down. Release with <see cref="M:osu.Framework.Testing.Input.ManualInputManager.ReleaseButton(osuTK.Input.MouseButton)"/>.
            </summary>
            <remarks>
            To press and release a mouse button immediately, use <see cref="M:osu.Framework.Testing.Input.ManualInputManager.Click(osuTK.Input.MouseButton)"/>.
            </remarks>
            <param name="button">The button to press.</param>
        </member>
        <member name="M:osu.Framework.Testing.Input.ManualInputManager.ReleaseButton(osuTK.Input.MouseButton)">
            <summary>
            Release a pressed mouse button.
            </summary>
            <param name="button">The button to release.</param>
        </member>
        <member name="T:osu.Framework.Testing.ManualInputManagerTestScene">
            <summary>
            An abstract test case which is tested with manual input management.
            </summary>
        </member>
        <member name="P:osu.Framework.Testing.ManualInputManagerTestScene.InitialMousePosition">
            <summary>
            The position which is used to initialize the mouse position before at setup.
            </summary>
        </member>
        <member name="P:osu.Framework.Testing.ManualInputManagerTestScene.InputManager">
            <summary>
            The <see cref="T:osu.Framework.Testing.Input.ManualInputManager"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.ManualInputManagerTestScene.ResetInput">
            <summary>
            Releases all pressed keys and buttons and initialize mouse position.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.MenuTestScene">
            <summary>
            A test scene that provides a set of helper functions and structures for testing a <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.ClickItem(System.Int32,System.Int32)">
            <summary>
            Click an item in a menu.
            </summary>
            <param name="menuIndex">The level of menu our click targets.</param>
            <param name="itemIndex">The item to click in the menu.</param>
        </member>
        <member name="T:osu.Framework.Testing.MenuTestScene.MenuStructure">
            <summary>
            Helper class used to retrieve various internal properties/items from a <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.MenuStructure.GetMenuItems">
            <summary>
            Retrieves the <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/>s of the <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> represented by this <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.MenuStructure.GetSelectedIndex">
            <summary>
            Finds the <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> index in the <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> represented by this <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/> that
            has <see cref="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.State"/> set to <see cref="F:osu.Framework.Graphics.UserInterface.MenuItemState.Selected"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.MenuStructure.SetSelectedState(System.Int32,osu.Framework.Graphics.UserInterface.MenuItemState)">
            <summary>
            Sets the <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> <see cref="P:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem.State"/> at the specified index to a specified state.
            </summary>
            <param name="index">The index of the <see cref="T:osu.Framework.Graphics.UserInterface.Menu.DrawableMenuItem"/> to set the state of.</param>
            <param name="state">The state to be set.</param>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.MenuStructure.GetSubMenu(System.Int32)">
            <summary>
            Retrieves the sub-<see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> at an index-offset from the current <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="index">The sub-<see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> index. An index of 0 is the <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> represented by this <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/>.</param>
        </member>
        <member name="M:osu.Framework.Testing.MenuTestScene.MenuStructure.GetSubStructure(System.Int32)">
            <summary>
            Generates a new <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/> for the a sub-<see cref="T:osu.Framework.Graphics.UserInterface.Menu"/>.
            </summary>
            <param name="index">The sub-<see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> index to generate the <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/> for. An index of 0 is the <see cref="T:osu.Framework.Graphics.UserInterface.Menu"/> represented by this <see cref="T:osu.Framework.Testing.MenuTestScene.MenuStructure"/>.</param>
        </member>
        <member name="T:osu.Framework.Testing.SetUpStepsAttribute">
            <summary>
            Denotes a method which adds <see cref="T:osu.Framework.Testing.TestScene"/> steps.
            Invoked via <see cref="M:osu.Framework.Testing.TestScene.RunSetUpSteps"/> (which is called from nUnit's [SetUp] or <see cref="M:osu.Framework.Testing.TestBrowser.LoadTest(System.Type,System.Action,System.Boolean)"/>).
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.SoloAttribute">
            <summary>
            Denotes a single test method which will be "solo"ed during visual execution.
            This implies all other tests will be ignored.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.TearDownStepsAttribute">
            <summary>
            Denotes a method which adds <see cref="T:osu.Framework.Testing.TestScene"/> steps at the end.
            Invoked via <see cref="M:osu.Framework.Testing.TestScene.RunTearDownSteps"/> (which is called from nUnit's [TearDown] or <see cref="M:osu.Framework.Testing.TestBrowser.LoadTest(System.Type,System.Action,System.Boolean)"/>).
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.TemporaryNativeStorage">
            <summary>
            A temporary storage that can be used for testing purposes.
            Writes files to the OS temporary directory and cleans up on disposal.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.TestBrowser.#ctor(System.String)">
            <summary>
            Creates a new TestBrowser that displays the TestCases of every assembly that start with either "osu" or the specified namespace (if it isn't null)
            </summary>
            <param name="assemblyNamespace">Assembly prefix which is used to match assemblies whose tests should be displayed</param>
        </member>
        <member name="F:osu.Framework.Testing.RecordState.Normal">
            <summary>
            The game is playing back normally.
            </summary>
        </member>
        <member name="F:osu.Framework.Testing.RecordState.Recording">
            <summary>
            Drawn game frames are currently being recorded.
            </summary>
        </member>
        <member name="F:osu.Framework.Testing.RecordState.Stopped">
            <summary>
            The default game playback is stopped, recorded frames are being played back.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.TestingExtensions.ChildrenOfType``1(osu.Framework.Graphics.Drawable)">
            <summary>
            Find all children recursively of a specific type. As this is expensive and dangerous, it should only be used for testing purposes.
            </summary>
        </member>
        <member name="T:osu.Framework.Testing.TestRunHeadlessGameHost">
            <summary>
            A GameHost which writes to the system temporary directory, attempting to clean up after the test run completes.
            Also runs in non-realtime (allowing faster test execution) by default.
            </summary>
        </member>
        <member name="P:osu.Framework.Testing.TestScene.TimePerAction">
            <summary>
            Delay between invoking two <see cref="T:osu.Framework.Testing.Drawables.Steps.StepButton"/>s in automatic runs.
            </summary>
        </member>
        <member name="P:osu.Framework.Testing.TestScene.AutomaticallyRunFirstStep">
            <summary>
            Whether to automatically run the the first actual <see cref="T:osu.Framework.Testing.Drawables.Steps.StepButton"/> (one that is not part of <see cref="T:NUnit.Framework.SetUpAttribute">[SetUp]</see> or <see cref="T:osu.Framework.Testing.SetUpStepsAttribute">[SetUpSteps]</see>)
            when the test is first loaded.
            </summary>
            <remarks>
            Defaults to <c>true</c>. Should be set to <c>false</c> if the first step in the first <see cref="T:NUnit.Framework.TestAttribute">test</see> has unwanted-by-default behaviour.
            </remarks>
        </member>
        <member name="F:osu.Framework.Testing.TestScene.nestedGame">
            <summary>
            A nested game instance, if added via <see cref="M:osu.Framework.Testing.TestScene.AddGame(osu.Framework.Game)"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.TestScene.AddGame(osu.Framework.Game)">
            <summary>
            Add a full game instance in a nested state for visual testing.
            </summary>
            <remarks>
            Any previous game added via this method will be disposed if called multiple times.
            </remarks>
            <param name="game">The game to add.</param>
        </member>
        <member name="M:osu.Framework.Testing.TestScene.TestConstructor">
            <summary>
            Tests any steps and assertions in the constructor of this <see cref="T:osu.Framework.Testing.TestScene"/>.
            This test must run before any other tests, as it relies on <see cref="F:osu.Framework.Testing.TestScene.StepsContainer"/> not being cleared and not having any elements.
            </summary>
        </member>
        <member name="M:osu.Framework.Testing.TestScene.RemovePrefix(System.String)">
            <summary>
            Remove the "TestScene" prefix from a name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:osu.Framework.Testing.TestSceneTestRunner.RunTestBlocking(osu.Framework.Testing.TestScene)">
            <summary>
            Blocks execution until a provided <see cref="T:osu.Framework.Testing.TestScene"/> runs to completion.
            </summary>
            <param name="test">The <see cref="T:osu.Framework.Testing.TestScene"/> to run.</param>
        </member>
        <member name="M:osu.Framework.Testing.TestSceneTestRunner.TestRunner.RunTestBlocking(osu.Framework.Testing.TestScene)">
            <summary>
            Blocks execution until a provided <see cref="T:osu.Framework.Testing.TestScene"/> runs to completion.
            </summary>
            <param name="test">The <see cref="T:osu.Framework.Testing.TestScene"/> to run.</param>
        </member>
        <member name="M:osu.Framework.Testing.ITestSceneTestRunner.RunTestBlocking(osu.Framework.Testing.TestScene)">
            <summary>
            Blocks execution until a provided <see cref="T:osu.Framework.Testing.TestScene"/> runs to completion.
            </summary>
            <param name="test">The <see cref="T:osu.Framework.Testing.TestScene"/> to run.</param>
        </member>
        <member name="T:osu.Framework.Text.ICharacterGlyph">
            <summary>
            Interface for an object that contains associated spacing information for a character.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ICharacterGlyph.XOffset">
            <summary>
            How much the current x-position should be moved for drawing. This should not adjust the cursor position.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ICharacterGlyph.YOffset">
            <summary>
            How much the current y-position should be moved for drawing. This should not adjust the cursor position.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ICharacterGlyph.XAdvance">
            <summary>
            How much the current x-position should be moved after drawing a character.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ICharacterGlyph.Baseline">
            <summary>
            The position of the baseline in this glyph.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ICharacterGlyph.Character">
            <summary>
            The character represented by this glyph.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.ICharacterGlyph.GetKerning``1(``0)">
            <summary>
            Retrieves the kerning between this <see cref="T:osu.Framework.Text.CharacterGlyph"/> and the one prior to it.
            </summary>
            <param name="lastGlyph">The <see cref="T:osu.Framework.Text.CharacterGlyph"/> prior to this one.</param>
        </member>
        <member name="T:osu.Framework.Text.ITexturedCharacterGlyph">
            <summary>
            A <see cref="T:osu.Framework.Text.ICharacterGlyph"/> with an associated <see cref="P:osu.Framework.Text.ITexturedCharacterGlyph.Texture"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ITexturedCharacterGlyph.Texture">
            <summary>
            The texture for this character.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ITexturedCharacterGlyph.Width">
            <summary>
            The width of the area that should be drawn.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.ITexturedCharacterGlyph.Height">
            <summary>
            The height of the area that should be drawn.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.TexturedCharacterGlyphExtensions.IsWhiteSpace``1(``0)">
            <summary>
            Whether a <see cref="T:osu.Framework.Text.CharacterGlyph"/> represents a whitespace.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.ITexturedGlyphLookupStore.Get(System.String,System.Char)">
            <summary>
            Retrieves a glyph from the store.
            </summary>
            <param name="fontName">The name of the font.</param>
            <param name="character">The character to retrieve.</param>
            <returns>The character glyph.</returns>
        </member>
        <member name="M:osu.Framework.Text.ITexturedGlyphLookupStore.GetAsync(System.String,System.Char)">
            <summary>
            Retrieves a glyph from the store asynchronously.
            </summary>
            <param name="fontName">The name of the font.</param>
            <param name="character">The character to retrieve.</param>
            <returns>The character glyph.</returns>
        </member>
        <member name="M:osu.Framework.Text.MultilineTextBuilder.#ctor(osu.Framework.Text.ITexturedGlyphLookupStore,osu.Framework.Graphics.Sprites.FontUsage,System.Single,System.Boolean,osuTK.Vector2,osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Text.TextBuilderGlyph},System.Char[],System.Char,System.Char)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <param name="store">The store from which glyphs are to be retrieved from.</param>
            <param name="font">The font to use for glyph lookups from <paramref name="store"/>.</param>
            <param name="maxWidth">The maximum width of the resulting text bounds.</param>
            <param name="useFontSizeAsHeight">True to use the provided <paramref name="font"/> size as the height for each line. False if the height of each individual glyph should be used.</param>
            <param name="startOffset">The offset at which characters should begin being added at.</param>
            <param name="spacing">The spacing between characters.</param>
            <param name="characterList">That list to contain all resulting <see cref="T:osu.Framework.Text.TextBuilderGlyph"/>s.</param>
            <param name="neverFixedWidthCharacters">The characters for which fixed width should never be applied.</param>
            <param name="fallbackCharacter">The character to use if a glyph lookup fails.</param>
            <param name="fixedWidthReferenceCharacter">The character to use to calculate the fixed width width. Defaults to 'm'.</param>
        </member>
        <member name="T:osu.Framework.Text.TextBuilder">
            <summary>
            A text builder for <see cref="T:osu.Framework.Graphics.Sprites.SpriteText"/> and other text-based display components.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilder.Bounds">
            <summary>
            The bounding size of the composite text.
            </summary>
        </member>
        <member name="F:osu.Framework.Text.TextBuilder.Characters">
            <summary>
            The characters generated by this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilder.LineBaseHeight">
            <summary>
            Gets the current base height of the text in this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to access this property on a <see cref="T:osu.Framework.Text.TextBuilder"/> with multiple lines added.
            </exception>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.#ctor(osu.Framework.Text.ITexturedGlyphLookupStore,osu.Framework.Graphics.Sprites.FontUsage,System.Single,System.Boolean,osuTK.Vector2,osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Text.TextBuilderGlyph},System.Char[],System.Char,System.Char)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <param name="store">The store from which glyphs are to be retrieved from.</param>
            <param name="font">The font to use for glyph lookups from <paramref name="store"/>.</param>
            <param name="useFontSizeAsHeight">True to use the provided <see cref="F:osu.Framework.Text.TextBuilder.font"/> size as the height for each line. False if the height of each individual glyph should be used.</param>
            <param name="startOffset">The offset at which characters should begin being added at.</param>
            <param name="spacing">The spacing between characters.</param>
            <param name="maxWidth">The maximum width of the resulting text bounds.</param>
            <param name="characterList">That list to contain all resulting <see cref="T:osu.Framework.Text.TextBuilderGlyph"/>s.</param>
            <param name="neverFixedWidthCharacters">The characters for which fixed width should never be applied.</param>
            <param name="fallbackCharacter">The character to use if a glyph lookup fails.</param>
            <param name="fixedWidthReferenceCharacter">The character to use to calculate the fixed width width. Defaults to 'm'.</param>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.Reset">
            <summary>
            Resets this <see cref="T:osu.Framework.Text.TextBuilder"/> to a default state.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilder.CanAddCharacters">
            <summary>
            Whether characters can be added to this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.AddText(System.String)">
            <summary>
            Appends text to this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <param name="text">The text to append.</param>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.AddCharacter(System.Char)">
            <summary>
            Appends a character to this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <param name="character">The character to append.</param>
            <returns>Whether characters can still be added.</returns>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.AddNewLine">
            <summary>
            Adds a new line to this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <remarks>
            A height equal to that of the font size will be assumed if the current line is empty, regardless of <see cref="F:osu.Framework.Text.TextBuilder.useFontSizeAsHeight"/>.
            </remarks>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.RemoveLastCharacter">
            <summary>
            Removes the last character added to this <see cref="T:osu.Framework.Text.TextBuilder"/>.
            If the character is the first character on a new line, the new line is also removed.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.OnWidthExceeded">
            <summary>
            Invoked when a character is being added that exceeds the maximum width of the text bounds.
            </summary>
            <remarks>
            The character will not continue being added if <see cref="P:osu.Framework.Text.TextBuilder.CanAddCharacters"/> is changed during this invocation.
            </remarks>
        </member>
        <member name="M:osu.Framework.Text.TextBuilder.HasAvailableSpace(System.Single)">
            <summary>
            Whether there is enough space in the available text bounds.
            </summary>
            <param name="length">The space requested.</param>
        </member>
        <member name="T:osu.Framework.Text.TextBuilderGlyph">
            <summary>
            A <see cref="T:osu.Framework.Text.ITexturedCharacterGlyph"/> provided as final output from a <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilderGlyph.DrawRectangle">
            <summary>
            The rectangle for the character to be drawn in.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilderGlyph.LinePosition">
            <summary>
            The top position of the line where this glyph will be placed on.
            </summary>
        </member>
        <member name="P:osu.Framework.Text.TextBuilderGlyph.OnNewLine">
            <summary>
            Whether this is the first character on a new line.
            </summary>
        </member>
        <member name="F:osu.Framework.Text.TexturedCharacterGlyph.Scale">
            <summary>
            An adjustment factor in scale. This is applied to all other returned metric properties.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.TexturedCharacterGlyph.#ctor(osu.Framework.Text.CharacterGlyph,osu.Framework.Graphics.Textures.Texture,System.Single)">
            <summary>
            Create a new <see cref="T:osu.Framework.Text.TexturedCharacterGlyph"/> instance.
            </summary>
            <param name="glyph">The glyph.</param>
            <param name="texture">The texture.</param>
            <param name="scale">A scale factor to apply to exposed glyph metrics.</param>
        </member>
        <member name="P:osu.Framework.Text.TruncatingTextBuilder.IsTruncated">
            <summary>
            Indicates whether <see cref="P:osu.Framework.Graphics.Sprites.SpriteText.Text"/> has been visually truncated.
            </summary>
        </member>
        <member name="M:osu.Framework.Text.TruncatingTextBuilder.#ctor(osu.Framework.Text.ITexturedGlyphLookupStore,osu.Framework.Graphics.Sprites.FontUsage,System.Single,System.String,System.Boolean,osuTK.Vector2,osuTK.Vector2,System.Collections.Generic.List{osu.Framework.Text.TextBuilderGlyph},System.Char[],System.Char,System.Char)">
            <summary>
            Creates a new <see cref="T:osu.Framework.Text.TextBuilder"/>.
            </summary>
            <param name="store">The store from which glyphs are to be retrieved from.</param>
            <param name="font">The font to use for glyph lookups from <paramref name="store"/>.</param>
            <param name="ellipsisString">The string to be displayed if the text exceeds the allowable text area.</param>
            <param name="useFontSizeAsHeight">True to use the provided <see cref="F:osu.Framework.Text.TruncatingTextBuilder.font"/> size as the height for each line. False if the height of each individual glyph should be used.</param>
            <param name="startOffset">The offset at which characters should begin being added at.</param>
            <param name="spacing">The spacing between characters.</param>
            <param name="maxWidth">The maximum width of the resulting text bounds.</param>
            <param name="characterList">That list to contain all resulting <see cref="T:osu.Framework.Text.TextBuilderGlyph"/>s.</param>
            <param name="neverFixedWidthCharacters">The characters for which fixed width should never be applied.</param>
            <param name="fallbackCharacter">The character to use if a glyph lookup fails.</param>
            <param name="fixedWidthReferenceCharacter">The character to use to calculate the fixed width width. Defaults to 'm'.</param>
        </member>
        <member name="F:osu.Framework.Threading.AudioThread.globalMixerHandle">
            <summary>
            If a global mixer is being used, this will be the BASS handle for it.
            If non-null, all game mixers should be added to this mixer.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.AudioThread.PreloadBass">
            <summary>
            Makes BASS available to be consumed.
            </summary>
        </member>
        <member name="T:osu.Framework.Threading.GameThread">
            <summary>
            A conceptual thread used for running game work. May or may not be backed by a native thread.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThread.Name">
            <summary>
            The name of this thread.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThread.IsActive">
            <summary>
            Whether the game is active (in the foreground).
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.State">
            <summary>
            The current state of this thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.Running">
            <summary>
            Whether this thread is currently running.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.Exited">
            <summary>
            Whether this thread is exited.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.IsCurrent">
            <summary>
            Whether currently executing on this thread (from the point of invocation).
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.Clock">
            <summary>
            The thread's clock. Responsible for timekeeping and throttling.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.Thread">
            <summary>
            The current dedicated OS thread for this <see cref="T:osu.Framework.Threading.GameThread"/>.
            A value of <see langword="null"/> does not necessarily mean that this thread is not running;
            in <see cref="F:osu.Framework.Platform.ExecutionMode.SingleThread"/> execution mode <see cref="T:osu.Framework.Platform.ThreadRunner"/> drives its <see cref="T:osu.Framework.Threading.GameThread"/>s
            manually and sequentially on the main OS thread of the game process.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.Scheduler">
            <summary>
            The thread's scheduler.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThread.UnhandledException">
            <summary>
            Attach a handler to delegate responsibility for per-frame exceptions.
            While attached, all exceptions will be caught and forwarded. Thread execution will continue indefinitely.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.SynchronizationContext">
            <summary>
            A synchronisation context which posts to this thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.CurrentCulture">
            <summary>
            The culture of this thread.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.ActiveHz">
            <summary>
            The target number of updates per second when the game window is active.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="P:osu.Framework.Threading.GameThread.InactiveHz">
            <summary>
            The target number of updates per second when the game window is inactive.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="E:osu.Framework.Threading.GameThread.OnNewFrame">
            <summary>
            The main work which is fired on each frame.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThread.pauseRequested">
            <summary>
            Whether a pause has been requested.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThread.exitRequested">
            <summary>
            Whether an exit has been requested.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.WaitUntilInitialized">
            <summary>
            Block until this thread has entered an initialised state.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.SuffixedThreadNameFor(System.String)">
            <summary>
            Returns a string representation that is suffixed with a game thread identifier.
            </summary>
            <param name="name">The content to suffix.</param>
            <returns>A suffixed string.</returns>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.Start">
            <summary>
            Start this thread.
            </summary>
            <remarks>
            This method blocks until in a running state.
            </remarks>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.Exit">
            <summary>
            Request that this thread is exited.
            </summary>
            <remarks>
            This does not block and will only queue an exit request, which is processed in the main frame loop.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to exit from an invalid state.</exception>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.Initialize(System.Boolean)">
            <summary>
            Prepare this thread for performing work. Must be called when entering a running state.
            </summary>
            <param name="withThrottling">Whether this thread's clock should be throttling via thread sleeps.</param>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.MakeCurrent">
            <summary>
            Run when thread transitions into an active/processing state, at the beginning of each frame.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.RunSingleFrame">
            <summary>
            Runs a single frame, updating the execution state if required.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.Pause">
            <summary>
            Pause this thread. Must be run from <see cref="T:osu.Framework.Platform.ThreadRunner"/> in a safe manner.
            </summary>
            <remarks>
            This method blocks until in a paused state.
            </remarks>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.WaitForState(osu.Framework.Threading.GameThreadState)">
            <summary>
            Spin indefinitely until this thread enters a required state.
            For cases where no native thread is present, this will run <see cref="M:osu.Framework.Threading.GameThread.processFrame"/> until the required state is reached.
            </summary>
            <param name="targetState">The state to wait for.</param>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.PrepareForWork">
            <summary>
            Prepares this game thread for work. Should block until <see cref="M:osu.Framework.Threading.GameThread.Initialize(System.Boolean)"/> has been run.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.OnInitialize">
            <summary>
            Called whenever the thread is initialised. Should prepare the thread for performing work.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.OnSuspended">
            <summary>
            Called when a <see cref="M:osu.Framework.Threading.GameThread.Pause"/> or <see cref="M:osu.Framework.Threading.GameThread.Exit"/> is requested on this <see cref="T:osu.Framework.Threading.GameThread"/>.
            Use this method to release exclusive resources that the thread could have been holding in its current execution mode,
            like GL contexts or similar.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.OnExit">
            <summary>
            Called when the thread is exited. Should clean up any thread-specific resources.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.createThread">
            <summary>
            Create the native backing thread to run work.
            </summary>
            <remarks>
            This does not start the thread, but guarantees <see cref="P:osu.Framework.Threading.GameThread.Thread"/> is non-null.
            </remarks>
        </member>
        <member name="M:osu.Framework.Threading.GameThread.processFrame">
            <summary>
            Process a single frame of this thread's work.
            </summary>
            <returns>A potential execution state change.</returns>
        </member>
        <member name="F:osu.Framework.Threading.GameThreadState.NotStarted">
            <summary>
            This thread has not yet been started.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThreadState.Starting">
            <summary>
            This thread is preparing to run.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThreadState.Running">
            <summary>
            This thread is running.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThreadState.Paused">
            <summary>
            This thread is paused to be moved to a different native thread. This occurs when <see cref="T:osu.Framework.Platform.ExecutionMode"/> changes.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.GameThreadState.Exited">
            <summary>
            This thread has permanently exited.
            </summary>
        </member>
        <member name="T:osu.Framework.Threading.GameThreadSynchronizationContext">
            <summary>
            A synchronisation context which posts all continuations to an isolated scheduler instance.
            </summary>
            <remarks>
            This implementation roughly follows the expectations set out for winforms/WPF as per
            https://docs.microsoft.com/en-us/archive/msdn-magazine/2011/february/msdn-magazine-parallel-computing-it-s-all-about-the-synchronizationcontext.
            - Calls to <see cref="M:osu.Framework.Threading.GameThreadSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> are guaranteed to run asynchronously.
            - Calls to <see cref="M:osu.Framework.Threading.GameThreadSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> will run inline when they can.
            - Order of execution is guaranteed (in our case, it is guaranteed over <see cref="M:osu.Framework.Threading.GameThreadSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> and <see cref="M:osu.Framework.Threading.GameThreadSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> calls alike).
            - To enforce the above, calling <see cref="M:osu.Framework.Threading.GameThreadSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> will flush any pending work until the newly queued item has been completed.
            </remarks>
        </member>
        <member name="P:osu.Framework.Threading.GameThreadSynchronizationContext.TotalTasksRun">
            <summary>
            The total tasks this synchronization context has run.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThreadSynchronizationContext.RunWork">
            <summary>
            Run any pending work queued against this synchronization context.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.GameThreadSynchronizationContext.DisassociateGameThread">
            <summary>
            Disassociate any references to the <see cref="T:osu.Framework.Threading.GameThread"/> provided at construction time.
            This ensures external components cannot hold a reference to potentially expensive game instances.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.ScheduledDelegate.ExecutionTime">
            <summary>
            The earliest ElapsedTime value at which this task will be executed via a <see cref="T:osu.Framework.Threading.Scheduler"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.RepeatInterval">
            <summary>
            Time in milliseconds between repeats of this task. -1 means no repeats.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.PerformRepeatCatchUpExecutions">
            <summary>
            In the case of a repeating execution, setting this to true will allow the delegate to run more than once at already elapsed points in time in order to catch up to current.
            This will ensure a consistent number of runs over real-time, even if the <see cref="T:osu.Framework.Threading.Scheduler"/> running the delegate is suspended.
            Setting to false will skip catch-up executions, ensuring a future time is used after each execution.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.ScheduledDelegate.Completed">
            <summary>
            Whether this task has finished running.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.ScheduledDelegate.Cancelled">
            <summary>
            Whether this task has been cancelled.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.Task">
            <summary>
            The work task.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.ScheduledDelegate.RunTask">
            <summary>
            Invokes the scheduled task.
            </summary>
            <remarks>
            This call may block if the task is currently being run on another thread.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to run a task that has been cancelled or already completed.</exception>
        </member>
        <member name="M:osu.Framework.Threading.ScheduledDelegate.RunTaskInternal">
            <summary>
            Invokes the scheduled task without throwing on incorrect state.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.ScheduledDelegate.Cancel">
            <summary>
            Cancel a task.
            </summary>
            <remarks>
            This call may block if the task is currently being run on another thread.
            </remarks>
        </member>
        <member name="T:osu.Framework.Threading.ScheduledDelegate.RunState">
            <summary>
            The current state of a scheduled delegate.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.RunState.Waiting">
            <summary>
            Waiting to run. Potentially not the first run if on a repeating schedule.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.RunState.Running">
            <summary>
            Currently running.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.RunState.Complete">
            <summary>
            Running completed for a final time.
            </summary>
        </member>
        <member name="F:osu.Framework.Threading.ScheduledDelegate.RunState.Cancelled">
            <summary>
            Task manually cancelled.
            </summary>
        </member>
        <member name="T:osu.Framework.Threading.Scheduler">
            <summary>
            Marshals delegates to run from the Scheduler's base thread in a threadsafe manner
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.Scheduler.HasPendingTasks">
            <summary>
            Whether there are any tasks queued to run (including delayed tasks in the future).
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.Scheduler.TotalTasksRun">
            <summary>
            The total tasks this scheduler instance has run.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.Scheduler.TotalPendingTasks">
            <summary>
            The total number of <see cref="T:osu.Framework.Threading.ScheduledDelegate"/>s tracked by this instance for future execution.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.#ctor">
            <summary>
            The base thread is assumed to be the thread on which the constructor is run.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.#ctor(System.Func{System.Boolean},osu.Framework.Timing.IClock)">
            <summary>
            The base thread is assumed to be the thread on which the constructor is run.
            </summary>
        </member>
        <member name="P:osu.Framework.Threading.Scheduler.IsMainThread">
            <summary>
            Returns whether we are on the main thread or not.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.Update">
            <summary>
            Run any pending work tasks.
            </summary>
            <returns>The number of tasks that were run.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.CancelDelayedTasks">
            <summary>
            Cancel any pending work tasks.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.Add``1(System.Action{``0},``0,System.Boolean)">
            <summary>
            Add a task to be scheduled.
            </summary>
            <remarks>If scheduled, the task will be run on the next <see cref="M:osu.Framework.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done.</param>
            <param name="data">The data to be passed to the task.</param>
            <param name="forceScheduled">If set to false, the task will be executed immediately if we are on the main thread.</param>
            <returns>The scheduled task, or <c>null</c> if the task was executed immediately.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.Add(System.Action,System.Boolean)">
            <summary>
            Add a task to be scheduled.
            </summary>
            <remarks>If scheduled, the task will be run on the next <see cref="M:osu.Framework.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done.</param>
            <param name="forceScheduled">If set to false, the task will be executed immediately if we are on the main thread.</param>
            <returns>The scheduled task, or <c>null</c> if the task was executed immediately.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.Add(osu.Framework.Threading.ScheduledDelegate)">
            <summary>
            Add a task to be scheduled.
            </summary>
            <remarks>The task will be run on the next <see cref="M:osu.Framework.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The scheduled delegate to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to add a scheduled delegate that has been already completed.</exception>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.AddDelayed``1(System.Action{``0},``0,System.Double,System.Boolean)">
            <summary>
            Add a task which will be run after a specified delay from the current clock time.
            </summary>
            <param name="task">The work to be done.</param>
            <param name="data">The data to be passed to the task.</param>
            <param name="timeUntilRun">Milliseconds until run.</param>
            <param name="repeat">Whether this task should repeat.</param>
            <returns>Whether this is the first queue attempt of this work.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.AddDelayed(System.Action,System.Double,System.Boolean)">
            <summary>
            Add a task which will be run after a specified delay from the current clock time.
            </summary>
            <param name="task">The work to be done.</param>
            <param name="timeUntilRun">Milliseconds until run.</param>
            <param name="repeat">Whether this task should repeat.</param>
            <returns>The scheduled task.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.AddOnce``1(System.Action{``0},``0)">
            <summary>
            Adds a task which will only be run once per frame, no matter how many times it was scheduled in the previous frame.
            </summary>
            <remarks>The task will be run on the next <see cref="M:osu.Framework.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done.</param>
            <param name="data">The data to be passed to the task. Note that duplicate schedules may result in previous data never being run.</param>
            <returns>Whether this is the first queue attempt of this work.</returns>
        </member>
        <member name="M:osu.Framework.Threading.Scheduler.AddOnce(System.Action)">
            <summary>
            Adds a task which will only be run once per frame, no matter how many times it was scheduled in the previous frame.
            </summary>
            <remarks>The task will be run on the next <see cref="M:osu.Framework.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done. Avoid using inline delegates as they may not be cached, bypassing the once-per-frame guarantee.</param>
            <returns>Whether this is the first queue attempt of this work.</returns>
        </member>
        <member name="T:osu.Framework.Threading.ThreadedTaskScheduler">
            <summary>
            Provides a scheduler that uses a managed thread "pool".
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the StaTaskScheduler class with the specified concurrency level.
            </summary>
            <param name="numberOfThreads">The number of threads that should be created and used by this scheduler.</param>
            <param name="name">The thread name to give threads in this pool.</param>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.processTasks">
            <summary>
            Continually get the next task and try to execute it.
            This will continue as a blocking operation until the scheduler is disposed and no more tasks remain.
            </summary>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>
            Queues a Task to be executed by this scheduler.
            </summary>
            <param name="task">The task to be executed.</param>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.GetScheduledTasks">
            <summary>
            Provides a list of the scheduled tasks for the debugger to consume.
            </summary>
            <returns>An enumerable of all tasks currently scheduled.</returns>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>
            Determines whether a Task may be inlined.
            </summary>
            <param name="task">The task to be executed.</param>
            <param name="taskWasPreviouslyQueued">Whether the task was previously queued.</param>
            <returns>true if the task was successfully inlined; otherwise, false.</returns>
        </member>
        <member name="P:osu.Framework.Threading.ThreadedTaskScheduler.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level supported by this scheduler.</summary>
        </member>
        <member name="M:osu.Framework.Threading.ThreadedTaskScheduler.Dispose">
            <summary>
            Cleans up the scheduler by indicating that no more tasks will be queued.
            This method blocks until all threads successfully shutdown.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.DecoupleableInterpolatingFramedClock">
             <summary>
             Adds the ability to keep the clock running even when the underlying source has stopped or cannot handle the current time range.
             This is handled by performing seeks on the underlying source and checking whether they were successful or not.
             On failure to seek, we take over with an internal clock until control can be returned to the actual source.
            
             This clock type removes the requirement of having a source set.
            
             If a <see cref="P:osu.Framework.Timing.InterpolatingFramedClock.Source"/> is set, it is presumed that we have exclusive control over operations on it.
             This is used to our advantage to allow correct <see cref="P:osu.Framework.Timing.DecoupleableInterpolatingFramedClock.IsRunning"/> state tracking in the event of cross-thread communication delays (with an audio thread, for instance).
             </summary>
        </member>
        <member name="F:osu.Framework.Timing.DecoupleableInterpolatingFramedClock.IsCoupled">
            <summary>
            Specify whether we are coupled 1:1 to SourceClock. If not, we can independently continue operation.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.DecoupleableInterpolatingFramedClock.useInterpolatedSourceTime">
            <summary>
            In some cases we should always use the interpolated source.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.DecoupleableInterpolatingFramedClock.adjustableSource">
            <summary>
            We need to be able to pass on adjustments to the source if it supports them.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.DecouplingFramedClock">
             <summary>
             A decoupling clock allows taking an existing clock which has seek limitations and provides
             a controllable encapsulated view of that clock with the ability to seek and track time
             outside of the normally seekable bounds.
            
             Put simply, it will take a Track which can only track time from 0..trackLength and allow
             both negative seeks and seeks beyond trackLength. It will also allow time to continue counting
             beyond the end of the track even when not explicitly seeked.
             </summary>
             <remarks>
             There are a few things to note about this implementation:
             - Changing the source clock via <see cref="M:osu.Framework.Timing.DecouplingFramedClock.ChangeSource(osu.Framework.Timing.IClock)"/> will always take on the new source's running
               state and current time, regardless of decoupled state.
             - It is always assumed that after a <see cref="M:osu.Framework.Timing.DecouplingFramedClock.Reset"/> on the source, it will be able to track time.
             - It is assumed that a source is generally able to start tracking from zero. Special handling ensures
               that when arriving at zero from negative time, the source will attempt to be started once so it can
               take over.
               Note that no such special handling is assured for when the source has a maximum allowable time,
               since it is not known what that time is.
             </remarks>
        </member>
        <member name="P:osu.Framework.Timing.DecouplingFramedClock.AllowDecoupling">
            <summary>
            Whether to allow operation in decoupled mode. Defaults to <c>true</c>.
            </summary>
            <remarks>
            When set to <c>false</c>, this clock will operate in a transparent pass-through mode.
            </remarks>
        </member>
        <member name="F:osu.Framework.Timing.DecouplingFramedClock.shouldBeRunning">
            <summary>
            We maintain an internal running state so that when we notice the source clock has stopped,
            we can continue to run in a decoupled mode (and know if we should be running or not).
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.DecouplingFramedClock.currentTime">
            <summary>
            We need to track our internal time separately from the exposed <see cref="P:osu.Framework.Timing.DecouplingFramedClock.CurrentTime"/> to make sure
            the exposed value is only ever updated on <see cref="M:osu.Framework.Timing.DecouplingFramedClock.ProcessFrame"/>.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.DecouplingFramedClock.lastReferenceTime">
            <summary>
            Tracks the current time of <see cref="F:osu.Framework.Timing.DecouplingFramedClock.realtimeReferenceClock"/> one <see cref="M:osu.Framework.Timing.DecouplingFramedClock.ProcessFrame"/> ago.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.DecouplingFramedClock.lastSeekFailed">
            <summary>
            Whether the last <see cref="M:osu.Framework.Timing.DecouplingFramedClock.Seek(System.Double)"/> operation failed.
            This denotes that we need to <see cref="M:osu.Framework.Timing.DecouplingFramedClock.Start"/> in decoupled mode (if possible).
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.DecouplingFramedClock.realtimeReferenceClock">
            <summary>
            This clock is used when we are decoupling from the source.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.FramedClock">
            <summary>
            Takes a clock source and separates time reading on a per-frame level.
            The CurrentTime value will only change on initial construction and whenever ProcessFrame is run.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.FramedClock.#ctor(osu.Framework.Timing.IClock,System.Boolean)">
            <summary>
            Construct a new FramedClock with an optional source clock.
            </summary>
            <param name="source">A source clock which will be used as the backing time source. If null, a StopwatchClock will be created. When provided, the CurrentTime of <paramref name="source"/> will be transferred instantly.</param>
            <param name="processSource">Whether the source clock's <see cref="M:osu.Framework.Timing.FramedClock.ProcessFrame"/> method should be called during this clock's process call.</param>
        </member>
        <member name="T:osu.Framework.Timing.FramedOffsetClock">
            <summary>
            A framed clock which allows an offset to be added or subtracted from an underlying source clock's time.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.FramedOffsetClock.Offset">
            <summary>
            The offset to be applied.
            </summary>
            <remarks>
            A positive offset will move time forward.
            </remarks>
        </member>
        <member name="F:osu.Framework.Timing.FrameTimeInfo.Elapsed">
            <summary>
            Elapsed time during last frame in milliseconds.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.FrameTimeInfo.Current">
            <summary>
            Begin time of this frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.IAdjustableClock">
            <summary>
            A clock that can be started, stopped, reset etc.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IAdjustableClock.Reset">
            <summary>
            Stop and reset position.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IAdjustableClock.Start">
            <summary>
            Start (resume) running.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IAdjustableClock.Stop">
            <summary>
            Stop (pause) running.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IAdjustableClock.Seek(System.Double)">
            <summary>
            Seek to a specific time position.
            </summary>
            <returns>Whether a seek was possible.</returns>
        </member>
        <member name="P:osu.Framework.Timing.IAdjustableClock.Rate">
            <summary>
            The rate this clock is running at, relative to real-time.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IAdjustableClock.ResetSpeedAdjustments">
            <summary>
            Reset the rate to a stable value.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.IClock">
            <summary>
            A basic clock for keeping time.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.IClock.CurrentTime">
            <summary>
            The current time of this clock, in milliseconds.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.IClock.Rate">
            <summary>
            The rate this clock is running at, relative to real-time.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.IClock.IsRunning">
            <summary>
            Whether this clock is currently running or not.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.IFrameBasedClock">
            <summary>
            A clock which will only update its current time when a frame process is triggered.
            Useful for keeping a consistent time state across an individual update.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.IFrameBasedClock.ElapsedFrameTime">
            <summary>
            Elapsed time since last frame in milliseconds.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.IFrameBasedClock.FramesPerSecond">
            <summary>
            A moving average representation of the frames per second of this clock.
            Do not use this for any timing purposes (use <see cref="P:osu.Framework.Timing.IFrameBasedClock.ElapsedFrameTime"/> instead).
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.IFrameBasedClock.ProcessFrame">
            <summary>
            Processes one frame. Generally should be run once per update loop.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.InterpolatingFramedClock">
            <summary>
            A clock which uses an internal stopwatch to interpolate (smooth out) a source.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.InterpolatingFramedClock.AllowableErrorMilliseconds">
            <summary>
            The amount of error that is allowed between the source and interpolated time before the interpolated time is ignored and the source time is used.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.InterpolatingFramedClock.IsInterpolating">
            <summary>
            Whether interpolation was applied at the last processed frame.
            </summary>
            <remarks>
            If <see cref="P:osu.Framework.Timing.InterpolatingFramedClock.Drift"/> becomes too high (as defined by <see cref="P:osu.Framework.Timing.InterpolatingFramedClock.AllowableErrorMilliseconds"/>),
            interpolation will be bypassed in order to provide a more correct time value.
            </remarks>
        </member>
        <member name="P:osu.Framework.Timing.InterpolatingFramedClock.Drift">
            <summary>
            The drift in milliseconds between the source and interpolation at the last processed frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.ISourceChangeableClock">
            <summary>
            A clock which has a source that can be changed.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.ISourceChangeableClock.Source">
            <summary>
            The source clock.
            </summary>
        </member>
        <member name="M:osu.Framework.Timing.ISourceChangeableClock.ChangeSource(osu.Framework.Timing.IClock)">
            <summary>
            Change the source clock.
            </summary>
            <param name="source">The new source clock.</param>
        </member>
        <member name="T:osu.Framework.Timing.ManualClock">
            <summary>
            A completely manual clock implementation. Everything is settable.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.ManualFramedClock">
            <summary>
            A completely manual framed clock implementation. Everything is settable.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.StopwatchClock.rateChangeUsed">
            <summary>
            Keep track of how much stopwatch time we have used at previous rates.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.StopwatchClock.rateChangeAccumulated">
            <summary>
            Keep track of the resultant time that was accumulated at previous rates.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.StopwatchClock.stopwatchCurrentTime">
            <summary>
            The current time, represented solely by the accumulated <see cref="T:System.Diagnostics.Stopwatch"/> time.
            </summary>
        </member>
        <member name="T:osu.Framework.Timing.ThrottledFrameClock">
            <summary>
            A FrameClock which will limit the number of frames processed by adding Thread.Sleep calls on each ProcessFrame.
            </summary>
        </member>
        <member name="F:osu.Framework.Timing.ThrottledFrameClock.MaximumUpdateHz">
            <summary>
            The target number of updates per second. Only used when <see cref="F:osu.Framework.Timing.ThrottledFrameClock.Throttling"/> is <c>true</c>.
            </summary>
            <remarks>
            A value of 0 is treated the same as "unlimited" or <see cref="F:System.Double.MaxValue"/>.
            </remarks>
        </member>
        <member name="F:osu.Framework.Timing.ThrottledFrameClock.Throttling">
            <summary>
            Whether throttling should be enabled. Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="P:osu.Framework.Timing.ThrottledFrameClock.TimeSlept">
            <summary>
            The time spent in a Thread.Sleep state during the last frame.
            </summary>
        </member>
        <member name="T:osu.Framework.Utils.Blur">
            <summary>
            Helper methods for blur calculations.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.Blur.EvalGaussian(System.Single,System.Single)">
            <summary>
            Evaluates a 1-D gaussian distribution with 0 mean and sigma standard deviation at position x.
            </summary>
            <param name="x">The position to evaluate the distribution at.</param>
            <param name="sigma">Standard deviation of the distribution.</param>
            <returns>The probability density of the distribution at x.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Blur.KernelSize(System.Single,System.Single)">
            <summary>
            Finds the gaussian blur kernel size where the magnitude of the gaussian distribution within the kernel
            is greater than or equal to cutoffThreshold times the maximum of the distribution.
            </summary>
            <param name="sigma">Standard deviation of the distribution.</param>
            <param name="cutoffThreshold">The threshold that defines the kernel size.</param>
            <returns>The size of the kernel satisfying the requested threshold.</returns>
        </member>
        <member name="M:osu.Framework.Utils.CircularArcProperties.#ctor(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Computes various properties that can be used to approximate the circular arc.
            </summary>
            <param name="controlPoints">Three distinct points on the arc.</param>
        </member>
        <member name="M:osu.Framework.Utils.ConvexPolygonClipper`2.GetClipBufferSize">
            <summary>
            Determines the minimum buffer size required to clip the two polygons.
            </summary>
            <returns>The minimum buffer size required for <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.clipPolygon"/> to clip <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.subjectPolygon"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.ConvexPolygonClipper`2.Clip">
            <summary>
            Clips <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.subjectPolygon"/> by <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.clipPolygon"/>.
            </summary>
            <returns>A clockwise-ordered set of vertices representing the result of clipping <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.subjectPolygon"/> by <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.clipPolygon"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.ConvexPolygonClipper`2.Clip(System.Span{osuTK.Vector2})">
            <summary>
            Clips <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.subjectPolygon"/> by <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.clipPolygon"/> using an intermediate buffer.
            </summary>
            <param name="buffer">The buffer to contain the clipped vertices. Must have a length of <see cref="M:osu.Framework.Utils.ConvexPolygonClipper`2.GetClipBufferSize"/>.</param>
            <returns>A clockwise-ordered set of vertices representing the result of clipping <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.subjectPolygon"/> by <see cref="F:osu.Framework.Utils.ConvexPolygonClipper`2.clipPolygon"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.General.AttemptWithRetryOnException``1(System.Action,System.Int32,System.Boolean)">
            <summary>
            Attempt an operation and perform retries on a matching exception, up to a limit.
            Useful for IO operations which can fail for a short period due to an open file handle.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="attempts">The number of attempts (250ms wait between each).</param>
            <param name="throwOnFailure">Whether to throw an exception on failure. If <c>false</c>, will silently fail.</param>
            <typeparam name="TException">The type of exception which should trigger retries.</typeparam>
            <returns>Whether the operation succeeded.</returns>
        </member>
        <member name="T:osu.Framework.Utils.HasOrderedElementsAttribute">
            <summary>
            Marker attribute for <see cref="T:System.Enum"/> classes whose members are annotated with <see cref="T:osu.Framework.Utils.OrderAttribute"/>.
            Methods from the <see cref="T:osu.Framework.Extensions.EnumExtensions.EnumExtensions"/> static class use the order defined with these attributes.
            </summary>
        </member>
        <member name="P:osu.Framework.Utils.HasOrderedElementsAttribute.AllowPartialOrdering">
            <summary>
            Allow for partially ordering <see cref="T:System.Enum"/> members.
            Members without an <see cref="T:osu.Framework.Utils.OrderAttribute"/> will default to their value as ordering key.
            </summary>
        </member>
        <member name="T:osu.Framework.Utils.IInterpolable`1">
            <summary>
            An interface that defines the interpolation of a value.
            </summary>
            <typeparam name="TValue">The type of value to be interpolated..</typeparam>
        </member>
        <member name="M:osu.Framework.Utils.IInterpolable`1.ValueAt``1(System.Double,`0,`0,System.Double,System.Double,``0@)">
            <summary>
            Interpolates between two <typeparamref name="TValue"/>s.
            </summary>
            <remarks>
            This method MUST NOT modify the current object.
            </remarks>
            <param name="time">The current time.</param>
            <param name="startValue">The <typeparamref name="TValue"/> at <paramref name="time"/> = <paramref name="startTime"/>.</param>
            <param name="endValue">The <typeparamref name="TValue"/> at <paramref name="time"/> = <paramref name="endTime"/>.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="easing">The easing function to use.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="T:osu.Framework.Utils.IncrementalBSplineBuilder">
            <summary>
            A class for incrementally building B-Spline paths from a series of linear points.
            This can be used to obtain a B-Spline with a minimal number of control points for any
            given set of linear input points, for example, a hand-drawn path.
            </summary>
        </member>
        <member name="F:osu.Framework.Utils.IncrementalBSplineBuilder.FD_EPSILON">
            <summary>
            Spacing to use in spline-related finite difference (FD) calculations.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.getAbsWindingAt(System.Collections.Generic.List{osuTK.Vector2},System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            Get the absolute amount of rotation (in radians) at a given point on the path.
            </summary>
            <param name="path">The path to get the rotation from.</param>
            <param name="cumulativeDistances">The cumulative distances of the path.</param>
            <param name="t">The point on the path to get the rotation from.</param>
            <returns>The absolute amount of rotation (in radians) at the given point on the path.</returns>
        </member>
        <member name="P:osu.Framework.Utils.IncrementalBSplineBuilder.Degree">
            <summary>
            Gets or sets the degree of the B-Spline. Must not be negative. Default is 3.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the value is negative.</exception>
        </member>
        <member name="P:osu.Framework.Utils.IncrementalBSplineBuilder.Tolerance">
            <summary>
            Gets or sets the tolerance for determining when to add a new control point. Must not be negative. Default is 1.5.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the value is negative.</exception>
        </member>
        <member name="P:osu.Framework.Utils.IncrementalBSplineBuilder.CornerThreshold">
            <summary>
            Gets or sets the corner threshold for determining when to add a new control point. Must not be negative. Default is 0.4.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the value is negative.</exception>
        </member>
        <member name="P:osu.Framework.Utils.IncrementalBSplineBuilder.OutputPath">
            <summary>
            The piecewise linear approximation of the B-spline created from the input path.
            </summary>
        </member>
        <member name="P:osu.Framework.Utils.IncrementalBSplineBuilder.ControlPoints">
            <summary>
            The list of control points of the B-Spline. This is inferred from the input path.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.#ctor(System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:osu.Framework.Utils.IncrementalBSplineBuilder"/> class with specified degree and tolerance.
            </summary>
            <param name="degree">The degree of the B-Spline.</param>
            <param name="tolerance">The tolerance for control point addition.</param>
            <param name="cornerThreshold">The threshold to use for inserting sharp control points at corners.</param>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.GetInputPath">
            <summary>
            The list of input points.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.computeSmoothedInputPath">
            <summary>
            Computes a smoothed version of the input path by generating a high-degree BSpline from densely
            spaces samples of the input path.
            </summary>
            <returns>A tuple containing the smoothed vertices and the cumulative distances of the smoothed path.</returns>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.detectCorners(System.Collections.Generic.List{osuTK.Vector2},System.Collections.Generic.List{System.Single})">
            <summary>
            Detects corners in the input path by thresholding how much the path curves and checking
            whether this curvature is local (i.e. a corner rather than a smooth, yet tight turn).
            </summary>
            <param name="vertices">The vertices of the input path.</param>
            <param name="distances">The cumulative distances of the input path.</param>
            <returns>A list of t values at which corners occur.</returns>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.Clear">
            <summary>
            Clears the input path and the B-Spline.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.AddLinearPoint(osuTK.Vector2)">
            <summary>
            Adds a linear point to the path and updates the B-Spline accordingly.
            </summary>
            <param name="v">The vector representing the point to add.</param>
        </member>
        <member name="M:osu.Framework.Utils.IncrementalBSplineBuilder.Finish">
            <summary>
            Call this when you are done building the path.
            This method applies the final step of post-processing.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.Damp(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Interpolates between 2 values (start and final) using a given base and exponent.
            </summary>
            <param name="start">The start value.</param>
            <param name="final">The end value.</param>
            <param name="base">The base of the exponential. The valid range is [0, 1], where smaller values mean that the final value is achieved more quickly, and values closer to 1 results in slow convergence to the final value.</param>
            <param name="exponent">The exponent of the exponential. An exponent of 0 results in the start values, whereas larger exponents make the result converge to the final value.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.DampContinuously(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Interpolate the current value towards the target value based on the elapsed time.
            If the current value is updated every frame using this function, the result is approximately frame-rate independent.
            </summary>
            <remarks>
            Because floating-point errors can accumulate over a long time, this function shouldn't be
            used for things requiring accurate values.
            </remarks>
            <param name="current">The current value.</param>
            <param name="target">The target value.</param>
            <param name="halfTime">The time it takes to reach the middle value of the current and the target value.</param>
            <param name="elapsedTime">The elapsed time of the current frame.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.Lagrange(System.ReadOnlySpan{osuTK.Vector2},System.Double)">
            <summary>
            Interpolates between a set of points using a lagrange polynomial.
            </summary>
            <param name="points">An array of coordinates. No two x should be the same.</param>
            <param name="time">The x coordinate to calculate the y coordinate for.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.LagrangeBasis(System.ReadOnlySpan{osuTK.Vector2},System.Int32,System.Double)">
            <summary>
            Calculates the Lagrange basis polynomial for a given set of x coordinates. Used as a helper function to compute Lagrange polynomials.
            </summary>
            <param name="points">An array of coordinates. No two x should be the same.</param>
            <param name="base">The index inside the coordinate array which polynomial to compute.</param>
            <param name="time">The x coordinate to calculate the basis polynomial for.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.BarycentricWeights(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Calculates the Barycentric weights for a Lagrange polynomial for a given set of coordinates. Can be used as a helper function to compute a Lagrange polynomial repeatedly.
            </summary>
            <param name="points">An array of coordinates. No two x should be the same.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.BarycentricLagrange(System.ReadOnlySpan{osuTK.Vector2},System.Double[],System.Double)">
            <summary>
            Calculates the Lagrange basis polynomial for a given set of x coordinates based on previously computed barycentric weights.
            </summary>
            <param name="points">An array of coordinates. No two x should be the same.</param>
            <param name="weights">An array of precomputed barycentric weights.</param>
            <param name="time">The x coordinate to calculate the basis polynomial for.</param>
        </member>
        <member name="M:osu.Framework.Utils.Interpolation.GenericInterpolation`1.ValueAt(System.Double,osuTK.Graphics.Color4,osuTK.Graphics.Color4,System.Double,System.Double,`0@)">
            <summary>
            Interpolates between two sRGB <see cref="T:osuTK.Graphics.Color4"/>s in a linear (gamma-correct) RGB space.
            </summary>
            <remarks>
            For more information regarding linear interpolation, see https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/#gradients.
            </remarks>
        </member>
        <member name="M:osu.Framework.Utils.MathUtils.DegreesToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">An angle in degrees.</param>
            <returns>The angle expressed in radians.</returns>
        </member>
        <member name="M:osu.Framework.Utils.MathUtils.DegreesToRadians(System.Double)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">An angle in degrees.</param>
            <returns>The angle expressed in radians.</returns>
        </member>
        <member name="M:osu.Framework.Utils.MathUtils.RadiansToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">An angle in radians.</param>
            <returns>The angle expressed in degrees.</returns>
        </member>
        <member name="M:osu.Framework.Utils.MathUtils.RadiansToDegrees(System.Double)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">An angle in radians.</param>
            <returns>The angle expressed in degrees.</returns>
        </member>
        <member name="M:osu.Framework.Utils.MathUtils.DivideRoundUp(System.Int32,System.Int32)">
            <summary>
            Integer division with rounding up instead of down.
            </summary>
            <param name="value">The value to be divided.</param>
            <param name="divisor">The divisor of the division.</param>
            <returns>The rounded-up quotient.</returns>
        </member>
        <member name="T:osu.Framework.Utils.NumberFormatter">
            <summary>
            Exposes functionality for formatting numbers.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.NumberFormatter.PrintWithSiSuffix(System.Double)">
            <summary>
            Prints the number with at most two decimal digits, followed by a magnitude suffic (k, M, G, T, etc.) depending on the magnitude of the number. If the number is
            too large or small this will print the number using scientific notation instead.
            </summary>
            <param name="number">The number to print.</param>
            <returns>The number with at most two decimal digits, followed by a magnitude suffic (k, M, G, T, etc.) depending on the magnitude of the number. If the number is
            too large or small this will print the number using scientific notation instead.</returns>
        </member>
        <member name="T:osu.Framework.Utils.OrderAttribute">
            <summary>
            Allows specifying ordering of <see cref="T:System.Enum"/> members, separate from the actual enum values.
            Only has an effect on members of <see cref="T:System.Enum"/> classes annotated with <see cref="T:osu.Framework.Utils.HasOrderedElementsAttribute"/>.
            </summary>
            <remarks>
            Usually used for pretty-printing purposes.
            Methods from the <see cref="T:osu.Framework.Extensions.EnumExtensions.EnumExtensions"/> static class can be used to leverage the order defined with these attributes.
            </remarks>
        </member>
        <member name="F:osu.Framework.Utils.OrderAttribute.Order">
            <summary>
            The sorting order of the annotated enum member.
            </summary>
        </member>
        <member name="T:osu.Framework.Utils.PathApproximator">
            <summary>
            Helper methods to approximate a path by interpolating a sequence of control points.
            </summary>
        </member>
        <member name="F:osu.Framework.Utils.PathApproximator.catmull_detail">
            <summary>
            The amount of pieces to calculate for each control point quadruplet.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.BezierToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Creates a piecewise-linear approximation of a bezier curve, by adaptively repeatedly subdividing
            the control points until their approximation error vanishes below a given threshold.
            </summary>
            <param name="controlPoints">The control points.</param>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.BSplineToBezier(System.ReadOnlySpan{osuTK.Vector2},System.Int32)">
            <summary>
            Converts a B-spline with polynomial order <paramref name="degree"/> to a series of Bezier control points
            via Boehm's algorithm.
            </summary>
            <remarks>
            Does nothing if <paramref name="controlPoints"/> has zero points or one point.
            Algorithm unsuitable for large values of <paramref name="degree"/> with many knots.
            </remarks>
            <param name="controlPoints">The control points.</param>
            <param name="degree">The polynomial order.</param>
            <returns>An array of vectors containing control point positions for the resulting Bezier curve.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degree"/> was less than 1.</exception>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.BSplineToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2},System.Int32)">
            <summary>
            Creates a piecewise-linear approximation of a clamped uniform B-spline with polynomial order <paramref name="degree"/>,
            by dividing it into a series of bezier control points at its knots, then adaptively repeatedly
            subdividing those until their approximation error vanishes below a given threshold.
            </summary>
            <remarks>
            Does nothing if <paramref name="controlPoints"/> has zero points or one point.
            Generalises to bezier approximation functionality when <paramref name="degree"/> is too large to create knots.
            Algorithm unsuitable for large values of <paramref name="degree"/> with many knots.
            </remarks>
            <param name="controlPoints">The control points.</param>
            <param name="degree">The polynomial order.</param>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degree"/> was less than 1.</exception>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.CatmullToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Creates a piecewise-linear approximation of a Catmull-Rom spline.
            </summary>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.CircularArcToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Creates a piecewise-linear approximation of a circular arc curve.
            </summary>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.CircularArcBoundingBox(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Computes the bounding box of a circular arc.
            </summary>
            <param name="controlPoints">Three distinct points on the arc.</param>
            <returns>The rectangle inscribing the circular arc.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.LinearToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Creates a piecewise-linear approximation of a linear curve.
            Basically, returns the input.
            </summary>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.LagrangePolynomialToPiecewiseLinear(System.ReadOnlySpan{osuTK.Vector2})">
            <summary>
            Creates a piecewise-linear approximation of a lagrange polynomial.
            </summary>
            <returns>A list of vectors representing the piecewise-linear approximation.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.PiecewiseLinearToBezier(System.ReadOnlySpan{osuTK.Vector2},System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Collections.Generic.List{osuTK.Vector2},System.Single[0:,0:])">
            <summary>
            Creates a bezier curve approximation from a piecewise-linear path.
            </summary>
            <param name="inputPath">The piecewise-linear path to approximate.</param>
            <param name="numControlPoints">The number of control points to use in the bezier approximation.</param>
            <param name="numTestPoints">The number of points to evaluate the bezier path at for optimization, basically a resolution.</param>
            <param name="maxIterations">The number of optimization steps.</param>
            <param name="learningRate">The rate of optimization. Larger values converge faster but can be unstable.</param>
            <param name="b1">The B1 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="b2">The B2 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="initialControlPoints">The initial bezier control points to use before optimization. The length of this list should be equal to <paramref name="numControlPoints"/>.</param>
            <param name="learnableMask">Mask determining which control point positions are fixed and cannot be changed by the optimiser.</param>
            <returns>A List of vectors representing the bezier control points.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.PiecewiseLinearToBSpline(System.ReadOnlySpan{osuTK.Vector2},System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Collections.Generic.List{osuTK.Vector2},System.Single[0:,0:])">
            <summary>
            Creates a B-spline approximation from a piecewise-linear path.
            </summary>
            <param name="inputPath">The piecewise-linear path to approximate.</param>
            <param name="numControlPoints">The number of control points to use in the B-spline approximation.</param>
            <param name="degree">The polynomial order.</param>
            <param name="numTestPoints">The number of points to evaluate the B-spline path at for optimization, basically a resolution.</param>
            <param name="maxIterations">The number of optimization steps.</param>
            <param name="learningRate">The rate of optimization. Larger values converge faster but can be unstable.</param>
            <param name="b1">The B1 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="b2">The B2 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="initialControlPoints">The initial B-spline control points to use before optimization. The length of this list should be equal to <paramref name="numControlPoints"/>.</param>
            <param name="learnableMask">Mask determining which control point positions are fixed and cannot be changed by the optimiser.</param>
            <returns>A List of vectors representing the B-spline control points.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.piecewiseLinearToSpline(System.ReadOnlySpan{osuTK.Vector2},System.Single[0:,0:],System.Int32,System.Single,System.Single,System.Single,System.Collections.Generic.List{osuTK.Vector2},System.Single[0:,0:])">
            <summary>
            Creates an arbitrary spline approximation from a piecewise-linear path.
            Works for any spline type where the interpolation is a linear combination of the control points.
            </summary>
            <param name="inputPath">The piecewise-linear path to approximate.</param>
            <param name="weights">A 2D matrix that contains the spline basis functions at multiple positions. The length of the first dimension is the number of test points, and the length of the second dimension is the number of control points.</param>
            <param name="maxIterations">The number of optimization steps.</param>
            <param name="learningRate">The rate of optimization. Larger values converge faster but can be unstable.</param>
            <param name="b1">The B1 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="b2">The B2 parameter for the Adam optimizer. Between 0 and 1.</param>
            <param name="initialControlPoints">The initial control points to use before optimization. The length of this list should be equal to the number of test points.</param>
            <param name="learnableMask">Mask determining which control point positions are fixed and cannot be changed by the optimiser.</param>
            <returns>A List of vectors representing the spline control points.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.getDistanceDistribution(System.Single[0:,0:],System.Single[],System.Single)">
            <summary>
            Calculates a normalized cumulative distribution for the Euclidean distance between points on a piecewise-linear path.
            </summary>
            <param name="points">(2, n) shape array which represents the points of the piecewise-linear path.</param>
            <param name="result">n-length array to write the result to.</param>
            <param name="regularizingFactor">Factor to be added to each computed distance between points.</param>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.generateBSplineWeights(System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate a matrix of B-spline basis function values.
            </summary>
            <param name="numControlPoints">The number of control points.</param>
            <param name="numTestPoints">The number of points to evaluate the spline at.</param>
            <param name="degree">The order of the B-spline.</param>
            <returns>Matrix array of B-spline basis function values.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.binomialCoefficients(System.Int32)">
            <summary>
            Computes an array with all binomial coefficients from 0 to n inclusive.
            </summary>
            <returns>n+1 length array with the binomial coefficients.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.bezierIsFlatEnough(osuTK.Vector2[])">
            <summary>
            Make sure the 2nd order derivative (approximated using finite elements) is within tolerable bounds.
            NOTE: The 2nd order derivative of a 2d curve represents its curvature, so intuitively this function
                  checks (as the name suggests) whether our approximation is _locally_ "flat". More curvy parts
                  need to have a denser approximation to be more "flat".
            </summary>
            <param name="controlPoints">The control points to check for flatness.</param>
            <returns>Whether the control points are flat enough.</returns>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.bezierSubdivide(osuTK.Vector2[],osuTK.Vector2[],osuTK.Vector2[],osuTK.Vector2[],System.Int32)">
            <summary>
            Subdivides n control points representing a bezier curve into 2 sets of n control points, each
            describing a bezier curve equivalent to a half of the original curve. Effectively this splits
            the original curve into 2 curves which result in the original curve when pieced back together.
            </summary>
            <param name="controlPoints">The control points to split.</param>
            <param name="l">Output: The control points corresponding to the left half of the curve.</param>
            <param name="r">Output: The control points corresponding to the right half of the curve.</param>
            <param name="subdivisionBuffer">The first buffer containing the current subdivision state.</param>
            <param name="count">The number of control points in the original list.</param>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.bezierApproximate(osuTK.Vector2[],System.Collections.Generic.List{osuTK.Vector2},osuTK.Vector2[],osuTK.Vector2[],System.Int32)">
            <summary>
            This uses <a href="https://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm">De Casteljau's algorithm</a> to obtain an optimal
            piecewise-linear approximation of the bezier curve with the same amount of points as there are control points.
            </summary>
            <param name="controlPoints">The control points describing the bezier curve to be approximated.</param>
            <param name="output">The points representing the resulting piecewise-linear approximation.</param>
            <param name="count">The number of control points in the original list.</param>
            <param name="subdivisionBuffer1">The first buffer containing the current subdivision state.</param>
            <param name="subdivisionBuffer2">The second buffer containing the current subdivision state.</param>
        </member>
        <member name="M:osu.Framework.Utils.PathApproximator.catmullFindPoint(osuTK.Vector2@,osuTK.Vector2@,osuTK.Vector2@,osuTK.Vector2@,System.Single)">
            <summary>
            Finds a point on the spline at the position of a parameter.
            </summary>
            <param name="vec1">The first vector.</param>
            <param name="vec2">The second vector.</param>
            <param name="vec3">The third vector.</param>
            <param name="vec4">The fourth vector.</param>
            <param name="t">The parameter at which to find the point on the spline, in the range [0, 1].</param>
            <returns>The point on the spline at <paramref name="t"/>.</returns>
        </member>
        <member name="T:osu.Framework.Utils.Precision">
            <summary>
            Utility class to compare <see cref="T:System.Single"/> or <see cref="T:System.Double"/> values for equality.
            </summary>
        </member>
        <member name="F:osu.Framework.Utils.Precision.FLOAT_EPSILON">
            <summary>
            The default epsilon for all <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="F:osu.Framework.Utils.Precision.DOUBLE_EPSILON">
            <summary>
            The default epsilon for all <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.Precision.DefinitelyBigger(System.Single,System.Single,System.Single)">
            <summary>
            Computes whether a value is definitely greater than another given an acceptable difference.
            </summary>
            <param name="value1">The value to compare.</param>
            <param name="value2">The value to compare against.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.FLOAT_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> is definitely greater than <paramref name="value2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.DefinitelyBigger(System.Double,System.Double,System.Double)">
            <summary>
            Computes whether a value is definitely greater than another given an acceptable difference.
            </summary>
            <param name="value1">The value to compare.</param>
            <param name="value2">The value to compare against.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.DOUBLE_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> is definitely greater than <paramref name="value2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostBigger(System.Single,System.Single,System.Single)">
            <summary>
            Computes whether a value is almost greater than another given an acceptable difference.
            </summary>
            <param name="value1">The value to compare.</param>
            <param name="value2">The value to compare against.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.FLOAT_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> is almost greater than <paramref name="value2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostBigger(System.Double,System.Double,System.Double)">
            <summary>
            Computes whether a value is almost greater than another given an acceptable difference.
            </summary>
            <param name="value1">The value to compare.</param>
            <param name="value2">The value to compare against.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.DOUBLE_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> is almost greater than <paramref name="value2"/>.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostEquals(System.Single,System.Single,System.Single)">
            <summary>
            Computes whether two values are equal within an acceptable difference.
            </summary>
            <param name="value1">The first value.</param>
            <param name="value2">The second value.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.FLOAT_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> and <paramref name="value2"/> are almost equal.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostEquals(osuTK.Vector2,osuTK.Vector2,System.Single)">
            <summary>
            Computes whether two <see cref="T:osuTK.Vector2"/>s are equal within an acceptable difference.
            </summary>
            <param name="value1">The first <see cref="T:osuTK.Vector2"/>.</param>
            <param name="value2">The second <see cref="T:osuTK.Vector2"/>.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.FLOAT_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> and <paramref name="value2"/> are almost equal.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostEquals(System.Double,System.Double,System.Double)">
            <summary>
            Computes whether two values are equal within an acceptable difference.
            </summary>
            <param name="value1">The first value.</param>
            <param name="value2">The second value.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.DOUBLE_EPSILON"/>.</param>
            <returns>Whether <paramref name="value1"/> and <paramref name="value2"/> are almost equal.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Precision.AlmostIntersects(osu.Framework.Graphics.Primitives.RectangleF,osu.Framework.Graphics.Primitives.RectangleF,System.Single)">
            <summary>
            Computes whether two <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>s intersect within an acceptable difference.
            </summary>
            <param name="rect1">The first <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <param name="rect2">The second <see cref="T:osu.Framework.Graphics.Primitives.RectangleF"/>.</param>
            <param name="acceptableDifference">The acceptable difference. Defaults to <see cref="F:osu.Framework.Utils.Precision.FLOAT_EPSILON"/>.</param>
            <returns>Whether <paramref name="rect1"/> and <paramref name="rect2"/> intersect.</returns>
        </member>
        <member name="T:osu.Framework.Utils.RNG">
            <summary>
            Static utility class for random number generation.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.RNG.Next">
            <summary>
            Returns a non-negative signed integer.
            </summary>
            <returns>A non-negative signed integer.</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.Next(System.Int32)">
            <summary>
            Returns a signed integer in the range [0,maxValue).
            </summary>
            <param name="maxValue">The maximum value that should be returned (exclusive, the highest possible result is maxValue - 1).</param>
            <returns>A signed integer in the range [0,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.Next(System.Int32,System.Int32)">
            <summary>
            Returns a signed integer in the range [minValue,maxValue).
            </summary>
            <param name="minValue">The minimum value that should be returned (inclusive).</param>
            <param name="maxValue">The maximum value that should be returned (exclusive, the highest possible result is maxValue - 1).</param>
            <returns>A signed integer in the range [minValue,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextDouble">
            <summary>
            Returns a double-precision floating point number in the range [0,1).
            </summary>
            <returns>A double-precision floating point number in the range [0,1).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextDouble(System.Double)">
            <summary>
            Returns a double-precision floating point number in the range [0,maxValue).
            </summary>
            <param name="maxValue">The maximum value that should be returned (exclusive).</param>
            <returns>A double-precision floating point number in the range [0,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextDouble(System.Double,System.Double)">
            <summary>
            Returns a double-precision floating point number in the range [minValue,maxValue).
            </summary>
            <param name="minValue">The minimum value that should be returned (inclusive).</param>
            <param name="maxValue">The maximum value that should be returned (exclusive).</param>
            <returns>A double-precision floating point number in the range [minValue,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextSingle">
            <summary>
            Returns a single-precision floating point number in the range [0,1).
            </summary>
            <returns>A single-precision floating point number in the range [0,1).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextSingle(System.Single)">
            <summary>
            Returns a single-precision floating point number in the range [0,maxValue).
            </summary>
            <param name="maxValue">The maximum value that should be returned (exclusive).</param>
            <returns>A single-precision floating point number in the range [0,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextSingle(System.Single,System.Single)">
            <summary>
            Returns a single-precision floating point number in the range [minValue,maxValue).
            </summary>
            <param name="minValue">The minimum value that should be returned (inclusive).</param>
            <param name="maxValue">The maximum value that should be returned (exclusive).</param>
            <returns>A single-precision floating point number in the range [minValue,maxValue).</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextBool(System.Double)">
            <summary>
            Returns true or false. The likelihood of true and false are determined by trueChance.
            </summary>
            <param name="trueChance">The chance that the result is true (a value from 0.0 to 1.0).</param>
            <returns>True or false with the given probability.</returns>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextBytes(System.Byte[])">
            <summary>
            Fills the given buffer with random bytes.
            </summary>
            <param name="buffer">The buffer that should be filled.</param>
        </member>
        <member name="M:osu.Framework.Utils.RNG.NextBytes(System.Int32)">
            <summary>
            Creates a new byte array with the given length and fills it with random values.
            </summary>
            <param name="length">The length the byte array should have.</param>
            <returns>The newly created byte array.</returns>
        </member>
        <member name="T:osu.Framework.Utils.SourceGeneratorUtils">
            <summary>
            A set of helper functions for source generators to use in order to simplify their work.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.SourceGeneratorUtils.CacheDependency(osu.Framework.Allocation.DependencyContainer,System.Type,System.Object,osu.Framework.Allocation.CacheInfo,System.Type,System.String,System.String)">
            <summary>
            Caches an object to a <see cref="T:osu.Framework.Allocation.DependencyContainer"/>.
            </summary>
            <param name="container">The <see cref="T:osu.Framework.Allocation.DependencyContainer"/> which the object will be cached to.</param>
            <param name="callerType">The type of object calling this method.</param>
            <param name="obj">The object to be cached.</param>
            <param name="info">The parenting <see cref="T:osu.Framework.Allocation.CacheInfo"/> object.</param>
            <param name="asType">The type which <paramref name="obj"/> should be cached as.</param>
            <param name="cachedName">The name which <paramref name="obj"/> should be cached as.</param>
            <param name="propertyName">A fallback name for <paramref name="obj"/> to be cached as.</param>
            <exception cref="T:osu.Framework.Allocation.NullDependencyException">If <paramref name="obj"/> is <c>null</c>.</exception>
        </member>
        <member name="M:osu.Framework.Utils.SourceGeneratorUtils.GetDependency``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Type,System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Retrieves an object from an <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/>.
            </summary>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to retrieve the dependency from.</param>
            <param name="callerType">The type of object calling this method.</param>
            <param name="cachedName">The name of the object.</param>
            <param name="cachedParent">The parent of the object.</param>
            <param name="allowNulls">Whether the returned object is allowed to be <c>null</c>.</param>
            <param name="rebindBindables">If the object is a <see cref="T:osu.Framework.Bindables.IBindable"/>, whether it should be re-bound via <see cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>.</param>
            <typeparam name="T">The type of the object.</typeparam>
            <returns>The object.</returns>
            <exception cref="T:osu.Framework.Allocation.DependencyNotRegisteredException">If the dependency is not in <paramref name="container"/>.</exception>
        </member>
        <member name="M:osu.Framework.Utils.SourceGeneratorUtils.GetDependency(osu.Framework.Allocation.IReadOnlyDependencyContainer,System.Type,System.Type,System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Retrieves an object from an <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/>.
            </summary>
            <param name="container">The <see cref="T:osu.Framework.Allocation.IReadOnlyDependencyContainer"/> to retrieve the dependency from.</param>
            <param name="type">The type of the object to retrieve.</param>
            <param name="callerType">The type of object calling this method.</param>
            <param name="cachedName">The name of the object.</param>
            <param name="cachedParent">The parent of the object.</param>
            <param name="allowNulls">Whether the returned object is allowed to be <c>null</c>.</param>
            <param name="rebindBindables">If the object is a <see cref="T:osu.Framework.Bindables.IBindable"/>, whether it should be re-bound via <see cref="M:osu.Framework.Bindables.IBindable.GetBoundCopy"/>.</param>
            <returns>The object.</returns>
            <exception cref="T:osu.Framework.Allocation.DependencyNotRegisteredException">If the dependency is not in <paramref name="container"/>.</exception>
        </member>
        <member name="T:osu.Framework.Utils.ThrowHelper">
            <summary>
            Helper class for throwing exceptions in isolated methods, for cases where method inlining is beneficial.
            As throwing directly in that case causes JIT to disable inlining on the surrounding method.
            </summary>
        </member>
        <member name="M:osu.Framework.Utils.Validation.IsFinite(osuTK.Vector2)">
            <summary>
            Returns whether the two coordinates of a <see cref="T:osuTK.Vector2"/> are not infinite or NaN.
            <para>For further information, see <seealso cref="M:System.Single.IsFinite(System.Single)"/>.</para>
            </summary>
            <param name="toCheck">The <see cref="T:osuTK.Vector2"/> to check.</param>
            <returns>False if X or Y are Infinity or NaN, true otherwise. </returns>
        </member>
        <member name="M:osu.Framework.Utils.Validation.IsFinite(osu.Framework.Graphics.MarginPadding)">
            <summary>
            Returns whether the components of a <see cref="T:osu.Framework.Graphics.MarginPadding"/> are not infinite or NaN.
            <para>For further information, see <seealso cref="M:System.Single.IsFinite(System.Single)"/>.</para>
            </summary>
            <param name="toCheck">The <see cref="T:osu.Framework.Graphics.MarginPadding"/> to check.</param>
            <returns>False if either component of <paramref name="toCheck"/> are Infinity or NaN, true otherwise. </returns>
        </member>
        <member name="M:osu.Framework.Utils.Validation.TryParseUri(System.String,System.Uri@)">
            <summary>
            Attempts to parse <paramref name="uriString"/> as an absolute or relative <see cref="T:System.Uri"/> in a platform-agnostic manner.
            </summary>
            <remarks>
            This method is a workaround for inconsistencies across .NET and mono runtimes;
            on mono runtimes paths starting with <c>/</c> are considered absolute as per POSIX,
            and on .NET such paths are considered to be relative.
            This method uses the .NET behaviour.
            For more info, see <a href="https://www.mono-project.com/docs/faq/known-issues/urikind-relativeorabsolute/">Mono documentation</a>.
            </remarks>
            <param name="uriString">The string representation of the URI to parse.</param>
            <param name="result">The resultant parsed URI, if parsing succeeded.</param>
            <returns><see langword="true"/> if parsing succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:osu.Framework.Utils.Validation.IsSupportedBindableNumberType``1">
            <summary>
            Whether the specified type <typeparamref name="T"/> is a number type supported by <see cref="T:osu.Framework.Bindables.BindableNumber`1"/>.
            </summary>
            <remarks>
            Directly comparing typeof(T) to type literal is recognized pattern of JIT and very fast.
            Just a pointer comparison for reference types, or constant for value types.
            The check will become NOP in usages after optimization.
            </remarks>
            <typeparam name="T">The type to check for.</typeparam>
            <returns><see langword="true"/> if the type is supported; <see langword="false"/> otherwise.</returns>
        </member>
    </members>
</doc>
